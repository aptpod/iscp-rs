// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: iscp2/v1/message.proto

package com.github.aptpod.proto.iscp2.v1;

/**
 * Protobuf type {@code iscp2.v1.Message}
 */
public final class Message extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:iscp2.v1.Message)
    MessageOrBuilder {
private static final long serialVersionUID = 0L;
  // Use Message.newBuilder() to construct.
  private Message(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private Message() {
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new Message();
  }

  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.github.aptpod.proto.iscp2.v1.MessageProto.internal_static_iscp2_v1_Message_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.github.aptpod.proto.iscp2.v1.MessageProto.internal_static_iscp2_v1_Message_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.github.aptpod.proto.iscp2.v1.Message.class, com.github.aptpod.proto.iscp2.v1.Message.Builder.class);
  }

  private int messageCase_ = 0;
  @SuppressWarnings("serial")
  private java.lang.Object message_;
  public enum MessageCase
      implements com.google.protobuf.Internal.EnumLite,
          com.google.protobuf.AbstractMessage.InternalOneOfEnum {
    CONNECT_REQUEST(1),
    CONNECT_RESPONSE(2),
    DISCONNECT(3),
    UPSTREAM_OPEN_REQUEST(64),
    UPSTREAM_OPEN_RESPONSE(65),
    UPSTREAM_RESUME_REQUEST(66),
    UPSTREAM_RESUME_RESPONSE(67),
    UPSTREAM_CLOSE_REQUEST(68),
    UPSTREAM_CLOSE_RESPONSE(69),
    UPSTREAM_CHUNK(70),
    UPSTREAM_CHUNK_ACK(71),
    UPSTREAM_METADATA(72),
    UPSTREAM_METADATA_ACK(73),
    DOWNSTREAM_OPEN_REQUEST(128),
    DOWNSTREAM_OPEN_RESPONSE(129),
    DOWNSTREAM_RESUME_REQUEST(130),
    DOWNSTREAM_RESUME_RESPONSE(131),
    DOWNSTREAM_CLOSE_REQUEST(132),
    DOWNSTREAM_CLOSE_RESPONSE(133),
    DOWNSTREAM_CHUNK(134),
    DOWNSTREAM_CHUNK_ACK(135),
    DOWNSTREAM_CHUNK_ACK_COMPLETE(136),
    DOWNSTREAM_METADATA(137),
    DOWNSTREAM_METADATA_ACK(138),
    PING(192),
    PONG(193),
    UPSTREAM_CALL(256),
    UPSTREAM_CALL_ACK(257),
    DOWNSTREAM_CALL(258),
    MESSAGE_NOT_SET(0);
    private final int value;
    private MessageCase(int value) {
      this.value = value;
    }
    /**
     * @param value The number of the enum to look for.
     * @return The enum associated with the given number.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static MessageCase valueOf(int value) {
      return forNumber(value);
    }

    public static MessageCase forNumber(int value) {
      switch (value) {
        case 1: return CONNECT_REQUEST;
        case 2: return CONNECT_RESPONSE;
        case 3: return DISCONNECT;
        case 64: return UPSTREAM_OPEN_REQUEST;
        case 65: return UPSTREAM_OPEN_RESPONSE;
        case 66: return UPSTREAM_RESUME_REQUEST;
        case 67: return UPSTREAM_RESUME_RESPONSE;
        case 68: return UPSTREAM_CLOSE_REQUEST;
        case 69: return UPSTREAM_CLOSE_RESPONSE;
        case 70: return UPSTREAM_CHUNK;
        case 71: return UPSTREAM_CHUNK_ACK;
        case 72: return UPSTREAM_METADATA;
        case 73: return UPSTREAM_METADATA_ACK;
        case 128: return DOWNSTREAM_OPEN_REQUEST;
        case 129: return DOWNSTREAM_OPEN_RESPONSE;
        case 130: return DOWNSTREAM_RESUME_REQUEST;
        case 131: return DOWNSTREAM_RESUME_RESPONSE;
        case 132: return DOWNSTREAM_CLOSE_REQUEST;
        case 133: return DOWNSTREAM_CLOSE_RESPONSE;
        case 134: return DOWNSTREAM_CHUNK;
        case 135: return DOWNSTREAM_CHUNK_ACK;
        case 136: return DOWNSTREAM_CHUNK_ACK_COMPLETE;
        case 137: return DOWNSTREAM_METADATA;
        case 138: return DOWNSTREAM_METADATA_ACK;
        case 192: return PING;
        case 193: return PONG;
        case 256: return UPSTREAM_CALL;
        case 257: return UPSTREAM_CALL_ACK;
        case 258: return DOWNSTREAM_CALL;
        case 0: return MESSAGE_NOT_SET;
        default: return null;
      }
    }
    public int getNumber() {
      return this.value;
    }
  };

  public MessageCase
  getMessageCase() {
    return MessageCase.forNumber(
        messageCase_);
  }

  public static final int CONNECT_REQUEST_FIELD_NUMBER = 1;
  /**
   * <pre>
   * Connect
   * </pre>
   *
   * <code>.iscp2.v1.ConnectRequest connect_request = 1 [json_name = "connectRequest"];</code>
   * @return Whether the connectRequest field is set.
   */
  @java.lang.Override
  public boolean hasConnectRequest() {
    return messageCase_ == 1;
  }
  /**
   * <pre>
   * Connect
   * </pre>
   *
   * <code>.iscp2.v1.ConnectRequest connect_request = 1 [json_name = "connectRequest"];</code>
   * @return The connectRequest.
   */
  @java.lang.Override
  public com.github.aptpod.proto.iscp2.v1.ConnectRequest getConnectRequest() {
    if (messageCase_ == 1) {
       return (com.github.aptpod.proto.iscp2.v1.ConnectRequest) message_;
    }
    return com.github.aptpod.proto.iscp2.v1.ConnectRequest.getDefaultInstance();
  }
  /**
   * <pre>
   * Connect
   * </pre>
   *
   * <code>.iscp2.v1.ConnectRequest connect_request = 1 [json_name = "connectRequest"];</code>
   */
  @java.lang.Override
  public com.github.aptpod.proto.iscp2.v1.ConnectRequestOrBuilder getConnectRequestOrBuilder() {
    if (messageCase_ == 1) {
       return (com.github.aptpod.proto.iscp2.v1.ConnectRequest) message_;
    }
    return com.github.aptpod.proto.iscp2.v1.ConnectRequest.getDefaultInstance();
  }

  public static final int CONNECT_RESPONSE_FIELD_NUMBER = 2;
  /**
   * <code>.iscp2.v1.ConnectResponse connect_response = 2 [json_name = "connectResponse"];</code>
   * @return Whether the connectResponse field is set.
   */
  @java.lang.Override
  public boolean hasConnectResponse() {
    return messageCase_ == 2;
  }
  /**
   * <code>.iscp2.v1.ConnectResponse connect_response = 2 [json_name = "connectResponse"];</code>
   * @return The connectResponse.
   */
  @java.lang.Override
  public com.github.aptpod.proto.iscp2.v1.ConnectResponse getConnectResponse() {
    if (messageCase_ == 2) {
       return (com.github.aptpod.proto.iscp2.v1.ConnectResponse) message_;
    }
    return com.github.aptpod.proto.iscp2.v1.ConnectResponse.getDefaultInstance();
  }
  /**
   * <code>.iscp2.v1.ConnectResponse connect_response = 2 [json_name = "connectResponse"];</code>
   */
  @java.lang.Override
  public com.github.aptpod.proto.iscp2.v1.ConnectResponseOrBuilder getConnectResponseOrBuilder() {
    if (messageCase_ == 2) {
       return (com.github.aptpod.proto.iscp2.v1.ConnectResponse) message_;
    }
    return com.github.aptpod.proto.iscp2.v1.ConnectResponse.getDefaultInstance();
  }

  public static final int DISCONNECT_FIELD_NUMBER = 3;
  /**
   * <code>.iscp2.v1.Disconnect disconnect = 3 [json_name = "disconnect"];</code>
   * @return Whether the disconnect field is set.
   */
  @java.lang.Override
  public boolean hasDisconnect() {
    return messageCase_ == 3;
  }
  /**
   * <code>.iscp2.v1.Disconnect disconnect = 3 [json_name = "disconnect"];</code>
   * @return The disconnect.
   */
  @java.lang.Override
  public com.github.aptpod.proto.iscp2.v1.Disconnect getDisconnect() {
    if (messageCase_ == 3) {
       return (com.github.aptpod.proto.iscp2.v1.Disconnect) message_;
    }
    return com.github.aptpod.proto.iscp2.v1.Disconnect.getDefaultInstance();
  }
  /**
   * <code>.iscp2.v1.Disconnect disconnect = 3 [json_name = "disconnect"];</code>
   */
  @java.lang.Override
  public com.github.aptpod.proto.iscp2.v1.DisconnectOrBuilder getDisconnectOrBuilder() {
    if (messageCase_ == 3) {
       return (com.github.aptpod.proto.iscp2.v1.Disconnect) message_;
    }
    return com.github.aptpod.proto.iscp2.v1.Disconnect.getDefaultInstance();
  }

  public static final int UPSTREAM_OPEN_REQUEST_FIELD_NUMBER = 64;
  /**
   * <pre>
   * Upstream
   * </pre>
   *
   * <code>.iscp2.v1.UpstreamOpenRequest upstream_open_request = 64 [json_name = "upstreamOpenRequest"];</code>
   * @return Whether the upstreamOpenRequest field is set.
   */
  @java.lang.Override
  public boolean hasUpstreamOpenRequest() {
    return messageCase_ == 64;
  }
  /**
   * <pre>
   * Upstream
   * </pre>
   *
   * <code>.iscp2.v1.UpstreamOpenRequest upstream_open_request = 64 [json_name = "upstreamOpenRequest"];</code>
   * @return The upstreamOpenRequest.
   */
  @java.lang.Override
  public com.github.aptpod.proto.iscp2.v1.UpstreamOpenRequest getUpstreamOpenRequest() {
    if (messageCase_ == 64) {
       return (com.github.aptpod.proto.iscp2.v1.UpstreamOpenRequest) message_;
    }
    return com.github.aptpod.proto.iscp2.v1.UpstreamOpenRequest.getDefaultInstance();
  }
  /**
   * <pre>
   * Upstream
   * </pre>
   *
   * <code>.iscp2.v1.UpstreamOpenRequest upstream_open_request = 64 [json_name = "upstreamOpenRequest"];</code>
   */
  @java.lang.Override
  public com.github.aptpod.proto.iscp2.v1.UpstreamOpenRequestOrBuilder getUpstreamOpenRequestOrBuilder() {
    if (messageCase_ == 64) {
       return (com.github.aptpod.proto.iscp2.v1.UpstreamOpenRequest) message_;
    }
    return com.github.aptpod.proto.iscp2.v1.UpstreamOpenRequest.getDefaultInstance();
  }

  public static final int UPSTREAM_OPEN_RESPONSE_FIELD_NUMBER = 65;
  /**
   * <code>.iscp2.v1.UpstreamOpenResponse upstream_open_response = 65 [json_name = "upstreamOpenResponse"];</code>
   * @return Whether the upstreamOpenResponse field is set.
   */
  @java.lang.Override
  public boolean hasUpstreamOpenResponse() {
    return messageCase_ == 65;
  }
  /**
   * <code>.iscp2.v1.UpstreamOpenResponse upstream_open_response = 65 [json_name = "upstreamOpenResponse"];</code>
   * @return The upstreamOpenResponse.
   */
  @java.lang.Override
  public com.github.aptpod.proto.iscp2.v1.UpstreamOpenResponse getUpstreamOpenResponse() {
    if (messageCase_ == 65) {
       return (com.github.aptpod.proto.iscp2.v1.UpstreamOpenResponse) message_;
    }
    return com.github.aptpod.proto.iscp2.v1.UpstreamOpenResponse.getDefaultInstance();
  }
  /**
   * <code>.iscp2.v1.UpstreamOpenResponse upstream_open_response = 65 [json_name = "upstreamOpenResponse"];</code>
   */
  @java.lang.Override
  public com.github.aptpod.proto.iscp2.v1.UpstreamOpenResponseOrBuilder getUpstreamOpenResponseOrBuilder() {
    if (messageCase_ == 65) {
       return (com.github.aptpod.proto.iscp2.v1.UpstreamOpenResponse) message_;
    }
    return com.github.aptpod.proto.iscp2.v1.UpstreamOpenResponse.getDefaultInstance();
  }

  public static final int UPSTREAM_RESUME_REQUEST_FIELD_NUMBER = 66;
  /**
   * <code>.iscp2.v1.UpstreamResumeRequest upstream_resume_request = 66 [json_name = "upstreamResumeRequest"];</code>
   * @return Whether the upstreamResumeRequest field is set.
   */
  @java.lang.Override
  public boolean hasUpstreamResumeRequest() {
    return messageCase_ == 66;
  }
  /**
   * <code>.iscp2.v1.UpstreamResumeRequest upstream_resume_request = 66 [json_name = "upstreamResumeRequest"];</code>
   * @return The upstreamResumeRequest.
   */
  @java.lang.Override
  public com.github.aptpod.proto.iscp2.v1.UpstreamResumeRequest getUpstreamResumeRequest() {
    if (messageCase_ == 66) {
       return (com.github.aptpod.proto.iscp2.v1.UpstreamResumeRequest) message_;
    }
    return com.github.aptpod.proto.iscp2.v1.UpstreamResumeRequest.getDefaultInstance();
  }
  /**
   * <code>.iscp2.v1.UpstreamResumeRequest upstream_resume_request = 66 [json_name = "upstreamResumeRequest"];</code>
   */
  @java.lang.Override
  public com.github.aptpod.proto.iscp2.v1.UpstreamResumeRequestOrBuilder getUpstreamResumeRequestOrBuilder() {
    if (messageCase_ == 66) {
       return (com.github.aptpod.proto.iscp2.v1.UpstreamResumeRequest) message_;
    }
    return com.github.aptpod.proto.iscp2.v1.UpstreamResumeRequest.getDefaultInstance();
  }

  public static final int UPSTREAM_RESUME_RESPONSE_FIELD_NUMBER = 67;
  /**
   * <code>.iscp2.v1.UpstreamResumeResponse upstream_resume_response = 67 [json_name = "upstreamResumeResponse"];</code>
   * @return Whether the upstreamResumeResponse field is set.
   */
  @java.lang.Override
  public boolean hasUpstreamResumeResponse() {
    return messageCase_ == 67;
  }
  /**
   * <code>.iscp2.v1.UpstreamResumeResponse upstream_resume_response = 67 [json_name = "upstreamResumeResponse"];</code>
   * @return The upstreamResumeResponse.
   */
  @java.lang.Override
  public com.github.aptpod.proto.iscp2.v1.UpstreamResumeResponse getUpstreamResumeResponse() {
    if (messageCase_ == 67) {
       return (com.github.aptpod.proto.iscp2.v1.UpstreamResumeResponse) message_;
    }
    return com.github.aptpod.proto.iscp2.v1.UpstreamResumeResponse.getDefaultInstance();
  }
  /**
   * <code>.iscp2.v1.UpstreamResumeResponse upstream_resume_response = 67 [json_name = "upstreamResumeResponse"];</code>
   */
  @java.lang.Override
  public com.github.aptpod.proto.iscp2.v1.UpstreamResumeResponseOrBuilder getUpstreamResumeResponseOrBuilder() {
    if (messageCase_ == 67) {
       return (com.github.aptpod.proto.iscp2.v1.UpstreamResumeResponse) message_;
    }
    return com.github.aptpod.proto.iscp2.v1.UpstreamResumeResponse.getDefaultInstance();
  }

  public static final int UPSTREAM_CLOSE_REQUEST_FIELD_NUMBER = 68;
  /**
   * <code>.iscp2.v1.UpstreamCloseRequest upstream_close_request = 68 [json_name = "upstreamCloseRequest"];</code>
   * @return Whether the upstreamCloseRequest field is set.
   */
  @java.lang.Override
  public boolean hasUpstreamCloseRequest() {
    return messageCase_ == 68;
  }
  /**
   * <code>.iscp2.v1.UpstreamCloseRequest upstream_close_request = 68 [json_name = "upstreamCloseRequest"];</code>
   * @return The upstreamCloseRequest.
   */
  @java.lang.Override
  public com.github.aptpod.proto.iscp2.v1.UpstreamCloseRequest getUpstreamCloseRequest() {
    if (messageCase_ == 68) {
       return (com.github.aptpod.proto.iscp2.v1.UpstreamCloseRequest) message_;
    }
    return com.github.aptpod.proto.iscp2.v1.UpstreamCloseRequest.getDefaultInstance();
  }
  /**
   * <code>.iscp2.v1.UpstreamCloseRequest upstream_close_request = 68 [json_name = "upstreamCloseRequest"];</code>
   */
  @java.lang.Override
  public com.github.aptpod.proto.iscp2.v1.UpstreamCloseRequestOrBuilder getUpstreamCloseRequestOrBuilder() {
    if (messageCase_ == 68) {
       return (com.github.aptpod.proto.iscp2.v1.UpstreamCloseRequest) message_;
    }
    return com.github.aptpod.proto.iscp2.v1.UpstreamCloseRequest.getDefaultInstance();
  }

  public static final int UPSTREAM_CLOSE_RESPONSE_FIELD_NUMBER = 69;
  /**
   * <code>.iscp2.v1.UpstreamCloseResponse upstream_close_response = 69 [json_name = "upstreamCloseResponse"];</code>
   * @return Whether the upstreamCloseResponse field is set.
   */
  @java.lang.Override
  public boolean hasUpstreamCloseResponse() {
    return messageCase_ == 69;
  }
  /**
   * <code>.iscp2.v1.UpstreamCloseResponse upstream_close_response = 69 [json_name = "upstreamCloseResponse"];</code>
   * @return The upstreamCloseResponse.
   */
  @java.lang.Override
  public com.github.aptpod.proto.iscp2.v1.UpstreamCloseResponse getUpstreamCloseResponse() {
    if (messageCase_ == 69) {
       return (com.github.aptpod.proto.iscp2.v1.UpstreamCloseResponse) message_;
    }
    return com.github.aptpod.proto.iscp2.v1.UpstreamCloseResponse.getDefaultInstance();
  }
  /**
   * <code>.iscp2.v1.UpstreamCloseResponse upstream_close_response = 69 [json_name = "upstreamCloseResponse"];</code>
   */
  @java.lang.Override
  public com.github.aptpod.proto.iscp2.v1.UpstreamCloseResponseOrBuilder getUpstreamCloseResponseOrBuilder() {
    if (messageCase_ == 69) {
       return (com.github.aptpod.proto.iscp2.v1.UpstreamCloseResponse) message_;
    }
    return com.github.aptpod.proto.iscp2.v1.UpstreamCloseResponse.getDefaultInstance();
  }

  public static final int UPSTREAM_CHUNK_FIELD_NUMBER = 70;
  /**
   * <code>.iscp2.v1.UpstreamChunk upstream_chunk = 70 [json_name = "upstreamChunk"];</code>
   * @return Whether the upstreamChunk field is set.
   */
  @java.lang.Override
  public boolean hasUpstreamChunk() {
    return messageCase_ == 70;
  }
  /**
   * <code>.iscp2.v1.UpstreamChunk upstream_chunk = 70 [json_name = "upstreamChunk"];</code>
   * @return The upstreamChunk.
   */
  @java.lang.Override
  public com.github.aptpod.proto.iscp2.v1.UpstreamChunk getUpstreamChunk() {
    if (messageCase_ == 70) {
       return (com.github.aptpod.proto.iscp2.v1.UpstreamChunk) message_;
    }
    return com.github.aptpod.proto.iscp2.v1.UpstreamChunk.getDefaultInstance();
  }
  /**
   * <code>.iscp2.v1.UpstreamChunk upstream_chunk = 70 [json_name = "upstreamChunk"];</code>
   */
  @java.lang.Override
  public com.github.aptpod.proto.iscp2.v1.UpstreamChunkOrBuilder getUpstreamChunkOrBuilder() {
    if (messageCase_ == 70) {
       return (com.github.aptpod.proto.iscp2.v1.UpstreamChunk) message_;
    }
    return com.github.aptpod.proto.iscp2.v1.UpstreamChunk.getDefaultInstance();
  }

  public static final int UPSTREAM_CHUNK_ACK_FIELD_NUMBER = 71;
  /**
   * <code>.iscp2.v1.UpstreamChunkAck upstream_chunk_ack = 71 [json_name = "upstreamChunkAck"];</code>
   * @return Whether the upstreamChunkAck field is set.
   */
  @java.lang.Override
  public boolean hasUpstreamChunkAck() {
    return messageCase_ == 71;
  }
  /**
   * <code>.iscp2.v1.UpstreamChunkAck upstream_chunk_ack = 71 [json_name = "upstreamChunkAck"];</code>
   * @return The upstreamChunkAck.
   */
  @java.lang.Override
  public com.github.aptpod.proto.iscp2.v1.UpstreamChunkAck getUpstreamChunkAck() {
    if (messageCase_ == 71) {
       return (com.github.aptpod.proto.iscp2.v1.UpstreamChunkAck) message_;
    }
    return com.github.aptpod.proto.iscp2.v1.UpstreamChunkAck.getDefaultInstance();
  }
  /**
   * <code>.iscp2.v1.UpstreamChunkAck upstream_chunk_ack = 71 [json_name = "upstreamChunkAck"];</code>
   */
  @java.lang.Override
  public com.github.aptpod.proto.iscp2.v1.UpstreamChunkAckOrBuilder getUpstreamChunkAckOrBuilder() {
    if (messageCase_ == 71) {
       return (com.github.aptpod.proto.iscp2.v1.UpstreamChunkAck) message_;
    }
    return com.github.aptpod.proto.iscp2.v1.UpstreamChunkAck.getDefaultInstance();
  }

  public static final int UPSTREAM_METADATA_FIELD_NUMBER = 72;
  /**
   * <code>.iscp2.v1.UpstreamMetadata upstream_metadata = 72 [json_name = "upstreamMetadata"];</code>
   * @return Whether the upstreamMetadata field is set.
   */
  @java.lang.Override
  public boolean hasUpstreamMetadata() {
    return messageCase_ == 72;
  }
  /**
   * <code>.iscp2.v1.UpstreamMetadata upstream_metadata = 72 [json_name = "upstreamMetadata"];</code>
   * @return The upstreamMetadata.
   */
  @java.lang.Override
  public com.github.aptpod.proto.iscp2.v1.UpstreamMetadata getUpstreamMetadata() {
    if (messageCase_ == 72) {
       return (com.github.aptpod.proto.iscp2.v1.UpstreamMetadata) message_;
    }
    return com.github.aptpod.proto.iscp2.v1.UpstreamMetadata.getDefaultInstance();
  }
  /**
   * <code>.iscp2.v1.UpstreamMetadata upstream_metadata = 72 [json_name = "upstreamMetadata"];</code>
   */
  @java.lang.Override
  public com.github.aptpod.proto.iscp2.v1.UpstreamMetadataOrBuilder getUpstreamMetadataOrBuilder() {
    if (messageCase_ == 72) {
       return (com.github.aptpod.proto.iscp2.v1.UpstreamMetadata) message_;
    }
    return com.github.aptpod.proto.iscp2.v1.UpstreamMetadata.getDefaultInstance();
  }

  public static final int UPSTREAM_METADATA_ACK_FIELD_NUMBER = 73;
  /**
   * <code>.iscp2.v1.UpstreamMetadataAck upstream_metadata_ack = 73 [json_name = "upstreamMetadataAck"];</code>
   * @return Whether the upstreamMetadataAck field is set.
   */
  @java.lang.Override
  public boolean hasUpstreamMetadataAck() {
    return messageCase_ == 73;
  }
  /**
   * <code>.iscp2.v1.UpstreamMetadataAck upstream_metadata_ack = 73 [json_name = "upstreamMetadataAck"];</code>
   * @return The upstreamMetadataAck.
   */
  @java.lang.Override
  public com.github.aptpod.proto.iscp2.v1.UpstreamMetadataAck getUpstreamMetadataAck() {
    if (messageCase_ == 73) {
       return (com.github.aptpod.proto.iscp2.v1.UpstreamMetadataAck) message_;
    }
    return com.github.aptpod.proto.iscp2.v1.UpstreamMetadataAck.getDefaultInstance();
  }
  /**
   * <code>.iscp2.v1.UpstreamMetadataAck upstream_metadata_ack = 73 [json_name = "upstreamMetadataAck"];</code>
   */
  @java.lang.Override
  public com.github.aptpod.proto.iscp2.v1.UpstreamMetadataAckOrBuilder getUpstreamMetadataAckOrBuilder() {
    if (messageCase_ == 73) {
       return (com.github.aptpod.proto.iscp2.v1.UpstreamMetadataAck) message_;
    }
    return com.github.aptpod.proto.iscp2.v1.UpstreamMetadataAck.getDefaultInstance();
  }

  public static final int DOWNSTREAM_OPEN_REQUEST_FIELD_NUMBER = 128;
  /**
   * <pre>
   * Downstream
   * </pre>
   *
   * <code>.iscp2.v1.DownstreamOpenRequest downstream_open_request = 128 [json_name = "downstreamOpenRequest"];</code>
   * @return Whether the downstreamOpenRequest field is set.
   */
  @java.lang.Override
  public boolean hasDownstreamOpenRequest() {
    return messageCase_ == 128;
  }
  /**
   * <pre>
   * Downstream
   * </pre>
   *
   * <code>.iscp2.v1.DownstreamOpenRequest downstream_open_request = 128 [json_name = "downstreamOpenRequest"];</code>
   * @return The downstreamOpenRequest.
   */
  @java.lang.Override
  public com.github.aptpod.proto.iscp2.v1.DownstreamOpenRequest getDownstreamOpenRequest() {
    if (messageCase_ == 128) {
       return (com.github.aptpod.proto.iscp2.v1.DownstreamOpenRequest) message_;
    }
    return com.github.aptpod.proto.iscp2.v1.DownstreamOpenRequest.getDefaultInstance();
  }
  /**
   * <pre>
   * Downstream
   * </pre>
   *
   * <code>.iscp2.v1.DownstreamOpenRequest downstream_open_request = 128 [json_name = "downstreamOpenRequest"];</code>
   */
  @java.lang.Override
  public com.github.aptpod.proto.iscp2.v1.DownstreamOpenRequestOrBuilder getDownstreamOpenRequestOrBuilder() {
    if (messageCase_ == 128) {
       return (com.github.aptpod.proto.iscp2.v1.DownstreamOpenRequest) message_;
    }
    return com.github.aptpod.proto.iscp2.v1.DownstreamOpenRequest.getDefaultInstance();
  }

  public static final int DOWNSTREAM_OPEN_RESPONSE_FIELD_NUMBER = 129;
  /**
   * <code>.iscp2.v1.DownstreamOpenResponse downstream_open_response = 129 [json_name = "downstreamOpenResponse"];</code>
   * @return Whether the downstreamOpenResponse field is set.
   */
  @java.lang.Override
  public boolean hasDownstreamOpenResponse() {
    return messageCase_ == 129;
  }
  /**
   * <code>.iscp2.v1.DownstreamOpenResponse downstream_open_response = 129 [json_name = "downstreamOpenResponse"];</code>
   * @return The downstreamOpenResponse.
   */
  @java.lang.Override
  public com.github.aptpod.proto.iscp2.v1.DownstreamOpenResponse getDownstreamOpenResponse() {
    if (messageCase_ == 129) {
       return (com.github.aptpod.proto.iscp2.v1.DownstreamOpenResponse) message_;
    }
    return com.github.aptpod.proto.iscp2.v1.DownstreamOpenResponse.getDefaultInstance();
  }
  /**
   * <code>.iscp2.v1.DownstreamOpenResponse downstream_open_response = 129 [json_name = "downstreamOpenResponse"];</code>
   */
  @java.lang.Override
  public com.github.aptpod.proto.iscp2.v1.DownstreamOpenResponseOrBuilder getDownstreamOpenResponseOrBuilder() {
    if (messageCase_ == 129) {
       return (com.github.aptpod.proto.iscp2.v1.DownstreamOpenResponse) message_;
    }
    return com.github.aptpod.proto.iscp2.v1.DownstreamOpenResponse.getDefaultInstance();
  }

  public static final int DOWNSTREAM_RESUME_REQUEST_FIELD_NUMBER = 130;
  /**
   * <code>.iscp2.v1.DownstreamResumeRequest downstream_resume_request = 130 [json_name = "downstreamResumeRequest"];</code>
   * @return Whether the downstreamResumeRequest field is set.
   */
  @java.lang.Override
  public boolean hasDownstreamResumeRequest() {
    return messageCase_ == 130;
  }
  /**
   * <code>.iscp2.v1.DownstreamResumeRequest downstream_resume_request = 130 [json_name = "downstreamResumeRequest"];</code>
   * @return The downstreamResumeRequest.
   */
  @java.lang.Override
  public com.github.aptpod.proto.iscp2.v1.DownstreamResumeRequest getDownstreamResumeRequest() {
    if (messageCase_ == 130) {
       return (com.github.aptpod.proto.iscp2.v1.DownstreamResumeRequest) message_;
    }
    return com.github.aptpod.proto.iscp2.v1.DownstreamResumeRequest.getDefaultInstance();
  }
  /**
   * <code>.iscp2.v1.DownstreamResumeRequest downstream_resume_request = 130 [json_name = "downstreamResumeRequest"];</code>
   */
  @java.lang.Override
  public com.github.aptpod.proto.iscp2.v1.DownstreamResumeRequestOrBuilder getDownstreamResumeRequestOrBuilder() {
    if (messageCase_ == 130) {
       return (com.github.aptpod.proto.iscp2.v1.DownstreamResumeRequest) message_;
    }
    return com.github.aptpod.proto.iscp2.v1.DownstreamResumeRequest.getDefaultInstance();
  }

  public static final int DOWNSTREAM_RESUME_RESPONSE_FIELD_NUMBER = 131;
  /**
   * <code>.iscp2.v1.DownstreamResumeResponse downstream_resume_response = 131 [json_name = "downstreamResumeResponse"];</code>
   * @return Whether the downstreamResumeResponse field is set.
   */
  @java.lang.Override
  public boolean hasDownstreamResumeResponse() {
    return messageCase_ == 131;
  }
  /**
   * <code>.iscp2.v1.DownstreamResumeResponse downstream_resume_response = 131 [json_name = "downstreamResumeResponse"];</code>
   * @return The downstreamResumeResponse.
   */
  @java.lang.Override
  public com.github.aptpod.proto.iscp2.v1.DownstreamResumeResponse getDownstreamResumeResponse() {
    if (messageCase_ == 131) {
       return (com.github.aptpod.proto.iscp2.v1.DownstreamResumeResponse) message_;
    }
    return com.github.aptpod.proto.iscp2.v1.DownstreamResumeResponse.getDefaultInstance();
  }
  /**
   * <code>.iscp2.v1.DownstreamResumeResponse downstream_resume_response = 131 [json_name = "downstreamResumeResponse"];</code>
   */
  @java.lang.Override
  public com.github.aptpod.proto.iscp2.v1.DownstreamResumeResponseOrBuilder getDownstreamResumeResponseOrBuilder() {
    if (messageCase_ == 131) {
       return (com.github.aptpod.proto.iscp2.v1.DownstreamResumeResponse) message_;
    }
    return com.github.aptpod.proto.iscp2.v1.DownstreamResumeResponse.getDefaultInstance();
  }

  public static final int DOWNSTREAM_CLOSE_REQUEST_FIELD_NUMBER = 132;
  /**
   * <code>.iscp2.v1.DownstreamCloseRequest downstream_close_request = 132 [json_name = "downstreamCloseRequest"];</code>
   * @return Whether the downstreamCloseRequest field is set.
   */
  @java.lang.Override
  public boolean hasDownstreamCloseRequest() {
    return messageCase_ == 132;
  }
  /**
   * <code>.iscp2.v1.DownstreamCloseRequest downstream_close_request = 132 [json_name = "downstreamCloseRequest"];</code>
   * @return The downstreamCloseRequest.
   */
  @java.lang.Override
  public com.github.aptpod.proto.iscp2.v1.DownstreamCloseRequest getDownstreamCloseRequest() {
    if (messageCase_ == 132) {
       return (com.github.aptpod.proto.iscp2.v1.DownstreamCloseRequest) message_;
    }
    return com.github.aptpod.proto.iscp2.v1.DownstreamCloseRequest.getDefaultInstance();
  }
  /**
   * <code>.iscp2.v1.DownstreamCloseRequest downstream_close_request = 132 [json_name = "downstreamCloseRequest"];</code>
   */
  @java.lang.Override
  public com.github.aptpod.proto.iscp2.v1.DownstreamCloseRequestOrBuilder getDownstreamCloseRequestOrBuilder() {
    if (messageCase_ == 132) {
       return (com.github.aptpod.proto.iscp2.v1.DownstreamCloseRequest) message_;
    }
    return com.github.aptpod.proto.iscp2.v1.DownstreamCloseRequest.getDefaultInstance();
  }

  public static final int DOWNSTREAM_CLOSE_RESPONSE_FIELD_NUMBER = 133;
  /**
   * <code>.iscp2.v1.DownstreamCloseResponse downstream_close_response = 133 [json_name = "downstreamCloseResponse"];</code>
   * @return Whether the downstreamCloseResponse field is set.
   */
  @java.lang.Override
  public boolean hasDownstreamCloseResponse() {
    return messageCase_ == 133;
  }
  /**
   * <code>.iscp2.v1.DownstreamCloseResponse downstream_close_response = 133 [json_name = "downstreamCloseResponse"];</code>
   * @return The downstreamCloseResponse.
   */
  @java.lang.Override
  public com.github.aptpod.proto.iscp2.v1.DownstreamCloseResponse getDownstreamCloseResponse() {
    if (messageCase_ == 133) {
       return (com.github.aptpod.proto.iscp2.v1.DownstreamCloseResponse) message_;
    }
    return com.github.aptpod.proto.iscp2.v1.DownstreamCloseResponse.getDefaultInstance();
  }
  /**
   * <code>.iscp2.v1.DownstreamCloseResponse downstream_close_response = 133 [json_name = "downstreamCloseResponse"];</code>
   */
  @java.lang.Override
  public com.github.aptpod.proto.iscp2.v1.DownstreamCloseResponseOrBuilder getDownstreamCloseResponseOrBuilder() {
    if (messageCase_ == 133) {
       return (com.github.aptpod.proto.iscp2.v1.DownstreamCloseResponse) message_;
    }
    return com.github.aptpod.proto.iscp2.v1.DownstreamCloseResponse.getDefaultInstance();
  }

  public static final int DOWNSTREAM_CHUNK_FIELD_NUMBER = 134;
  /**
   * <code>.iscp2.v1.DownstreamChunk downstream_chunk = 134 [json_name = "downstreamChunk"];</code>
   * @return Whether the downstreamChunk field is set.
   */
  @java.lang.Override
  public boolean hasDownstreamChunk() {
    return messageCase_ == 134;
  }
  /**
   * <code>.iscp2.v1.DownstreamChunk downstream_chunk = 134 [json_name = "downstreamChunk"];</code>
   * @return The downstreamChunk.
   */
  @java.lang.Override
  public com.github.aptpod.proto.iscp2.v1.DownstreamChunk getDownstreamChunk() {
    if (messageCase_ == 134) {
       return (com.github.aptpod.proto.iscp2.v1.DownstreamChunk) message_;
    }
    return com.github.aptpod.proto.iscp2.v1.DownstreamChunk.getDefaultInstance();
  }
  /**
   * <code>.iscp2.v1.DownstreamChunk downstream_chunk = 134 [json_name = "downstreamChunk"];</code>
   */
  @java.lang.Override
  public com.github.aptpod.proto.iscp2.v1.DownstreamChunkOrBuilder getDownstreamChunkOrBuilder() {
    if (messageCase_ == 134) {
       return (com.github.aptpod.proto.iscp2.v1.DownstreamChunk) message_;
    }
    return com.github.aptpod.proto.iscp2.v1.DownstreamChunk.getDefaultInstance();
  }

  public static final int DOWNSTREAM_CHUNK_ACK_FIELD_NUMBER = 135;
  /**
   * <code>.iscp2.v1.DownstreamChunkAck downstream_chunk_ack = 135 [json_name = "downstreamChunkAck"];</code>
   * @return Whether the downstreamChunkAck field is set.
   */
  @java.lang.Override
  public boolean hasDownstreamChunkAck() {
    return messageCase_ == 135;
  }
  /**
   * <code>.iscp2.v1.DownstreamChunkAck downstream_chunk_ack = 135 [json_name = "downstreamChunkAck"];</code>
   * @return The downstreamChunkAck.
   */
  @java.lang.Override
  public com.github.aptpod.proto.iscp2.v1.DownstreamChunkAck getDownstreamChunkAck() {
    if (messageCase_ == 135) {
       return (com.github.aptpod.proto.iscp2.v1.DownstreamChunkAck) message_;
    }
    return com.github.aptpod.proto.iscp2.v1.DownstreamChunkAck.getDefaultInstance();
  }
  /**
   * <code>.iscp2.v1.DownstreamChunkAck downstream_chunk_ack = 135 [json_name = "downstreamChunkAck"];</code>
   */
  @java.lang.Override
  public com.github.aptpod.proto.iscp2.v1.DownstreamChunkAckOrBuilder getDownstreamChunkAckOrBuilder() {
    if (messageCase_ == 135) {
       return (com.github.aptpod.proto.iscp2.v1.DownstreamChunkAck) message_;
    }
    return com.github.aptpod.proto.iscp2.v1.DownstreamChunkAck.getDefaultInstance();
  }

  public static final int DOWNSTREAM_CHUNK_ACK_COMPLETE_FIELD_NUMBER = 136;
  /**
   * <code>.iscp2.v1.DownstreamChunkAckComplete downstream_chunk_ack_complete = 136 [json_name = "downstreamChunkAckComplete"];</code>
   * @return Whether the downstreamChunkAckComplete field is set.
   */
  @java.lang.Override
  public boolean hasDownstreamChunkAckComplete() {
    return messageCase_ == 136;
  }
  /**
   * <code>.iscp2.v1.DownstreamChunkAckComplete downstream_chunk_ack_complete = 136 [json_name = "downstreamChunkAckComplete"];</code>
   * @return The downstreamChunkAckComplete.
   */
  @java.lang.Override
  public com.github.aptpod.proto.iscp2.v1.DownstreamChunkAckComplete getDownstreamChunkAckComplete() {
    if (messageCase_ == 136) {
       return (com.github.aptpod.proto.iscp2.v1.DownstreamChunkAckComplete) message_;
    }
    return com.github.aptpod.proto.iscp2.v1.DownstreamChunkAckComplete.getDefaultInstance();
  }
  /**
   * <code>.iscp2.v1.DownstreamChunkAckComplete downstream_chunk_ack_complete = 136 [json_name = "downstreamChunkAckComplete"];</code>
   */
  @java.lang.Override
  public com.github.aptpod.proto.iscp2.v1.DownstreamChunkAckCompleteOrBuilder getDownstreamChunkAckCompleteOrBuilder() {
    if (messageCase_ == 136) {
       return (com.github.aptpod.proto.iscp2.v1.DownstreamChunkAckComplete) message_;
    }
    return com.github.aptpod.proto.iscp2.v1.DownstreamChunkAckComplete.getDefaultInstance();
  }

  public static final int DOWNSTREAM_METADATA_FIELD_NUMBER = 137;
  /**
   * <code>.iscp2.v1.DownstreamMetadata downstream_metadata = 137 [json_name = "downstreamMetadata"];</code>
   * @return Whether the downstreamMetadata field is set.
   */
  @java.lang.Override
  public boolean hasDownstreamMetadata() {
    return messageCase_ == 137;
  }
  /**
   * <code>.iscp2.v1.DownstreamMetadata downstream_metadata = 137 [json_name = "downstreamMetadata"];</code>
   * @return The downstreamMetadata.
   */
  @java.lang.Override
  public com.github.aptpod.proto.iscp2.v1.DownstreamMetadata getDownstreamMetadata() {
    if (messageCase_ == 137) {
       return (com.github.aptpod.proto.iscp2.v1.DownstreamMetadata) message_;
    }
    return com.github.aptpod.proto.iscp2.v1.DownstreamMetadata.getDefaultInstance();
  }
  /**
   * <code>.iscp2.v1.DownstreamMetadata downstream_metadata = 137 [json_name = "downstreamMetadata"];</code>
   */
  @java.lang.Override
  public com.github.aptpod.proto.iscp2.v1.DownstreamMetadataOrBuilder getDownstreamMetadataOrBuilder() {
    if (messageCase_ == 137) {
       return (com.github.aptpod.proto.iscp2.v1.DownstreamMetadata) message_;
    }
    return com.github.aptpod.proto.iscp2.v1.DownstreamMetadata.getDefaultInstance();
  }

  public static final int DOWNSTREAM_METADATA_ACK_FIELD_NUMBER = 138;
  /**
   * <code>.iscp2.v1.DownstreamMetadataAck downstream_metadata_ack = 138 [json_name = "downstreamMetadataAck"];</code>
   * @return Whether the downstreamMetadataAck field is set.
   */
  @java.lang.Override
  public boolean hasDownstreamMetadataAck() {
    return messageCase_ == 138;
  }
  /**
   * <code>.iscp2.v1.DownstreamMetadataAck downstream_metadata_ack = 138 [json_name = "downstreamMetadataAck"];</code>
   * @return The downstreamMetadataAck.
   */
  @java.lang.Override
  public com.github.aptpod.proto.iscp2.v1.DownstreamMetadataAck getDownstreamMetadataAck() {
    if (messageCase_ == 138) {
       return (com.github.aptpod.proto.iscp2.v1.DownstreamMetadataAck) message_;
    }
    return com.github.aptpod.proto.iscp2.v1.DownstreamMetadataAck.getDefaultInstance();
  }
  /**
   * <code>.iscp2.v1.DownstreamMetadataAck downstream_metadata_ack = 138 [json_name = "downstreamMetadataAck"];</code>
   */
  @java.lang.Override
  public com.github.aptpod.proto.iscp2.v1.DownstreamMetadataAckOrBuilder getDownstreamMetadataAckOrBuilder() {
    if (messageCase_ == 138) {
       return (com.github.aptpod.proto.iscp2.v1.DownstreamMetadataAck) message_;
    }
    return com.github.aptpod.proto.iscp2.v1.DownstreamMetadataAck.getDefaultInstance();
  }

  public static final int PING_FIELD_NUMBER = 192;
  /**
   * <pre>
   * Ping/Pong
   * </pre>
   *
   * <code>.iscp2.v1.Ping ping = 192 [json_name = "ping"];</code>
   * @return Whether the ping field is set.
   */
  @java.lang.Override
  public boolean hasPing() {
    return messageCase_ == 192;
  }
  /**
   * <pre>
   * Ping/Pong
   * </pre>
   *
   * <code>.iscp2.v1.Ping ping = 192 [json_name = "ping"];</code>
   * @return The ping.
   */
  @java.lang.Override
  public com.github.aptpod.proto.iscp2.v1.Ping getPing() {
    if (messageCase_ == 192) {
       return (com.github.aptpod.proto.iscp2.v1.Ping) message_;
    }
    return com.github.aptpod.proto.iscp2.v1.Ping.getDefaultInstance();
  }
  /**
   * <pre>
   * Ping/Pong
   * </pre>
   *
   * <code>.iscp2.v1.Ping ping = 192 [json_name = "ping"];</code>
   */
  @java.lang.Override
  public com.github.aptpod.proto.iscp2.v1.PingOrBuilder getPingOrBuilder() {
    if (messageCase_ == 192) {
       return (com.github.aptpod.proto.iscp2.v1.Ping) message_;
    }
    return com.github.aptpod.proto.iscp2.v1.Ping.getDefaultInstance();
  }

  public static final int PONG_FIELD_NUMBER = 193;
  /**
   * <code>.iscp2.v1.Pong pong = 193 [json_name = "pong"];</code>
   * @return Whether the pong field is set.
   */
  @java.lang.Override
  public boolean hasPong() {
    return messageCase_ == 193;
  }
  /**
   * <code>.iscp2.v1.Pong pong = 193 [json_name = "pong"];</code>
   * @return The pong.
   */
  @java.lang.Override
  public com.github.aptpod.proto.iscp2.v1.Pong getPong() {
    if (messageCase_ == 193) {
       return (com.github.aptpod.proto.iscp2.v1.Pong) message_;
    }
    return com.github.aptpod.proto.iscp2.v1.Pong.getDefaultInstance();
  }
  /**
   * <code>.iscp2.v1.Pong pong = 193 [json_name = "pong"];</code>
   */
  @java.lang.Override
  public com.github.aptpod.proto.iscp2.v1.PongOrBuilder getPongOrBuilder() {
    if (messageCase_ == 193) {
       return (com.github.aptpod.proto.iscp2.v1.Pong) message_;
    }
    return com.github.aptpod.proto.iscp2.v1.Pong.getDefaultInstance();
  }

  public static final int UPSTREAM_CALL_FIELD_NUMBER = 256;
  /**
   * <pre>
   * E2E Call
   * </pre>
   *
   * <code>.iscp2.v1.UpstreamCall upstream_call = 256 [json_name = "upstreamCall"];</code>
   * @return Whether the upstreamCall field is set.
   */
  @java.lang.Override
  public boolean hasUpstreamCall() {
    return messageCase_ == 256;
  }
  /**
   * <pre>
   * E2E Call
   * </pre>
   *
   * <code>.iscp2.v1.UpstreamCall upstream_call = 256 [json_name = "upstreamCall"];</code>
   * @return The upstreamCall.
   */
  @java.lang.Override
  public com.github.aptpod.proto.iscp2.v1.UpstreamCall getUpstreamCall() {
    if (messageCase_ == 256) {
       return (com.github.aptpod.proto.iscp2.v1.UpstreamCall) message_;
    }
    return com.github.aptpod.proto.iscp2.v1.UpstreamCall.getDefaultInstance();
  }
  /**
   * <pre>
   * E2E Call
   * </pre>
   *
   * <code>.iscp2.v1.UpstreamCall upstream_call = 256 [json_name = "upstreamCall"];</code>
   */
  @java.lang.Override
  public com.github.aptpod.proto.iscp2.v1.UpstreamCallOrBuilder getUpstreamCallOrBuilder() {
    if (messageCase_ == 256) {
       return (com.github.aptpod.proto.iscp2.v1.UpstreamCall) message_;
    }
    return com.github.aptpod.proto.iscp2.v1.UpstreamCall.getDefaultInstance();
  }

  public static final int UPSTREAM_CALL_ACK_FIELD_NUMBER = 257;
  /**
   * <code>.iscp2.v1.UpstreamCallAck upstream_call_ack = 257 [json_name = "upstreamCallAck"];</code>
   * @return Whether the upstreamCallAck field is set.
   */
  @java.lang.Override
  public boolean hasUpstreamCallAck() {
    return messageCase_ == 257;
  }
  /**
   * <code>.iscp2.v1.UpstreamCallAck upstream_call_ack = 257 [json_name = "upstreamCallAck"];</code>
   * @return The upstreamCallAck.
   */
  @java.lang.Override
  public com.github.aptpod.proto.iscp2.v1.UpstreamCallAck getUpstreamCallAck() {
    if (messageCase_ == 257) {
       return (com.github.aptpod.proto.iscp2.v1.UpstreamCallAck) message_;
    }
    return com.github.aptpod.proto.iscp2.v1.UpstreamCallAck.getDefaultInstance();
  }
  /**
   * <code>.iscp2.v1.UpstreamCallAck upstream_call_ack = 257 [json_name = "upstreamCallAck"];</code>
   */
  @java.lang.Override
  public com.github.aptpod.proto.iscp2.v1.UpstreamCallAckOrBuilder getUpstreamCallAckOrBuilder() {
    if (messageCase_ == 257) {
       return (com.github.aptpod.proto.iscp2.v1.UpstreamCallAck) message_;
    }
    return com.github.aptpod.proto.iscp2.v1.UpstreamCallAck.getDefaultInstance();
  }

  public static final int DOWNSTREAM_CALL_FIELD_NUMBER = 258;
  /**
   * <code>.iscp2.v1.DownstreamCall downstream_call = 258 [json_name = "downstreamCall"];</code>
   * @return Whether the downstreamCall field is set.
   */
  @java.lang.Override
  public boolean hasDownstreamCall() {
    return messageCase_ == 258;
  }
  /**
   * <code>.iscp2.v1.DownstreamCall downstream_call = 258 [json_name = "downstreamCall"];</code>
   * @return The downstreamCall.
   */
  @java.lang.Override
  public com.github.aptpod.proto.iscp2.v1.DownstreamCall getDownstreamCall() {
    if (messageCase_ == 258) {
       return (com.github.aptpod.proto.iscp2.v1.DownstreamCall) message_;
    }
    return com.github.aptpod.proto.iscp2.v1.DownstreamCall.getDefaultInstance();
  }
  /**
   * <code>.iscp2.v1.DownstreamCall downstream_call = 258 [json_name = "downstreamCall"];</code>
   */
  @java.lang.Override
  public com.github.aptpod.proto.iscp2.v1.DownstreamCallOrBuilder getDownstreamCallOrBuilder() {
    if (messageCase_ == 258) {
       return (com.github.aptpod.proto.iscp2.v1.DownstreamCall) message_;
    }
    return com.github.aptpod.proto.iscp2.v1.DownstreamCall.getDefaultInstance();
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (messageCase_ == 1) {
      output.writeMessage(1, (com.github.aptpod.proto.iscp2.v1.ConnectRequest) message_);
    }
    if (messageCase_ == 2) {
      output.writeMessage(2, (com.github.aptpod.proto.iscp2.v1.ConnectResponse) message_);
    }
    if (messageCase_ == 3) {
      output.writeMessage(3, (com.github.aptpod.proto.iscp2.v1.Disconnect) message_);
    }
    if (messageCase_ == 64) {
      output.writeMessage(64, (com.github.aptpod.proto.iscp2.v1.UpstreamOpenRequest) message_);
    }
    if (messageCase_ == 65) {
      output.writeMessage(65, (com.github.aptpod.proto.iscp2.v1.UpstreamOpenResponse) message_);
    }
    if (messageCase_ == 66) {
      output.writeMessage(66, (com.github.aptpod.proto.iscp2.v1.UpstreamResumeRequest) message_);
    }
    if (messageCase_ == 67) {
      output.writeMessage(67, (com.github.aptpod.proto.iscp2.v1.UpstreamResumeResponse) message_);
    }
    if (messageCase_ == 68) {
      output.writeMessage(68, (com.github.aptpod.proto.iscp2.v1.UpstreamCloseRequest) message_);
    }
    if (messageCase_ == 69) {
      output.writeMessage(69, (com.github.aptpod.proto.iscp2.v1.UpstreamCloseResponse) message_);
    }
    if (messageCase_ == 70) {
      output.writeMessage(70, (com.github.aptpod.proto.iscp2.v1.UpstreamChunk) message_);
    }
    if (messageCase_ == 71) {
      output.writeMessage(71, (com.github.aptpod.proto.iscp2.v1.UpstreamChunkAck) message_);
    }
    if (messageCase_ == 72) {
      output.writeMessage(72, (com.github.aptpod.proto.iscp2.v1.UpstreamMetadata) message_);
    }
    if (messageCase_ == 73) {
      output.writeMessage(73, (com.github.aptpod.proto.iscp2.v1.UpstreamMetadataAck) message_);
    }
    if (messageCase_ == 128) {
      output.writeMessage(128, (com.github.aptpod.proto.iscp2.v1.DownstreamOpenRequest) message_);
    }
    if (messageCase_ == 129) {
      output.writeMessage(129, (com.github.aptpod.proto.iscp2.v1.DownstreamOpenResponse) message_);
    }
    if (messageCase_ == 130) {
      output.writeMessage(130, (com.github.aptpod.proto.iscp2.v1.DownstreamResumeRequest) message_);
    }
    if (messageCase_ == 131) {
      output.writeMessage(131, (com.github.aptpod.proto.iscp2.v1.DownstreamResumeResponse) message_);
    }
    if (messageCase_ == 132) {
      output.writeMessage(132, (com.github.aptpod.proto.iscp2.v1.DownstreamCloseRequest) message_);
    }
    if (messageCase_ == 133) {
      output.writeMessage(133, (com.github.aptpod.proto.iscp2.v1.DownstreamCloseResponse) message_);
    }
    if (messageCase_ == 134) {
      output.writeMessage(134, (com.github.aptpod.proto.iscp2.v1.DownstreamChunk) message_);
    }
    if (messageCase_ == 135) {
      output.writeMessage(135, (com.github.aptpod.proto.iscp2.v1.DownstreamChunkAck) message_);
    }
    if (messageCase_ == 136) {
      output.writeMessage(136, (com.github.aptpod.proto.iscp2.v1.DownstreamChunkAckComplete) message_);
    }
    if (messageCase_ == 137) {
      output.writeMessage(137, (com.github.aptpod.proto.iscp2.v1.DownstreamMetadata) message_);
    }
    if (messageCase_ == 138) {
      output.writeMessage(138, (com.github.aptpod.proto.iscp2.v1.DownstreamMetadataAck) message_);
    }
    if (messageCase_ == 192) {
      output.writeMessage(192, (com.github.aptpod.proto.iscp2.v1.Ping) message_);
    }
    if (messageCase_ == 193) {
      output.writeMessage(193, (com.github.aptpod.proto.iscp2.v1.Pong) message_);
    }
    if (messageCase_ == 256) {
      output.writeMessage(256, (com.github.aptpod.proto.iscp2.v1.UpstreamCall) message_);
    }
    if (messageCase_ == 257) {
      output.writeMessage(257, (com.github.aptpod.proto.iscp2.v1.UpstreamCallAck) message_);
    }
    if (messageCase_ == 258) {
      output.writeMessage(258, (com.github.aptpod.proto.iscp2.v1.DownstreamCall) message_);
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (messageCase_ == 1) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, (com.github.aptpod.proto.iscp2.v1.ConnectRequest) message_);
    }
    if (messageCase_ == 2) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, (com.github.aptpod.proto.iscp2.v1.ConnectResponse) message_);
    }
    if (messageCase_ == 3) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(3, (com.github.aptpod.proto.iscp2.v1.Disconnect) message_);
    }
    if (messageCase_ == 64) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(64, (com.github.aptpod.proto.iscp2.v1.UpstreamOpenRequest) message_);
    }
    if (messageCase_ == 65) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(65, (com.github.aptpod.proto.iscp2.v1.UpstreamOpenResponse) message_);
    }
    if (messageCase_ == 66) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(66, (com.github.aptpod.proto.iscp2.v1.UpstreamResumeRequest) message_);
    }
    if (messageCase_ == 67) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(67, (com.github.aptpod.proto.iscp2.v1.UpstreamResumeResponse) message_);
    }
    if (messageCase_ == 68) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(68, (com.github.aptpod.proto.iscp2.v1.UpstreamCloseRequest) message_);
    }
    if (messageCase_ == 69) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(69, (com.github.aptpod.proto.iscp2.v1.UpstreamCloseResponse) message_);
    }
    if (messageCase_ == 70) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(70, (com.github.aptpod.proto.iscp2.v1.UpstreamChunk) message_);
    }
    if (messageCase_ == 71) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(71, (com.github.aptpod.proto.iscp2.v1.UpstreamChunkAck) message_);
    }
    if (messageCase_ == 72) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(72, (com.github.aptpod.proto.iscp2.v1.UpstreamMetadata) message_);
    }
    if (messageCase_ == 73) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(73, (com.github.aptpod.proto.iscp2.v1.UpstreamMetadataAck) message_);
    }
    if (messageCase_ == 128) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(128, (com.github.aptpod.proto.iscp2.v1.DownstreamOpenRequest) message_);
    }
    if (messageCase_ == 129) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(129, (com.github.aptpod.proto.iscp2.v1.DownstreamOpenResponse) message_);
    }
    if (messageCase_ == 130) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(130, (com.github.aptpod.proto.iscp2.v1.DownstreamResumeRequest) message_);
    }
    if (messageCase_ == 131) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(131, (com.github.aptpod.proto.iscp2.v1.DownstreamResumeResponse) message_);
    }
    if (messageCase_ == 132) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(132, (com.github.aptpod.proto.iscp2.v1.DownstreamCloseRequest) message_);
    }
    if (messageCase_ == 133) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(133, (com.github.aptpod.proto.iscp2.v1.DownstreamCloseResponse) message_);
    }
    if (messageCase_ == 134) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(134, (com.github.aptpod.proto.iscp2.v1.DownstreamChunk) message_);
    }
    if (messageCase_ == 135) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(135, (com.github.aptpod.proto.iscp2.v1.DownstreamChunkAck) message_);
    }
    if (messageCase_ == 136) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(136, (com.github.aptpod.proto.iscp2.v1.DownstreamChunkAckComplete) message_);
    }
    if (messageCase_ == 137) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(137, (com.github.aptpod.proto.iscp2.v1.DownstreamMetadata) message_);
    }
    if (messageCase_ == 138) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(138, (com.github.aptpod.proto.iscp2.v1.DownstreamMetadataAck) message_);
    }
    if (messageCase_ == 192) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(192, (com.github.aptpod.proto.iscp2.v1.Ping) message_);
    }
    if (messageCase_ == 193) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(193, (com.github.aptpod.proto.iscp2.v1.Pong) message_);
    }
    if (messageCase_ == 256) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(256, (com.github.aptpod.proto.iscp2.v1.UpstreamCall) message_);
    }
    if (messageCase_ == 257) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(257, (com.github.aptpod.proto.iscp2.v1.UpstreamCallAck) message_);
    }
    if (messageCase_ == 258) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(258, (com.github.aptpod.proto.iscp2.v1.DownstreamCall) message_);
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.github.aptpod.proto.iscp2.v1.Message)) {
      return super.equals(obj);
    }
    com.github.aptpod.proto.iscp2.v1.Message other = (com.github.aptpod.proto.iscp2.v1.Message) obj;

    if (!getMessageCase().equals(other.getMessageCase())) return false;
    switch (messageCase_) {
      case 1:
        if (!getConnectRequest()
            .equals(other.getConnectRequest())) return false;
        break;
      case 2:
        if (!getConnectResponse()
            .equals(other.getConnectResponse())) return false;
        break;
      case 3:
        if (!getDisconnect()
            .equals(other.getDisconnect())) return false;
        break;
      case 64:
        if (!getUpstreamOpenRequest()
            .equals(other.getUpstreamOpenRequest())) return false;
        break;
      case 65:
        if (!getUpstreamOpenResponse()
            .equals(other.getUpstreamOpenResponse())) return false;
        break;
      case 66:
        if (!getUpstreamResumeRequest()
            .equals(other.getUpstreamResumeRequest())) return false;
        break;
      case 67:
        if (!getUpstreamResumeResponse()
            .equals(other.getUpstreamResumeResponse())) return false;
        break;
      case 68:
        if (!getUpstreamCloseRequest()
            .equals(other.getUpstreamCloseRequest())) return false;
        break;
      case 69:
        if (!getUpstreamCloseResponse()
            .equals(other.getUpstreamCloseResponse())) return false;
        break;
      case 70:
        if (!getUpstreamChunk()
            .equals(other.getUpstreamChunk())) return false;
        break;
      case 71:
        if (!getUpstreamChunkAck()
            .equals(other.getUpstreamChunkAck())) return false;
        break;
      case 72:
        if (!getUpstreamMetadata()
            .equals(other.getUpstreamMetadata())) return false;
        break;
      case 73:
        if (!getUpstreamMetadataAck()
            .equals(other.getUpstreamMetadataAck())) return false;
        break;
      case 128:
        if (!getDownstreamOpenRequest()
            .equals(other.getDownstreamOpenRequest())) return false;
        break;
      case 129:
        if (!getDownstreamOpenResponse()
            .equals(other.getDownstreamOpenResponse())) return false;
        break;
      case 130:
        if (!getDownstreamResumeRequest()
            .equals(other.getDownstreamResumeRequest())) return false;
        break;
      case 131:
        if (!getDownstreamResumeResponse()
            .equals(other.getDownstreamResumeResponse())) return false;
        break;
      case 132:
        if (!getDownstreamCloseRequest()
            .equals(other.getDownstreamCloseRequest())) return false;
        break;
      case 133:
        if (!getDownstreamCloseResponse()
            .equals(other.getDownstreamCloseResponse())) return false;
        break;
      case 134:
        if (!getDownstreamChunk()
            .equals(other.getDownstreamChunk())) return false;
        break;
      case 135:
        if (!getDownstreamChunkAck()
            .equals(other.getDownstreamChunkAck())) return false;
        break;
      case 136:
        if (!getDownstreamChunkAckComplete()
            .equals(other.getDownstreamChunkAckComplete())) return false;
        break;
      case 137:
        if (!getDownstreamMetadata()
            .equals(other.getDownstreamMetadata())) return false;
        break;
      case 138:
        if (!getDownstreamMetadataAck()
            .equals(other.getDownstreamMetadataAck())) return false;
        break;
      case 192:
        if (!getPing()
            .equals(other.getPing())) return false;
        break;
      case 193:
        if (!getPong()
            .equals(other.getPong())) return false;
        break;
      case 256:
        if (!getUpstreamCall()
            .equals(other.getUpstreamCall())) return false;
        break;
      case 257:
        if (!getUpstreamCallAck()
            .equals(other.getUpstreamCallAck())) return false;
        break;
      case 258:
        if (!getDownstreamCall()
            .equals(other.getDownstreamCall())) return false;
        break;
      case 0:
      default:
    }
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    switch (messageCase_) {
      case 1:
        hash = (37 * hash) + CONNECT_REQUEST_FIELD_NUMBER;
        hash = (53 * hash) + getConnectRequest().hashCode();
        break;
      case 2:
        hash = (37 * hash) + CONNECT_RESPONSE_FIELD_NUMBER;
        hash = (53 * hash) + getConnectResponse().hashCode();
        break;
      case 3:
        hash = (37 * hash) + DISCONNECT_FIELD_NUMBER;
        hash = (53 * hash) + getDisconnect().hashCode();
        break;
      case 64:
        hash = (37 * hash) + UPSTREAM_OPEN_REQUEST_FIELD_NUMBER;
        hash = (53 * hash) + getUpstreamOpenRequest().hashCode();
        break;
      case 65:
        hash = (37 * hash) + UPSTREAM_OPEN_RESPONSE_FIELD_NUMBER;
        hash = (53 * hash) + getUpstreamOpenResponse().hashCode();
        break;
      case 66:
        hash = (37 * hash) + UPSTREAM_RESUME_REQUEST_FIELD_NUMBER;
        hash = (53 * hash) + getUpstreamResumeRequest().hashCode();
        break;
      case 67:
        hash = (37 * hash) + UPSTREAM_RESUME_RESPONSE_FIELD_NUMBER;
        hash = (53 * hash) + getUpstreamResumeResponse().hashCode();
        break;
      case 68:
        hash = (37 * hash) + UPSTREAM_CLOSE_REQUEST_FIELD_NUMBER;
        hash = (53 * hash) + getUpstreamCloseRequest().hashCode();
        break;
      case 69:
        hash = (37 * hash) + UPSTREAM_CLOSE_RESPONSE_FIELD_NUMBER;
        hash = (53 * hash) + getUpstreamCloseResponse().hashCode();
        break;
      case 70:
        hash = (37 * hash) + UPSTREAM_CHUNK_FIELD_NUMBER;
        hash = (53 * hash) + getUpstreamChunk().hashCode();
        break;
      case 71:
        hash = (37 * hash) + UPSTREAM_CHUNK_ACK_FIELD_NUMBER;
        hash = (53 * hash) + getUpstreamChunkAck().hashCode();
        break;
      case 72:
        hash = (37 * hash) + UPSTREAM_METADATA_FIELD_NUMBER;
        hash = (53 * hash) + getUpstreamMetadata().hashCode();
        break;
      case 73:
        hash = (37 * hash) + UPSTREAM_METADATA_ACK_FIELD_NUMBER;
        hash = (53 * hash) + getUpstreamMetadataAck().hashCode();
        break;
      case 128:
        hash = (37 * hash) + DOWNSTREAM_OPEN_REQUEST_FIELD_NUMBER;
        hash = (53 * hash) + getDownstreamOpenRequest().hashCode();
        break;
      case 129:
        hash = (37 * hash) + DOWNSTREAM_OPEN_RESPONSE_FIELD_NUMBER;
        hash = (53 * hash) + getDownstreamOpenResponse().hashCode();
        break;
      case 130:
        hash = (37 * hash) + DOWNSTREAM_RESUME_REQUEST_FIELD_NUMBER;
        hash = (53 * hash) + getDownstreamResumeRequest().hashCode();
        break;
      case 131:
        hash = (37 * hash) + DOWNSTREAM_RESUME_RESPONSE_FIELD_NUMBER;
        hash = (53 * hash) + getDownstreamResumeResponse().hashCode();
        break;
      case 132:
        hash = (37 * hash) + DOWNSTREAM_CLOSE_REQUEST_FIELD_NUMBER;
        hash = (53 * hash) + getDownstreamCloseRequest().hashCode();
        break;
      case 133:
        hash = (37 * hash) + DOWNSTREAM_CLOSE_RESPONSE_FIELD_NUMBER;
        hash = (53 * hash) + getDownstreamCloseResponse().hashCode();
        break;
      case 134:
        hash = (37 * hash) + DOWNSTREAM_CHUNK_FIELD_NUMBER;
        hash = (53 * hash) + getDownstreamChunk().hashCode();
        break;
      case 135:
        hash = (37 * hash) + DOWNSTREAM_CHUNK_ACK_FIELD_NUMBER;
        hash = (53 * hash) + getDownstreamChunkAck().hashCode();
        break;
      case 136:
        hash = (37 * hash) + DOWNSTREAM_CHUNK_ACK_COMPLETE_FIELD_NUMBER;
        hash = (53 * hash) + getDownstreamChunkAckComplete().hashCode();
        break;
      case 137:
        hash = (37 * hash) + DOWNSTREAM_METADATA_FIELD_NUMBER;
        hash = (53 * hash) + getDownstreamMetadata().hashCode();
        break;
      case 138:
        hash = (37 * hash) + DOWNSTREAM_METADATA_ACK_FIELD_NUMBER;
        hash = (53 * hash) + getDownstreamMetadataAck().hashCode();
        break;
      case 192:
        hash = (37 * hash) + PING_FIELD_NUMBER;
        hash = (53 * hash) + getPing().hashCode();
        break;
      case 193:
        hash = (37 * hash) + PONG_FIELD_NUMBER;
        hash = (53 * hash) + getPong().hashCode();
        break;
      case 256:
        hash = (37 * hash) + UPSTREAM_CALL_FIELD_NUMBER;
        hash = (53 * hash) + getUpstreamCall().hashCode();
        break;
      case 257:
        hash = (37 * hash) + UPSTREAM_CALL_ACK_FIELD_NUMBER;
        hash = (53 * hash) + getUpstreamCallAck().hashCode();
        break;
      case 258:
        hash = (37 * hash) + DOWNSTREAM_CALL_FIELD_NUMBER;
        hash = (53 * hash) + getDownstreamCall().hashCode();
        break;
      case 0:
      default:
    }
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.github.aptpod.proto.iscp2.v1.Message parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.github.aptpod.proto.iscp2.v1.Message parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.github.aptpod.proto.iscp2.v1.Message parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.github.aptpod.proto.iscp2.v1.Message parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.github.aptpod.proto.iscp2.v1.Message parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.github.aptpod.proto.iscp2.v1.Message parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.github.aptpod.proto.iscp2.v1.Message parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.github.aptpod.proto.iscp2.v1.Message parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public static com.github.aptpod.proto.iscp2.v1.Message parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }

  public static com.github.aptpod.proto.iscp2.v1.Message parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.github.aptpod.proto.iscp2.v1.Message parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.github.aptpod.proto.iscp2.v1.Message parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.github.aptpod.proto.iscp2.v1.Message prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code iscp2.v1.Message}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:iscp2.v1.Message)
      com.github.aptpod.proto.iscp2.v1.MessageOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.github.aptpod.proto.iscp2.v1.MessageProto.internal_static_iscp2_v1_Message_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.github.aptpod.proto.iscp2.v1.MessageProto.internal_static_iscp2_v1_Message_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.github.aptpod.proto.iscp2.v1.Message.class, com.github.aptpod.proto.iscp2.v1.Message.Builder.class);
    }

    // Construct using com.github.aptpod.proto.iscp2.v1.Message.newBuilder()
    private Builder() {

    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);

    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      if (connectRequestBuilder_ != null) {
        connectRequestBuilder_.clear();
      }
      if (connectResponseBuilder_ != null) {
        connectResponseBuilder_.clear();
      }
      if (disconnectBuilder_ != null) {
        disconnectBuilder_.clear();
      }
      if (upstreamOpenRequestBuilder_ != null) {
        upstreamOpenRequestBuilder_.clear();
      }
      if (upstreamOpenResponseBuilder_ != null) {
        upstreamOpenResponseBuilder_.clear();
      }
      if (upstreamResumeRequestBuilder_ != null) {
        upstreamResumeRequestBuilder_.clear();
      }
      if (upstreamResumeResponseBuilder_ != null) {
        upstreamResumeResponseBuilder_.clear();
      }
      if (upstreamCloseRequestBuilder_ != null) {
        upstreamCloseRequestBuilder_.clear();
      }
      if (upstreamCloseResponseBuilder_ != null) {
        upstreamCloseResponseBuilder_.clear();
      }
      if (upstreamChunkBuilder_ != null) {
        upstreamChunkBuilder_.clear();
      }
      if (upstreamChunkAckBuilder_ != null) {
        upstreamChunkAckBuilder_.clear();
      }
      if (upstreamMetadataBuilder_ != null) {
        upstreamMetadataBuilder_.clear();
      }
      if (upstreamMetadataAckBuilder_ != null) {
        upstreamMetadataAckBuilder_.clear();
      }
      if (downstreamOpenRequestBuilder_ != null) {
        downstreamOpenRequestBuilder_.clear();
      }
      if (downstreamOpenResponseBuilder_ != null) {
        downstreamOpenResponseBuilder_.clear();
      }
      if (downstreamResumeRequestBuilder_ != null) {
        downstreamResumeRequestBuilder_.clear();
      }
      if (downstreamResumeResponseBuilder_ != null) {
        downstreamResumeResponseBuilder_.clear();
      }
      if (downstreamCloseRequestBuilder_ != null) {
        downstreamCloseRequestBuilder_.clear();
      }
      if (downstreamCloseResponseBuilder_ != null) {
        downstreamCloseResponseBuilder_.clear();
      }
      if (downstreamChunkBuilder_ != null) {
        downstreamChunkBuilder_.clear();
      }
      if (downstreamChunkAckBuilder_ != null) {
        downstreamChunkAckBuilder_.clear();
      }
      if (downstreamChunkAckCompleteBuilder_ != null) {
        downstreamChunkAckCompleteBuilder_.clear();
      }
      if (downstreamMetadataBuilder_ != null) {
        downstreamMetadataBuilder_.clear();
      }
      if (downstreamMetadataAckBuilder_ != null) {
        downstreamMetadataAckBuilder_.clear();
      }
      if (pingBuilder_ != null) {
        pingBuilder_.clear();
      }
      if (pongBuilder_ != null) {
        pongBuilder_.clear();
      }
      if (upstreamCallBuilder_ != null) {
        upstreamCallBuilder_.clear();
      }
      if (upstreamCallAckBuilder_ != null) {
        upstreamCallAckBuilder_.clear();
      }
      if (downstreamCallBuilder_ != null) {
        downstreamCallBuilder_.clear();
      }
      messageCase_ = 0;
      message_ = null;
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.github.aptpod.proto.iscp2.v1.MessageProto.internal_static_iscp2_v1_Message_descriptor;
    }

    @java.lang.Override
    public com.github.aptpod.proto.iscp2.v1.Message getDefaultInstanceForType() {
      return com.github.aptpod.proto.iscp2.v1.Message.getDefaultInstance();
    }

    @java.lang.Override
    public com.github.aptpod.proto.iscp2.v1.Message build() {
      com.github.aptpod.proto.iscp2.v1.Message result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.github.aptpod.proto.iscp2.v1.Message buildPartial() {
      com.github.aptpod.proto.iscp2.v1.Message result = new com.github.aptpod.proto.iscp2.v1.Message(this);
      if (bitField0_ != 0) { buildPartial0(result); }
      buildPartialOneofs(result);
      onBuilt();
      return result;
    }

    private void buildPartial0(com.github.aptpod.proto.iscp2.v1.Message result) {
      int from_bitField0_ = bitField0_;
    }

    private void buildPartialOneofs(com.github.aptpod.proto.iscp2.v1.Message result) {
      result.messageCase_ = messageCase_;
      result.message_ = this.message_;
      if (messageCase_ == 1 &&
          connectRequestBuilder_ != null) {
        result.message_ = connectRequestBuilder_.build();
      }
      if (messageCase_ == 2 &&
          connectResponseBuilder_ != null) {
        result.message_ = connectResponseBuilder_.build();
      }
      if (messageCase_ == 3 &&
          disconnectBuilder_ != null) {
        result.message_ = disconnectBuilder_.build();
      }
      if (messageCase_ == 64 &&
          upstreamOpenRequestBuilder_ != null) {
        result.message_ = upstreamOpenRequestBuilder_.build();
      }
      if (messageCase_ == 65 &&
          upstreamOpenResponseBuilder_ != null) {
        result.message_ = upstreamOpenResponseBuilder_.build();
      }
      if (messageCase_ == 66 &&
          upstreamResumeRequestBuilder_ != null) {
        result.message_ = upstreamResumeRequestBuilder_.build();
      }
      if (messageCase_ == 67 &&
          upstreamResumeResponseBuilder_ != null) {
        result.message_ = upstreamResumeResponseBuilder_.build();
      }
      if (messageCase_ == 68 &&
          upstreamCloseRequestBuilder_ != null) {
        result.message_ = upstreamCloseRequestBuilder_.build();
      }
      if (messageCase_ == 69 &&
          upstreamCloseResponseBuilder_ != null) {
        result.message_ = upstreamCloseResponseBuilder_.build();
      }
      if (messageCase_ == 70 &&
          upstreamChunkBuilder_ != null) {
        result.message_ = upstreamChunkBuilder_.build();
      }
      if (messageCase_ == 71 &&
          upstreamChunkAckBuilder_ != null) {
        result.message_ = upstreamChunkAckBuilder_.build();
      }
      if (messageCase_ == 72 &&
          upstreamMetadataBuilder_ != null) {
        result.message_ = upstreamMetadataBuilder_.build();
      }
      if (messageCase_ == 73 &&
          upstreamMetadataAckBuilder_ != null) {
        result.message_ = upstreamMetadataAckBuilder_.build();
      }
      if (messageCase_ == 128 &&
          downstreamOpenRequestBuilder_ != null) {
        result.message_ = downstreamOpenRequestBuilder_.build();
      }
      if (messageCase_ == 129 &&
          downstreamOpenResponseBuilder_ != null) {
        result.message_ = downstreamOpenResponseBuilder_.build();
      }
      if (messageCase_ == 130 &&
          downstreamResumeRequestBuilder_ != null) {
        result.message_ = downstreamResumeRequestBuilder_.build();
      }
      if (messageCase_ == 131 &&
          downstreamResumeResponseBuilder_ != null) {
        result.message_ = downstreamResumeResponseBuilder_.build();
      }
      if (messageCase_ == 132 &&
          downstreamCloseRequestBuilder_ != null) {
        result.message_ = downstreamCloseRequestBuilder_.build();
      }
      if (messageCase_ == 133 &&
          downstreamCloseResponseBuilder_ != null) {
        result.message_ = downstreamCloseResponseBuilder_.build();
      }
      if (messageCase_ == 134 &&
          downstreamChunkBuilder_ != null) {
        result.message_ = downstreamChunkBuilder_.build();
      }
      if (messageCase_ == 135 &&
          downstreamChunkAckBuilder_ != null) {
        result.message_ = downstreamChunkAckBuilder_.build();
      }
      if (messageCase_ == 136 &&
          downstreamChunkAckCompleteBuilder_ != null) {
        result.message_ = downstreamChunkAckCompleteBuilder_.build();
      }
      if (messageCase_ == 137 &&
          downstreamMetadataBuilder_ != null) {
        result.message_ = downstreamMetadataBuilder_.build();
      }
      if (messageCase_ == 138 &&
          downstreamMetadataAckBuilder_ != null) {
        result.message_ = downstreamMetadataAckBuilder_.build();
      }
      if (messageCase_ == 192 &&
          pingBuilder_ != null) {
        result.message_ = pingBuilder_.build();
      }
      if (messageCase_ == 193 &&
          pongBuilder_ != null) {
        result.message_ = pongBuilder_.build();
      }
      if (messageCase_ == 256 &&
          upstreamCallBuilder_ != null) {
        result.message_ = upstreamCallBuilder_.build();
      }
      if (messageCase_ == 257 &&
          upstreamCallAckBuilder_ != null) {
        result.message_ = upstreamCallAckBuilder_.build();
      }
      if (messageCase_ == 258 &&
          downstreamCallBuilder_ != null) {
        result.message_ = downstreamCallBuilder_.build();
      }
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.github.aptpod.proto.iscp2.v1.Message) {
        return mergeFrom((com.github.aptpod.proto.iscp2.v1.Message)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.github.aptpod.proto.iscp2.v1.Message other) {
      if (other == com.github.aptpod.proto.iscp2.v1.Message.getDefaultInstance()) return this;
      switch (other.getMessageCase()) {
        case CONNECT_REQUEST: {
          mergeConnectRequest(other.getConnectRequest());
          break;
        }
        case CONNECT_RESPONSE: {
          mergeConnectResponse(other.getConnectResponse());
          break;
        }
        case DISCONNECT: {
          mergeDisconnect(other.getDisconnect());
          break;
        }
        case UPSTREAM_OPEN_REQUEST: {
          mergeUpstreamOpenRequest(other.getUpstreamOpenRequest());
          break;
        }
        case UPSTREAM_OPEN_RESPONSE: {
          mergeUpstreamOpenResponse(other.getUpstreamOpenResponse());
          break;
        }
        case UPSTREAM_RESUME_REQUEST: {
          mergeUpstreamResumeRequest(other.getUpstreamResumeRequest());
          break;
        }
        case UPSTREAM_RESUME_RESPONSE: {
          mergeUpstreamResumeResponse(other.getUpstreamResumeResponse());
          break;
        }
        case UPSTREAM_CLOSE_REQUEST: {
          mergeUpstreamCloseRequest(other.getUpstreamCloseRequest());
          break;
        }
        case UPSTREAM_CLOSE_RESPONSE: {
          mergeUpstreamCloseResponse(other.getUpstreamCloseResponse());
          break;
        }
        case UPSTREAM_CHUNK: {
          mergeUpstreamChunk(other.getUpstreamChunk());
          break;
        }
        case UPSTREAM_CHUNK_ACK: {
          mergeUpstreamChunkAck(other.getUpstreamChunkAck());
          break;
        }
        case UPSTREAM_METADATA: {
          mergeUpstreamMetadata(other.getUpstreamMetadata());
          break;
        }
        case UPSTREAM_METADATA_ACK: {
          mergeUpstreamMetadataAck(other.getUpstreamMetadataAck());
          break;
        }
        case DOWNSTREAM_OPEN_REQUEST: {
          mergeDownstreamOpenRequest(other.getDownstreamOpenRequest());
          break;
        }
        case DOWNSTREAM_OPEN_RESPONSE: {
          mergeDownstreamOpenResponse(other.getDownstreamOpenResponse());
          break;
        }
        case DOWNSTREAM_RESUME_REQUEST: {
          mergeDownstreamResumeRequest(other.getDownstreamResumeRequest());
          break;
        }
        case DOWNSTREAM_RESUME_RESPONSE: {
          mergeDownstreamResumeResponse(other.getDownstreamResumeResponse());
          break;
        }
        case DOWNSTREAM_CLOSE_REQUEST: {
          mergeDownstreamCloseRequest(other.getDownstreamCloseRequest());
          break;
        }
        case DOWNSTREAM_CLOSE_RESPONSE: {
          mergeDownstreamCloseResponse(other.getDownstreamCloseResponse());
          break;
        }
        case DOWNSTREAM_CHUNK: {
          mergeDownstreamChunk(other.getDownstreamChunk());
          break;
        }
        case DOWNSTREAM_CHUNK_ACK: {
          mergeDownstreamChunkAck(other.getDownstreamChunkAck());
          break;
        }
        case DOWNSTREAM_CHUNK_ACK_COMPLETE: {
          mergeDownstreamChunkAckComplete(other.getDownstreamChunkAckComplete());
          break;
        }
        case DOWNSTREAM_METADATA: {
          mergeDownstreamMetadata(other.getDownstreamMetadata());
          break;
        }
        case DOWNSTREAM_METADATA_ACK: {
          mergeDownstreamMetadataAck(other.getDownstreamMetadataAck());
          break;
        }
        case PING: {
          mergePing(other.getPing());
          break;
        }
        case PONG: {
          mergePong(other.getPong());
          break;
        }
        case UPSTREAM_CALL: {
          mergeUpstreamCall(other.getUpstreamCall());
          break;
        }
        case UPSTREAM_CALL_ACK: {
          mergeUpstreamCallAck(other.getUpstreamCallAck());
          break;
        }
        case DOWNSTREAM_CALL: {
          mergeDownstreamCall(other.getDownstreamCall());
          break;
        }
        case MESSAGE_NOT_SET: {
          break;
        }
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              input.readMessage(
                  getConnectRequestFieldBuilder().getBuilder(),
                  extensionRegistry);
              messageCase_ = 1;
              break;
            } // case 10
            case 18: {
              input.readMessage(
                  getConnectResponseFieldBuilder().getBuilder(),
                  extensionRegistry);
              messageCase_ = 2;
              break;
            } // case 18
            case 26: {
              input.readMessage(
                  getDisconnectFieldBuilder().getBuilder(),
                  extensionRegistry);
              messageCase_ = 3;
              break;
            } // case 26
            case 514: {
              input.readMessage(
                  getUpstreamOpenRequestFieldBuilder().getBuilder(),
                  extensionRegistry);
              messageCase_ = 64;
              break;
            } // case 514
            case 522: {
              input.readMessage(
                  getUpstreamOpenResponseFieldBuilder().getBuilder(),
                  extensionRegistry);
              messageCase_ = 65;
              break;
            } // case 522
            case 530: {
              input.readMessage(
                  getUpstreamResumeRequestFieldBuilder().getBuilder(),
                  extensionRegistry);
              messageCase_ = 66;
              break;
            } // case 530
            case 538: {
              input.readMessage(
                  getUpstreamResumeResponseFieldBuilder().getBuilder(),
                  extensionRegistry);
              messageCase_ = 67;
              break;
            } // case 538
            case 546: {
              input.readMessage(
                  getUpstreamCloseRequestFieldBuilder().getBuilder(),
                  extensionRegistry);
              messageCase_ = 68;
              break;
            } // case 546
            case 554: {
              input.readMessage(
                  getUpstreamCloseResponseFieldBuilder().getBuilder(),
                  extensionRegistry);
              messageCase_ = 69;
              break;
            } // case 554
            case 562: {
              input.readMessage(
                  getUpstreamChunkFieldBuilder().getBuilder(),
                  extensionRegistry);
              messageCase_ = 70;
              break;
            } // case 562
            case 570: {
              input.readMessage(
                  getUpstreamChunkAckFieldBuilder().getBuilder(),
                  extensionRegistry);
              messageCase_ = 71;
              break;
            } // case 570
            case 578: {
              input.readMessage(
                  getUpstreamMetadataFieldBuilder().getBuilder(),
                  extensionRegistry);
              messageCase_ = 72;
              break;
            } // case 578
            case 586: {
              input.readMessage(
                  getUpstreamMetadataAckFieldBuilder().getBuilder(),
                  extensionRegistry);
              messageCase_ = 73;
              break;
            } // case 586
            case 1026: {
              input.readMessage(
                  getDownstreamOpenRequestFieldBuilder().getBuilder(),
                  extensionRegistry);
              messageCase_ = 128;
              break;
            } // case 1026
            case 1034: {
              input.readMessage(
                  getDownstreamOpenResponseFieldBuilder().getBuilder(),
                  extensionRegistry);
              messageCase_ = 129;
              break;
            } // case 1034
            case 1042: {
              input.readMessage(
                  getDownstreamResumeRequestFieldBuilder().getBuilder(),
                  extensionRegistry);
              messageCase_ = 130;
              break;
            } // case 1042
            case 1050: {
              input.readMessage(
                  getDownstreamResumeResponseFieldBuilder().getBuilder(),
                  extensionRegistry);
              messageCase_ = 131;
              break;
            } // case 1050
            case 1058: {
              input.readMessage(
                  getDownstreamCloseRequestFieldBuilder().getBuilder(),
                  extensionRegistry);
              messageCase_ = 132;
              break;
            } // case 1058
            case 1066: {
              input.readMessage(
                  getDownstreamCloseResponseFieldBuilder().getBuilder(),
                  extensionRegistry);
              messageCase_ = 133;
              break;
            } // case 1066
            case 1074: {
              input.readMessage(
                  getDownstreamChunkFieldBuilder().getBuilder(),
                  extensionRegistry);
              messageCase_ = 134;
              break;
            } // case 1074
            case 1082: {
              input.readMessage(
                  getDownstreamChunkAckFieldBuilder().getBuilder(),
                  extensionRegistry);
              messageCase_ = 135;
              break;
            } // case 1082
            case 1090: {
              input.readMessage(
                  getDownstreamChunkAckCompleteFieldBuilder().getBuilder(),
                  extensionRegistry);
              messageCase_ = 136;
              break;
            } // case 1090
            case 1098: {
              input.readMessage(
                  getDownstreamMetadataFieldBuilder().getBuilder(),
                  extensionRegistry);
              messageCase_ = 137;
              break;
            } // case 1098
            case 1106: {
              input.readMessage(
                  getDownstreamMetadataAckFieldBuilder().getBuilder(),
                  extensionRegistry);
              messageCase_ = 138;
              break;
            } // case 1106
            case 1538: {
              input.readMessage(
                  getPingFieldBuilder().getBuilder(),
                  extensionRegistry);
              messageCase_ = 192;
              break;
            } // case 1538
            case 1546: {
              input.readMessage(
                  getPongFieldBuilder().getBuilder(),
                  extensionRegistry);
              messageCase_ = 193;
              break;
            } // case 1546
            case 2050: {
              input.readMessage(
                  getUpstreamCallFieldBuilder().getBuilder(),
                  extensionRegistry);
              messageCase_ = 256;
              break;
            } // case 2050
            case 2058: {
              input.readMessage(
                  getUpstreamCallAckFieldBuilder().getBuilder(),
                  extensionRegistry);
              messageCase_ = 257;
              break;
            } // case 2058
            case 2066: {
              input.readMessage(
                  getDownstreamCallFieldBuilder().getBuilder(),
                  extensionRegistry);
              messageCase_ = 258;
              break;
            } // case 2066
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int messageCase_ = 0;
    private java.lang.Object message_;
    public MessageCase
        getMessageCase() {
      return MessageCase.forNumber(
          messageCase_);
    }

    public Builder clearMessage() {
      messageCase_ = 0;
      message_ = null;
      onChanged();
      return this;
    }

    private int bitField0_;

    private com.google.protobuf.SingleFieldBuilderV3<
        com.github.aptpod.proto.iscp2.v1.ConnectRequest, com.github.aptpod.proto.iscp2.v1.ConnectRequest.Builder, com.github.aptpod.proto.iscp2.v1.ConnectRequestOrBuilder> connectRequestBuilder_;
    /**
     * <pre>
     * Connect
     * </pre>
     *
     * <code>.iscp2.v1.ConnectRequest connect_request = 1 [json_name = "connectRequest"];</code>
     * @return Whether the connectRequest field is set.
     */
    @java.lang.Override
    public boolean hasConnectRequest() {
      return messageCase_ == 1;
    }
    /**
     * <pre>
     * Connect
     * </pre>
     *
     * <code>.iscp2.v1.ConnectRequest connect_request = 1 [json_name = "connectRequest"];</code>
     * @return The connectRequest.
     */
    @java.lang.Override
    public com.github.aptpod.proto.iscp2.v1.ConnectRequest getConnectRequest() {
      if (connectRequestBuilder_ == null) {
        if (messageCase_ == 1) {
          return (com.github.aptpod.proto.iscp2.v1.ConnectRequest) message_;
        }
        return com.github.aptpod.proto.iscp2.v1.ConnectRequest.getDefaultInstance();
      } else {
        if (messageCase_ == 1) {
          return connectRequestBuilder_.getMessage();
        }
        return com.github.aptpod.proto.iscp2.v1.ConnectRequest.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * Connect
     * </pre>
     *
     * <code>.iscp2.v1.ConnectRequest connect_request = 1 [json_name = "connectRequest"];</code>
     */
    public Builder setConnectRequest(com.github.aptpod.proto.iscp2.v1.ConnectRequest value) {
      if (connectRequestBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        message_ = value;
        onChanged();
      } else {
        connectRequestBuilder_.setMessage(value);
      }
      messageCase_ = 1;
      return this;
    }
    /**
     * <pre>
     * Connect
     * </pre>
     *
     * <code>.iscp2.v1.ConnectRequest connect_request = 1 [json_name = "connectRequest"];</code>
     */
    public Builder setConnectRequest(
        com.github.aptpod.proto.iscp2.v1.ConnectRequest.Builder builderForValue) {
      if (connectRequestBuilder_ == null) {
        message_ = builderForValue.build();
        onChanged();
      } else {
        connectRequestBuilder_.setMessage(builderForValue.build());
      }
      messageCase_ = 1;
      return this;
    }
    /**
     * <pre>
     * Connect
     * </pre>
     *
     * <code>.iscp2.v1.ConnectRequest connect_request = 1 [json_name = "connectRequest"];</code>
     */
    public Builder mergeConnectRequest(com.github.aptpod.proto.iscp2.v1.ConnectRequest value) {
      if (connectRequestBuilder_ == null) {
        if (messageCase_ == 1 &&
            message_ != com.github.aptpod.proto.iscp2.v1.ConnectRequest.getDefaultInstance()) {
          message_ = com.github.aptpod.proto.iscp2.v1.ConnectRequest.newBuilder((com.github.aptpod.proto.iscp2.v1.ConnectRequest) message_)
              .mergeFrom(value).buildPartial();
        } else {
          message_ = value;
        }
        onChanged();
      } else {
        if (messageCase_ == 1) {
          connectRequestBuilder_.mergeFrom(value);
        } else {
          connectRequestBuilder_.setMessage(value);
        }
      }
      messageCase_ = 1;
      return this;
    }
    /**
     * <pre>
     * Connect
     * </pre>
     *
     * <code>.iscp2.v1.ConnectRequest connect_request = 1 [json_name = "connectRequest"];</code>
     */
    public Builder clearConnectRequest() {
      if (connectRequestBuilder_ == null) {
        if (messageCase_ == 1) {
          messageCase_ = 0;
          message_ = null;
          onChanged();
        }
      } else {
        if (messageCase_ == 1) {
          messageCase_ = 0;
          message_ = null;
        }
        connectRequestBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * Connect
     * </pre>
     *
     * <code>.iscp2.v1.ConnectRequest connect_request = 1 [json_name = "connectRequest"];</code>
     */
    public com.github.aptpod.proto.iscp2.v1.ConnectRequest.Builder getConnectRequestBuilder() {
      return getConnectRequestFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Connect
     * </pre>
     *
     * <code>.iscp2.v1.ConnectRequest connect_request = 1 [json_name = "connectRequest"];</code>
     */
    @java.lang.Override
    public com.github.aptpod.proto.iscp2.v1.ConnectRequestOrBuilder getConnectRequestOrBuilder() {
      if ((messageCase_ == 1) && (connectRequestBuilder_ != null)) {
        return connectRequestBuilder_.getMessageOrBuilder();
      } else {
        if (messageCase_ == 1) {
          return (com.github.aptpod.proto.iscp2.v1.ConnectRequest) message_;
        }
        return com.github.aptpod.proto.iscp2.v1.ConnectRequest.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * Connect
     * </pre>
     *
     * <code>.iscp2.v1.ConnectRequest connect_request = 1 [json_name = "connectRequest"];</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.github.aptpod.proto.iscp2.v1.ConnectRequest, com.github.aptpod.proto.iscp2.v1.ConnectRequest.Builder, com.github.aptpod.proto.iscp2.v1.ConnectRequestOrBuilder> 
        getConnectRequestFieldBuilder() {
      if (connectRequestBuilder_ == null) {
        if (!(messageCase_ == 1)) {
          message_ = com.github.aptpod.proto.iscp2.v1.ConnectRequest.getDefaultInstance();
        }
        connectRequestBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.github.aptpod.proto.iscp2.v1.ConnectRequest, com.github.aptpod.proto.iscp2.v1.ConnectRequest.Builder, com.github.aptpod.proto.iscp2.v1.ConnectRequestOrBuilder>(
                (com.github.aptpod.proto.iscp2.v1.ConnectRequest) message_,
                getParentForChildren(),
                isClean());
        message_ = null;
      }
      messageCase_ = 1;
      onChanged();
      return connectRequestBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        com.github.aptpod.proto.iscp2.v1.ConnectResponse, com.github.aptpod.proto.iscp2.v1.ConnectResponse.Builder, com.github.aptpod.proto.iscp2.v1.ConnectResponseOrBuilder> connectResponseBuilder_;
    /**
     * <code>.iscp2.v1.ConnectResponse connect_response = 2 [json_name = "connectResponse"];</code>
     * @return Whether the connectResponse field is set.
     */
    @java.lang.Override
    public boolean hasConnectResponse() {
      return messageCase_ == 2;
    }
    /**
     * <code>.iscp2.v1.ConnectResponse connect_response = 2 [json_name = "connectResponse"];</code>
     * @return The connectResponse.
     */
    @java.lang.Override
    public com.github.aptpod.proto.iscp2.v1.ConnectResponse getConnectResponse() {
      if (connectResponseBuilder_ == null) {
        if (messageCase_ == 2) {
          return (com.github.aptpod.proto.iscp2.v1.ConnectResponse) message_;
        }
        return com.github.aptpod.proto.iscp2.v1.ConnectResponse.getDefaultInstance();
      } else {
        if (messageCase_ == 2) {
          return connectResponseBuilder_.getMessage();
        }
        return com.github.aptpod.proto.iscp2.v1.ConnectResponse.getDefaultInstance();
      }
    }
    /**
     * <code>.iscp2.v1.ConnectResponse connect_response = 2 [json_name = "connectResponse"];</code>
     */
    public Builder setConnectResponse(com.github.aptpod.proto.iscp2.v1.ConnectResponse value) {
      if (connectResponseBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        message_ = value;
        onChanged();
      } else {
        connectResponseBuilder_.setMessage(value);
      }
      messageCase_ = 2;
      return this;
    }
    /**
     * <code>.iscp2.v1.ConnectResponse connect_response = 2 [json_name = "connectResponse"];</code>
     */
    public Builder setConnectResponse(
        com.github.aptpod.proto.iscp2.v1.ConnectResponse.Builder builderForValue) {
      if (connectResponseBuilder_ == null) {
        message_ = builderForValue.build();
        onChanged();
      } else {
        connectResponseBuilder_.setMessage(builderForValue.build());
      }
      messageCase_ = 2;
      return this;
    }
    /**
     * <code>.iscp2.v1.ConnectResponse connect_response = 2 [json_name = "connectResponse"];</code>
     */
    public Builder mergeConnectResponse(com.github.aptpod.proto.iscp2.v1.ConnectResponse value) {
      if (connectResponseBuilder_ == null) {
        if (messageCase_ == 2 &&
            message_ != com.github.aptpod.proto.iscp2.v1.ConnectResponse.getDefaultInstance()) {
          message_ = com.github.aptpod.proto.iscp2.v1.ConnectResponse.newBuilder((com.github.aptpod.proto.iscp2.v1.ConnectResponse) message_)
              .mergeFrom(value).buildPartial();
        } else {
          message_ = value;
        }
        onChanged();
      } else {
        if (messageCase_ == 2) {
          connectResponseBuilder_.mergeFrom(value);
        } else {
          connectResponseBuilder_.setMessage(value);
        }
      }
      messageCase_ = 2;
      return this;
    }
    /**
     * <code>.iscp2.v1.ConnectResponse connect_response = 2 [json_name = "connectResponse"];</code>
     */
    public Builder clearConnectResponse() {
      if (connectResponseBuilder_ == null) {
        if (messageCase_ == 2) {
          messageCase_ = 0;
          message_ = null;
          onChanged();
        }
      } else {
        if (messageCase_ == 2) {
          messageCase_ = 0;
          message_ = null;
        }
        connectResponseBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>.iscp2.v1.ConnectResponse connect_response = 2 [json_name = "connectResponse"];</code>
     */
    public com.github.aptpod.proto.iscp2.v1.ConnectResponse.Builder getConnectResponseBuilder() {
      return getConnectResponseFieldBuilder().getBuilder();
    }
    /**
     * <code>.iscp2.v1.ConnectResponse connect_response = 2 [json_name = "connectResponse"];</code>
     */
    @java.lang.Override
    public com.github.aptpod.proto.iscp2.v1.ConnectResponseOrBuilder getConnectResponseOrBuilder() {
      if ((messageCase_ == 2) && (connectResponseBuilder_ != null)) {
        return connectResponseBuilder_.getMessageOrBuilder();
      } else {
        if (messageCase_ == 2) {
          return (com.github.aptpod.proto.iscp2.v1.ConnectResponse) message_;
        }
        return com.github.aptpod.proto.iscp2.v1.ConnectResponse.getDefaultInstance();
      }
    }
    /**
     * <code>.iscp2.v1.ConnectResponse connect_response = 2 [json_name = "connectResponse"];</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.github.aptpod.proto.iscp2.v1.ConnectResponse, com.github.aptpod.proto.iscp2.v1.ConnectResponse.Builder, com.github.aptpod.proto.iscp2.v1.ConnectResponseOrBuilder> 
        getConnectResponseFieldBuilder() {
      if (connectResponseBuilder_ == null) {
        if (!(messageCase_ == 2)) {
          message_ = com.github.aptpod.proto.iscp2.v1.ConnectResponse.getDefaultInstance();
        }
        connectResponseBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.github.aptpod.proto.iscp2.v1.ConnectResponse, com.github.aptpod.proto.iscp2.v1.ConnectResponse.Builder, com.github.aptpod.proto.iscp2.v1.ConnectResponseOrBuilder>(
                (com.github.aptpod.proto.iscp2.v1.ConnectResponse) message_,
                getParentForChildren(),
                isClean());
        message_ = null;
      }
      messageCase_ = 2;
      onChanged();
      return connectResponseBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        com.github.aptpod.proto.iscp2.v1.Disconnect, com.github.aptpod.proto.iscp2.v1.Disconnect.Builder, com.github.aptpod.proto.iscp2.v1.DisconnectOrBuilder> disconnectBuilder_;
    /**
     * <code>.iscp2.v1.Disconnect disconnect = 3 [json_name = "disconnect"];</code>
     * @return Whether the disconnect field is set.
     */
    @java.lang.Override
    public boolean hasDisconnect() {
      return messageCase_ == 3;
    }
    /**
     * <code>.iscp2.v1.Disconnect disconnect = 3 [json_name = "disconnect"];</code>
     * @return The disconnect.
     */
    @java.lang.Override
    public com.github.aptpod.proto.iscp2.v1.Disconnect getDisconnect() {
      if (disconnectBuilder_ == null) {
        if (messageCase_ == 3) {
          return (com.github.aptpod.proto.iscp2.v1.Disconnect) message_;
        }
        return com.github.aptpod.proto.iscp2.v1.Disconnect.getDefaultInstance();
      } else {
        if (messageCase_ == 3) {
          return disconnectBuilder_.getMessage();
        }
        return com.github.aptpod.proto.iscp2.v1.Disconnect.getDefaultInstance();
      }
    }
    /**
     * <code>.iscp2.v1.Disconnect disconnect = 3 [json_name = "disconnect"];</code>
     */
    public Builder setDisconnect(com.github.aptpod.proto.iscp2.v1.Disconnect value) {
      if (disconnectBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        message_ = value;
        onChanged();
      } else {
        disconnectBuilder_.setMessage(value);
      }
      messageCase_ = 3;
      return this;
    }
    /**
     * <code>.iscp2.v1.Disconnect disconnect = 3 [json_name = "disconnect"];</code>
     */
    public Builder setDisconnect(
        com.github.aptpod.proto.iscp2.v1.Disconnect.Builder builderForValue) {
      if (disconnectBuilder_ == null) {
        message_ = builderForValue.build();
        onChanged();
      } else {
        disconnectBuilder_.setMessage(builderForValue.build());
      }
      messageCase_ = 3;
      return this;
    }
    /**
     * <code>.iscp2.v1.Disconnect disconnect = 3 [json_name = "disconnect"];</code>
     */
    public Builder mergeDisconnect(com.github.aptpod.proto.iscp2.v1.Disconnect value) {
      if (disconnectBuilder_ == null) {
        if (messageCase_ == 3 &&
            message_ != com.github.aptpod.proto.iscp2.v1.Disconnect.getDefaultInstance()) {
          message_ = com.github.aptpod.proto.iscp2.v1.Disconnect.newBuilder((com.github.aptpod.proto.iscp2.v1.Disconnect) message_)
              .mergeFrom(value).buildPartial();
        } else {
          message_ = value;
        }
        onChanged();
      } else {
        if (messageCase_ == 3) {
          disconnectBuilder_.mergeFrom(value);
        } else {
          disconnectBuilder_.setMessage(value);
        }
      }
      messageCase_ = 3;
      return this;
    }
    /**
     * <code>.iscp2.v1.Disconnect disconnect = 3 [json_name = "disconnect"];</code>
     */
    public Builder clearDisconnect() {
      if (disconnectBuilder_ == null) {
        if (messageCase_ == 3) {
          messageCase_ = 0;
          message_ = null;
          onChanged();
        }
      } else {
        if (messageCase_ == 3) {
          messageCase_ = 0;
          message_ = null;
        }
        disconnectBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>.iscp2.v1.Disconnect disconnect = 3 [json_name = "disconnect"];</code>
     */
    public com.github.aptpod.proto.iscp2.v1.Disconnect.Builder getDisconnectBuilder() {
      return getDisconnectFieldBuilder().getBuilder();
    }
    /**
     * <code>.iscp2.v1.Disconnect disconnect = 3 [json_name = "disconnect"];</code>
     */
    @java.lang.Override
    public com.github.aptpod.proto.iscp2.v1.DisconnectOrBuilder getDisconnectOrBuilder() {
      if ((messageCase_ == 3) && (disconnectBuilder_ != null)) {
        return disconnectBuilder_.getMessageOrBuilder();
      } else {
        if (messageCase_ == 3) {
          return (com.github.aptpod.proto.iscp2.v1.Disconnect) message_;
        }
        return com.github.aptpod.proto.iscp2.v1.Disconnect.getDefaultInstance();
      }
    }
    /**
     * <code>.iscp2.v1.Disconnect disconnect = 3 [json_name = "disconnect"];</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.github.aptpod.proto.iscp2.v1.Disconnect, com.github.aptpod.proto.iscp2.v1.Disconnect.Builder, com.github.aptpod.proto.iscp2.v1.DisconnectOrBuilder> 
        getDisconnectFieldBuilder() {
      if (disconnectBuilder_ == null) {
        if (!(messageCase_ == 3)) {
          message_ = com.github.aptpod.proto.iscp2.v1.Disconnect.getDefaultInstance();
        }
        disconnectBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.github.aptpod.proto.iscp2.v1.Disconnect, com.github.aptpod.proto.iscp2.v1.Disconnect.Builder, com.github.aptpod.proto.iscp2.v1.DisconnectOrBuilder>(
                (com.github.aptpod.proto.iscp2.v1.Disconnect) message_,
                getParentForChildren(),
                isClean());
        message_ = null;
      }
      messageCase_ = 3;
      onChanged();
      return disconnectBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        com.github.aptpod.proto.iscp2.v1.UpstreamOpenRequest, com.github.aptpod.proto.iscp2.v1.UpstreamOpenRequest.Builder, com.github.aptpod.proto.iscp2.v1.UpstreamOpenRequestOrBuilder> upstreamOpenRequestBuilder_;
    /**
     * <pre>
     * Upstream
     * </pre>
     *
     * <code>.iscp2.v1.UpstreamOpenRequest upstream_open_request = 64 [json_name = "upstreamOpenRequest"];</code>
     * @return Whether the upstreamOpenRequest field is set.
     */
    @java.lang.Override
    public boolean hasUpstreamOpenRequest() {
      return messageCase_ == 64;
    }
    /**
     * <pre>
     * Upstream
     * </pre>
     *
     * <code>.iscp2.v1.UpstreamOpenRequest upstream_open_request = 64 [json_name = "upstreamOpenRequest"];</code>
     * @return The upstreamOpenRequest.
     */
    @java.lang.Override
    public com.github.aptpod.proto.iscp2.v1.UpstreamOpenRequest getUpstreamOpenRequest() {
      if (upstreamOpenRequestBuilder_ == null) {
        if (messageCase_ == 64) {
          return (com.github.aptpod.proto.iscp2.v1.UpstreamOpenRequest) message_;
        }
        return com.github.aptpod.proto.iscp2.v1.UpstreamOpenRequest.getDefaultInstance();
      } else {
        if (messageCase_ == 64) {
          return upstreamOpenRequestBuilder_.getMessage();
        }
        return com.github.aptpod.proto.iscp2.v1.UpstreamOpenRequest.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * Upstream
     * </pre>
     *
     * <code>.iscp2.v1.UpstreamOpenRequest upstream_open_request = 64 [json_name = "upstreamOpenRequest"];</code>
     */
    public Builder setUpstreamOpenRequest(com.github.aptpod.proto.iscp2.v1.UpstreamOpenRequest value) {
      if (upstreamOpenRequestBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        message_ = value;
        onChanged();
      } else {
        upstreamOpenRequestBuilder_.setMessage(value);
      }
      messageCase_ = 64;
      return this;
    }
    /**
     * <pre>
     * Upstream
     * </pre>
     *
     * <code>.iscp2.v1.UpstreamOpenRequest upstream_open_request = 64 [json_name = "upstreamOpenRequest"];</code>
     */
    public Builder setUpstreamOpenRequest(
        com.github.aptpod.proto.iscp2.v1.UpstreamOpenRequest.Builder builderForValue) {
      if (upstreamOpenRequestBuilder_ == null) {
        message_ = builderForValue.build();
        onChanged();
      } else {
        upstreamOpenRequestBuilder_.setMessage(builderForValue.build());
      }
      messageCase_ = 64;
      return this;
    }
    /**
     * <pre>
     * Upstream
     * </pre>
     *
     * <code>.iscp2.v1.UpstreamOpenRequest upstream_open_request = 64 [json_name = "upstreamOpenRequest"];</code>
     */
    public Builder mergeUpstreamOpenRequest(com.github.aptpod.proto.iscp2.v1.UpstreamOpenRequest value) {
      if (upstreamOpenRequestBuilder_ == null) {
        if (messageCase_ == 64 &&
            message_ != com.github.aptpod.proto.iscp2.v1.UpstreamOpenRequest.getDefaultInstance()) {
          message_ = com.github.aptpod.proto.iscp2.v1.UpstreamOpenRequest.newBuilder((com.github.aptpod.proto.iscp2.v1.UpstreamOpenRequest) message_)
              .mergeFrom(value).buildPartial();
        } else {
          message_ = value;
        }
        onChanged();
      } else {
        if (messageCase_ == 64) {
          upstreamOpenRequestBuilder_.mergeFrom(value);
        } else {
          upstreamOpenRequestBuilder_.setMessage(value);
        }
      }
      messageCase_ = 64;
      return this;
    }
    /**
     * <pre>
     * Upstream
     * </pre>
     *
     * <code>.iscp2.v1.UpstreamOpenRequest upstream_open_request = 64 [json_name = "upstreamOpenRequest"];</code>
     */
    public Builder clearUpstreamOpenRequest() {
      if (upstreamOpenRequestBuilder_ == null) {
        if (messageCase_ == 64) {
          messageCase_ = 0;
          message_ = null;
          onChanged();
        }
      } else {
        if (messageCase_ == 64) {
          messageCase_ = 0;
          message_ = null;
        }
        upstreamOpenRequestBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * Upstream
     * </pre>
     *
     * <code>.iscp2.v1.UpstreamOpenRequest upstream_open_request = 64 [json_name = "upstreamOpenRequest"];</code>
     */
    public com.github.aptpod.proto.iscp2.v1.UpstreamOpenRequest.Builder getUpstreamOpenRequestBuilder() {
      return getUpstreamOpenRequestFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Upstream
     * </pre>
     *
     * <code>.iscp2.v1.UpstreamOpenRequest upstream_open_request = 64 [json_name = "upstreamOpenRequest"];</code>
     */
    @java.lang.Override
    public com.github.aptpod.proto.iscp2.v1.UpstreamOpenRequestOrBuilder getUpstreamOpenRequestOrBuilder() {
      if ((messageCase_ == 64) && (upstreamOpenRequestBuilder_ != null)) {
        return upstreamOpenRequestBuilder_.getMessageOrBuilder();
      } else {
        if (messageCase_ == 64) {
          return (com.github.aptpod.proto.iscp2.v1.UpstreamOpenRequest) message_;
        }
        return com.github.aptpod.proto.iscp2.v1.UpstreamOpenRequest.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * Upstream
     * </pre>
     *
     * <code>.iscp2.v1.UpstreamOpenRequest upstream_open_request = 64 [json_name = "upstreamOpenRequest"];</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.github.aptpod.proto.iscp2.v1.UpstreamOpenRequest, com.github.aptpod.proto.iscp2.v1.UpstreamOpenRequest.Builder, com.github.aptpod.proto.iscp2.v1.UpstreamOpenRequestOrBuilder> 
        getUpstreamOpenRequestFieldBuilder() {
      if (upstreamOpenRequestBuilder_ == null) {
        if (!(messageCase_ == 64)) {
          message_ = com.github.aptpod.proto.iscp2.v1.UpstreamOpenRequest.getDefaultInstance();
        }
        upstreamOpenRequestBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.github.aptpod.proto.iscp2.v1.UpstreamOpenRequest, com.github.aptpod.proto.iscp2.v1.UpstreamOpenRequest.Builder, com.github.aptpod.proto.iscp2.v1.UpstreamOpenRequestOrBuilder>(
                (com.github.aptpod.proto.iscp2.v1.UpstreamOpenRequest) message_,
                getParentForChildren(),
                isClean());
        message_ = null;
      }
      messageCase_ = 64;
      onChanged();
      return upstreamOpenRequestBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        com.github.aptpod.proto.iscp2.v1.UpstreamOpenResponse, com.github.aptpod.proto.iscp2.v1.UpstreamOpenResponse.Builder, com.github.aptpod.proto.iscp2.v1.UpstreamOpenResponseOrBuilder> upstreamOpenResponseBuilder_;
    /**
     * <code>.iscp2.v1.UpstreamOpenResponse upstream_open_response = 65 [json_name = "upstreamOpenResponse"];</code>
     * @return Whether the upstreamOpenResponse field is set.
     */
    @java.lang.Override
    public boolean hasUpstreamOpenResponse() {
      return messageCase_ == 65;
    }
    /**
     * <code>.iscp2.v1.UpstreamOpenResponse upstream_open_response = 65 [json_name = "upstreamOpenResponse"];</code>
     * @return The upstreamOpenResponse.
     */
    @java.lang.Override
    public com.github.aptpod.proto.iscp2.v1.UpstreamOpenResponse getUpstreamOpenResponse() {
      if (upstreamOpenResponseBuilder_ == null) {
        if (messageCase_ == 65) {
          return (com.github.aptpod.proto.iscp2.v1.UpstreamOpenResponse) message_;
        }
        return com.github.aptpod.proto.iscp2.v1.UpstreamOpenResponse.getDefaultInstance();
      } else {
        if (messageCase_ == 65) {
          return upstreamOpenResponseBuilder_.getMessage();
        }
        return com.github.aptpod.proto.iscp2.v1.UpstreamOpenResponse.getDefaultInstance();
      }
    }
    /**
     * <code>.iscp2.v1.UpstreamOpenResponse upstream_open_response = 65 [json_name = "upstreamOpenResponse"];</code>
     */
    public Builder setUpstreamOpenResponse(com.github.aptpod.proto.iscp2.v1.UpstreamOpenResponse value) {
      if (upstreamOpenResponseBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        message_ = value;
        onChanged();
      } else {
        upstreamOpenResponseBuilder_.setMessage(value);
      }
      messageCase_ = 65;
      return this;
    }
    /**
     * <code>.iscp2.v1.UpstreamOpenResponse upstream_open_response = 65 [json_name = "upstreamOpenResponse"];</code>
     */
    public Builder setUpstreamOpenResponse(
        com.github.aptpod.proto.iscp2.v1.UpstreamOpenResponse.Builder builderForValue) {
      if (upstreamOpenResponseBuilder_ == null) {
        message_ = builderForValue.build();
        onChanged();
      } else {
        upstreamOpenResponseBuilder_.setMessage(builderForValue.build());
      }
      messageCase_ = 65;
      return this;
    }
    /**
     * <code>.iscp2.v1.UpstreamOpenResponse upstream_open_response = 65 [json_name = "upstreamOpenResponse"];</code>
     */
    public Builder mergeUpstreamOpenResponse(com.github.aptpod.proto.iscp2.v1.UpstreamOpenResponse value) {
      if (upstreamOpenResponseBuilder_ == null) {
        if (messageCase_ == 65 &&
            message_ != com.github.aptpod.proto.iscp2.v1.UpstreamOpenResponse.getDefaultInstance()) {
          message_ = com.github.aptpod.proto.iscp2.v1.UpstreamOpenResponse.newBuilder((com.github.aptpod.proto.iscp2.v1.UpstreamOpenResponse) message_)
              .mergeFrom(value).buildPartial();
        } else {
          message_ = value;
        }
        onChanged();
      } else {
        if (messageCase_ == 65) {
          upstreamOpenResponseBuilder_.mergeFrom(value);
        } else {
          upstreamOpenResponseBuilder_.setMessage(value);
        }
      }
      messageCase_ = 65;
      return this;
    }
    /**
     * <code>.iscp2.v1.UpstreamOpenResponse upstream_open_response = 65 [json_name = "upstreamOpenResponse"];</code>
     */
    public Builder clearUpstreamOpenResponse() {
      if (upstreamOpenResponseBuilder_ == null) {
        if (messageCase_ == 65) {
          messageCase_ = 0;
          message_ = null;
          onChanged();
        }
      } else {
        if (messageCase_ == 65) {
          messageCase_ = 0;
          message_ = null;
        }
        upstreamOpenResponseBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>.iscp2.v1.UpstreamOpenResponse upstream_open_response = 65 [json_name = "upstreamOpenResponse"];</code>
     */
    public com.github.aptpod.proto.iscp2.v1.UpstreamOpenResponse.Builder getUpstreamOpenResponseBuilder() {
      return getUpstreamOpenResponseFieldBuilder().getBuilder();
    }
    /**
     * <code>.iscp2.v1.UpstreamOpenResponse upstream_open_response = 65 [json_name = "upstreamOpenResponse"];</code>
     */
    @java.lang.Override
    public com.github.aptpod.proto.iscp2.v1.UpstreamOpenResponseOrBuilder getUpstreamOpenResponseOrBuilder() {
      if ((messageCase_ == 65) && (upstreamOpenResponseBuilder_ != null)) {
        return upstreamOpenResponseBuilder_.getMessageOrBuilder();
      } else {
        if (messageCase_ == 65) {
          return (com.github.aptpod.proto.iscp2.v1.UpstreamOpenResponse) message_;
        }
        return com.github.aptpod.proto.iscp2.v1.UpstreamOpenResponse.getDefaultInstance();
      }
    }
    /**
     * <code>.iscp2.v1.UpstreamOpenResponse upstream_open_response = 65 [json_name = "upstreamOpenResponse"];</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.github.aptpod.proto.iscp2.v1.UpstreamOpenResponse, com.github.aptpod.proto.iscp2.v1.UpstreamOpenResponse.Builder, com.github.aptpod.proto.iscp2.v1.UpstreamOpenResponseOrBuilder> 
        getUpstreamOpenResponseFieldBuilder() {
      if (upstreamOpenResponseBuilder_ == null) {
        if (!(messageCase_ == 65)) {
          message_ = com.github.aptpod.proto.iscp2.v1.UpstreamOpenResponse.getDefaultInstance();
        }
        upstreamOpenResponseBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.github.aptpod.proto.iscp2.v1.UpstreamOpenResponse, com.github.aptpod.proto.iscp2.v1.UpstreamOpenResponse.Builder, com.github.aptpod.proto.iscp2.v1.UpstreamOpenResponseOrBuilder>(
                (com.github.aptpod.proto.iscp2.v1.UpstreamOpenResponse) message_,
                getParentForChildren(),
                isClean());
        message_ = null;
      }
      messageCase_ = 65;
      onChanged();
      return upstreamOpenResponseBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        com.github.aptpod.proto.iscp2.v1.UpstreamResumeRequest, com.github.aptpod.proto.iscp2.v1.UpstreamResumeRequest.Builder, com.github.aptpod.proto.iscp2.v1.UpstreamResumeRequestOrBuilder> upstreamResumeRequestBuilder_;
    /**
     * <code>.iscp2.v1.UpstreamResumeRequest upstream_resume_request = 66 [json_name = "upstreamResumeRequest"];</code>
     * @return Whether the upstreamResumeRequest field is set.
     */
    @java.lang.Override
    public boolean hasUpstreamResumeRequest() {
      return messageCase_ == 66;
    }
    /**
     * <code>.iscp2.v1.UpstreamResumeRequest upstream_resume_request = 66 [json_name = "upstreamResumeRequest"];</code>
     * @return The upstreamResumeRequest.
     */
    @java.lang.Override
    public com.github.aptpod.proto.iscp2.v1.UpstreamResumeRequest getUpstreamResumeRequest() {
      if (upstreamResumeRequestBuilder_ == null) {
        if (messageCase_ == 66) {
          return (com.github.aptpod.proto.iscp2.v1.UpstreamResumeRequest) message_;
        }
        return com.github.aptpod.proto.iscp2.v1.UpstreamResumeRequest.getDefaultInstance();
      } else {
        if (messageCase_ == 66) {
          return upstreamResumeRequestBuilder_.getMessage();
        }
        return com.github.aptpod.proto.iscp2.v1.UpstreamResumeRequest.getDefaultInstance();
      }
    }
    /**
     * <code>.iscp2.v1.UpstreamResumeRequest upstream_resume_request = 66 [json_name = "upstreamResumeRequest"];</code>
     */
    public Builder setUpstreamResumeRequest(com.github.aptpod.proto.iscp2.v1.UpstreamResumeRequest value) {
      if (upstreamResumeRequestBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        message_ = value;
        onChanged();
      } else {
        upstreamResumeRequestBuilder_.setMessage(value);
      }
      messageCase_ = 66;
      return this;
    }
    /**
     * <code>.iscp2.v1.UpstreamResumeRequest upstream_resume_request = 66 [json_name = "upstreamResumeRequest"];</code>
     */
    public Builder setUpstreamResumeRequest(
        com.github.aptpod.proto.iscp2.v1.UpstreamResumeRequest.Builder builderForValue) {
      if (upstreamResumeRequestBuilder_ == null) {
        message_ = builderForValue.build();
        onChanged();
      } else {
        upstreamResumeRequestBuilder_.setMessage(builderForValue.build());
      }
      messageCase_ = 66;
      return this;
    }
    /**
     * <code>.iscp2.v1.UpstreamResumeRequest upstream_resume_request = 66 [json_name = "upstreamResumeRequest"];</code>
     */
    public Builder mergeUpstreamResumeRequest(com.github.aptpod.proto.iscp2.v1.UpstreamResumeRequest value) {
      if (upstreamResumeRequestBuilder_ == null) {
        if (messageCase_ == 66 &&
            message_ != com.github.aptpod.proto.iscp2.v1.UpstreamResumeRequest.getDefaultInstance()) {
          message_ = com.github.aptpod.proto.iscp2.v1.UpstreamResumeRequest.newBuilder((com.github.aptpod.proto.iscp2.v1.UpstreamResumeRequest) message_)
              .mergeFrom(value).buildPartial();
        } else {
          message_ = value;
        }
        onChanged();
      } else {
        if (messageCase_ == 66) {
          upstreamResumeRequestBuilder_.mergeFrom(value);
        } else {
          upstreamResumeRequestBuilder_.setMessage(value);
        }
      }
      messageCase_ = 66;
      return this;
    }
    /**
     * <code>.iscp2.v1.UpstreamResumeRequest upstream_resume_request = 66 [json_name = "upstreamResumeRequest"];</code>
     */
    public Builder clearUpstreamResumeRequest() {
      if (upstreamResumeRequestBuilder_ == null) {
        if (messageCase_ == 66) {
          messageCase_ = 0;
          message_ = null;
          onChanged();
        }
      } else {
        if (messageCase_ == 66) {
          messageCase_ = 0;
          message_ = null;
        }
        upstreamResumeRequestBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>.iscp2.v1.UpstreamResumeRequest upstream_resume_request = 66 [json_name = "upstreamResumeRequest"];</code>
     */
    public com.github.aptpod.proto.iscp2.v1.UpstreamResumeRequest.Builder getUpstreamResumeRequestBuilder() {
      return getUpstreamResumeRequestFieldBuilder().getBuilder();
    }
    /**
     * <code>.iscp2.v1.UpstreamResumeRequest upstream_resume_request = 66 [json_name = "upstreamResumeRequest"];</code>
     */
    @java.lang.Override
    public com.github.aptpod.proto.iscp2.v1.UpstreamResumeRequestOrBuilder getUpstreamResumeRequestOrBuilder() {
      if ((messageCase_ == 66) && (upstreamResumeRequestBuilder_ != null)) {
        return upstreamResumeRequestBuilder_.getMessageOrBuilder();
      } else {
        if (messageCase_ == 66) {
          return (com.github.aptpod.proto.iscp2.v1.UpstreamResumeRequest) message_;
        }
        return com.github.aptpod.proto.iscp2.v1.UpstreamResumeRequest.getDefaultInstance();
      }
    }
    /**
     * <code>.iscp2.v1.UpstreamResumeRequest upstream_resume_request = 66 [json_name = "upstreamResumeRequest"];</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.github.aptpod.proto.iscp2.v1.UpstreamResumeRequest, com.github.aptpod.proto.iscp2.v1.UpstreamResumeRequest.Builder, com.github.aptpod.proto.iscp2.v1.UpstreamResumeRequestOrBuilder> 
        getUpstreamResumeRequestFieldBuilder() {
      if (upstreamResumeRequestBuilder_ == null) {
        if (!(messageCase_ == 66)) {
          message_ = com.github.aptpod.proto.iscp2.v1.UpstreamResumeRequest.getDefaultInstance();
        }
        upstreamResumeRequestBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.github.aptpod.proto.iscp2.v1.UpstreamResumeRequest, com.github.aptpod.proto.iscp2.v1.UpstreamResumeRequest.Builder, com.github.aptpod.proto.iscp2.v1.UpstreamResumeRequestOrBuilder>(
                (com.github.aptpod.proto.iscp2.v1.UpstreamResumeRequest) message_,
                getParentForChildren(),
                isClean());
        message_ = null;
      }
      messageCase_ = 66;
      onChanged();
      return upstreamResumeRequestBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        com.github.aptpod.proto.iscp2.v1.UpstreamResumeResponse, com.github.aptpod.proto.iscp2.v1.UpstreamResumeResponse.Builder, com.github.aptpod.proto.iscp2.v1.UpstreamResumeResponseOrBuilder> upstreamResumeResponseBuilder_;
    /**
     * <code>.iscp2.v1.UpstreamResumeResponse upstream_resume_response = 67 [json_name = "upstreamResumeResponse"];</code>
     * @return Whether the upstreamResumeResponse field is set.
     */
    @java.lang.Override
    public boolean hasUpstreamResumeResponse() {
      return messageCase_ == 67;
    }
    /**
     * <code>.iscp2.v1.UpstreamResumeResponse upstream_resume_response = 67 [json_name = "upstreamResumeResponse"];</code>
     * @return The upstreamResumeResponse.
     */
    @java.lang.Override
    public com.github.aptpod.proto.iscp2.v1.UpstreamResumeResponse getUpstreamResumeResponse() {
      if (upstreamResumeResponseBuilder_ == null) {
        if (messageCase_ == 67) {
          return (com.github.aptpod.proto.iscp2.v1.UpstreamResumeResponse) message_;
        }
        return com.github.aptpod.proto.iscp2.v1.UpstreamResumeResponse.getDefaultInstance();
      } else {
        if (messageCase_ == 67) {
          return upstreamResumeResponseBuilder_.getMessage();
        }
        return com.github.aptpod.proto.iscp2.v1.UpstreamResumeResponse.getDefaultInstance();
      }
    }
    /**
     * <code>.iscp2.v1.UpstreamResumeResponse upstream_resume_response = 67 [json_name = "upstreamResumeResponse"];</code>
     */
    public Builder setUpstreamResumeResponse(com.github.aptpod.proto.iscp2.v1.UpstreamResumeResponse value) {
      if (upstreamResumeResponseBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        message_ = value;
        onChanged();
      } else {
        upstreamResumeResponseBuilder_.setMessage(value);
      }
      messageCase_ = 67;
      return this;
    }
    /**
     * <code>.iscp2.v1.UpstreamResumeResponse upstream_resume_response = 67 [json_name = "upstreamResumeResponse"];</code>
     */
    public Builder setUpstreamResumeResponse(
        com.github.aptpod.proto.iscp2.v1.UpstreamResumeResponse.Builder builderForValue) {
      if (upstreamResumeResponseBuilder_ == null) {
        message_ = builderForValue.build();
        onChanged();
      } else {
        upstreamResumeResponseBuilder_.setMessage(builderForValue.build());
      }
      messageCase_ = 67;
      return this;
    }
    /**
     * <code>.iscp2.v1.UpstreamResumeResponse upstream_resume_response = 67 [json_name = "upstreamResumeResponse"];</code>
     */
    public Builder mergeUpstreamResumeResponse(com.github.aptpod.proto.iscp2.v1.UpstreamResumeResponse value) {
      if (upstreamResumeResponseBuilder_ == null) {
        if (messageCase_ == 67 &&
            message_ != com.github.aptpod.proto.iscp2.v1.UpstreamResumeResponse.getDefaultInstance()) {
          message_ = com.github.aptpod.proto.iscp2.v1.UpstreamResumeResponse.newBuilder((com.github.aptpod.proto.iscp2.v1.UpstreamResumeResponse) message_)
              .mergeFrom(value).buildPartial();
        } else {
          message_ = value;
        }
        onChanged();
      } else {
        if (messageCase_ == 67) {
          upstreamResumeResponseBuilder_.mergeFrom(value);
        } else {
          upstreamResumeResponseBuilder_.setMessage(value);
        }
      }
      messageCase_ = 67;
      return this;
    }
    /**
     * <code>.iscp2.v1.UpstreamResumeResponse upstream_resume_response = 67 [json_name = "upstreamResumeResponse"];</code>
     */
    public Builder clearUpstreamResumeResponse() {
      if (upstreamResumeResponseBuilder_ == null) {
        if (messageCase_ == 67) {
          messageCase_ = 0;
          message_ = null;
          onChanged();
        }
      } else {
        if (messageCase_ == 67) {
          messageCase_ = 0;
          message_ = null;
        }
        upstreamResumeResponseBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>.iscp2.v1.UpstreamResumeResponse upstream_resume_response = 67 [json_name = "upstreamResumeResponse"];</code>
     */
    public com.github.aptpod.proto.iscp2.v1.UpstreamResumeResponse.Builder getUpstreamResumeResponseBuilder() {
      return getUpstreamResumeResponseFieldBuilder().getBuilder();
    }
    /**
     * <code>.iscp2.v1.UpstreamResumeResponse upstream_resume_response = 67 [json_name = "upstreamResumeResponse"];</code>
     */
    @java.lang.Override
    public com.github.aptpod.proto.iscp2.v1.UpstreamResumeResponseOrBuilder getUpstreamResumeResponseOrBuilder() {
      if ((messageCase_ == 67) && (upstreamResumeResponseBuilder_ != null)) {
        return upstreamResumeResponseBuilder_.getMessageOrBuilder();
      } else {
        if (messageCase_ == 67) {
          return (com.github.aptpod.proto.iscp2.v1.UpstreamResumeResponse) message_;
        }
        return com.github.aptpod.proto.iscp2.v1.UpstreamResumeResponse.getDefaultInstance();
      }
    }
    /**
     * <code>.iscp2.v1.UpstreamResumeResponse upstream_resume_response = 67 [json_name = "upstreamResumeResponse"];</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.github.aptpod.proto.iscp2.v1.UpstreamResumeResponse, com.github.aptpod.proto.iscp2.v1.UpstreamResumeResponse.Builder, com.github.aptpod.proto.iscp2.v1.UpstreamResumeResponseOrBuilder> 
        getUpstreamResumeResponseFieldBuilder() {
      if (upstreamResumeResponseBuilder_ == null) {
        if (!(messageCase_ == 67)) {
          message_ = com.github.aptpod.proto.iscp2.v1.UpstreamResumeResponse.getDefaultInstance();
        }
        upstreamResumeResponseBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.github.aptpod.proto.iscp2.v1.UpstreamResumeResponse, com.github.aptpod.proto.iscp2.v1.UpstreamResumeResponse.Builder, com.github.aptpod.proto.iscp2.v1.UpstreamResumeResponseOrBuilder>(
                (com.github.aptpod.proto.iscp2.v1.UpstreamResumeResponse) message_,
                getParentForChildren(),
                isClean());
        message_ = null;
      }
      messageCase_ = 67;
      onChanged();
      return upstreamResumeResponseBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        com.github.aptpod.proto.iscp2.v1.UpstreamCloseRequest, com.github.aptpod.proto.iscp2.v1.UpstreamCloseRequest.Builder, com.github.aptpod.proto.iscp2.v1.UpstreamCloseRequestOrBuilder> upstreamCloseRequestBuilder_;
    /**
     * <code>.iscp2.v1.UpstreamCloseRequest upstream_close_request = 68 [json_name = "upstreamCloseRequest"];</code>
     * @return Whether the upstreamCloseRequest field is set.
     */
    @java.lang.Override
    public boolean hasUpstreamCloseRequest() {
      return messageCase_ == 68;
    }
    /**
     * <code>.iscp2.v1.UpstreamCloseRequest upstream_close_request = 68 [json_name = "upstreamCloseRequest"];</code>
     * @return The upstreamCloseRequest.
     */
    @java.lang.Override
    public com.github.aptpod.proto.iscp2.v1.UpstreamCloseRequest getUpstreamCloseRequest() {
      if (upstreamCloseRequestBuilder_ == null) {
        if (messageCase_ == 68) {
          return (com.github.aptpod.proto.iscp2.v1.UpstreamCloseRequest) message_;
        }
        return com.github.aptpod.proto.iscp2.v1.UpstreamCloseRequest.getDefaultInstance();
      } else {
        if (messageCase_ == 68) {
          return upstreamCloseRequestBuilder_.getMessage();
        }
        return com.github.aptpod.proto.iscp2.v1.UpstreamCloseRequest.getDefaultInstance();
      }
    }
    /**
     * <code>.iscp2.v1.UpstreamCloseRequest upstream_close_request = 68 [json_name = "upstreamCloseRequest"];</code>
     */
    public Builder setUpstreamCloseRequest(com.github.aptpod.proto.iscp2.v1.UpstreamCloseRequest value) {
      if (upstreamCloseRequestBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        message_ = value;
        onChanged();
      } else {
        upstreamCloseRequestBuilder_.setMessage(value);
      }
      messageCase_ = 68;
      return this;
    }
    /**
     * <code>.iscp2.v1.UpstreamCloseRequest upstream_close_request = 68 [json_name = "upstreamCloseRequest"];</code>
     */
    public Builder setUpstreamCloseRequest(
        com.github.aptpod.proto.iscp2.v1.UpstreamCloseRequest.Builder builderForValue) {
      if (upstreamCloseRequestBuilder_ == null) {
        message_ = builderForValue.build();
        onChanged();
      } else {
        upstreamCloseRequestBuilder_.setMessage(builderForValue.build());
      }
      messageCase_ = 68;
      return this;
    }
    /**
     * <code>.iscp2.v1.UpstreamCloseRequest upstream_close_request = 68 [json_name = "upstreamCloseRequest"];</code>
     */
    public Builder mergeUpstreamCloseRequest(com.github.aptpod.proto.iscp2.v1.UpstreamCloseRequest value) {
      if (upstreamCloseRequestBuilder_ == null) {
        if (messageCase_ == 68 &&
            message_ != com.github.aptpod.proto.iscp2.v1.UpstreamCloseRequest.getDefaultInstance()) {
          message_ = com.github.aptpod.proto.iscp2.v1.UpstreamCloseRequest.newBuilder((com.github.aptpod.proto.iscp2.v1.UpstreamCloseRequest) message_)
              .mergeFrom(value).buildPartial();
        } else {
          message_ = value;
        }
        onChanged();
      } else {
        if (messageCase_ == 68) {
          upstreamCloseRequestBuilder_.mergeFrom(value);
        } else {
          upstreamCloseRequestBuilder_.setMessage(value);
        }
      }
      messageCase_ = 68;
      return this;
    }
    /**
     * <code>.iscp2.v1.UpstreamCloseRequest upstream_close_request = 68 [json_name = "upstreamCloseRequest"];</code>
     */
    public Builder clearUpstreamCloseRequest() {
      if (upstreamCloseRequestBuilder_ == null) {
        if (messageCase_ == 68) {
          messageCase_ = 0;
          message_ = null;
          onChanged();
        }
      } else {
        if (messageCase_ == 68) {
          messageCase_ = 0;
          message_ = null;
        }
        upstreamCloseRequestBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>.iscp2.v1.UpstreamCloseRequest upstream_close_request = 68 [json_name = "upstreamCloseRequest"];</code>
     */
    public com.github.aptpod.proto.iscp2.v1.UpstreamCloseRequest.Builder getUpstreamCloseRequestBuilder() {
      return getUpstreamCloseRequestFieldBuilder().getBuilder();
    }
    /**
     * <code>.iscp2.v1.UpstreamCloseRequest upstream_close_request = 68 [json_name = "upstreamCloseRequest"];</code>
     */
    @java.lang.Override
    public com.github.aptpod.proto.iscp2.v1.UpstreamCloseRequestOrBuilder getUpstreamCloseRequestOrBuilder() {
      if ((messageCase_ == 68) && (upstreamCloseRequestBuilder_ != null)) {
        return upstreamCloseRequestBuilder_.getMessageOrBuilder();
      } else {
        if (messageCase_ == 68) {
          return (com.github.aptpod.proto.iscp2.v1.UpstreamCloseRequest) message_;
        }
        return com.github.aptpod.proto.iscp2.v1.UpstreamCloseRequest.getDefaultInstance();
      }
    }
    /**
     * <code>.iscp2.v1.UpstreamCloseRequest upstream_close_request = 68 [json_name = "upstreamCloseRequest"];</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.github.aptpod.proto.iscp2.v1.UpstreamCloseRequest, com.github.aptpod.proto.iscp2.v1.UpstreamCloseRequest.Builder, com.github.aptpod.proto.iscp2.v1.UpstreamCloseRequestOrBuilder> 
        getUpstreamCloseRequestFieldBuilder() {
      if (upstreamCloseRequestBuilder_ == null) {
        if (!(messageCase_ == 68)) {
          message_ = com.github.aptpod.proto.iscp2.v1.UpstreamCloseRequest.getDefaultInstance();
        }
        upstreamCloseRequestBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.github.aptpod.proto.iscp2.v1.UpstreamCloseRequest, com.github.aptpod.proto.iscp2.v1.UpstreamCloseRequest.Builder, com.github.aptpod.proto.iscp2.v1.UpstreamCloseRequestOrBuilder>(
                (com.github.aptpod.proto.iscp2.v1.UpstreamCloseRequest) message_,
                getParentForChildren(),
                isClean());
        message_ = null;
      }
      messageCase_ = 68;
      onChanged();
      return upstreamCloseRequestBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        com.github.aptpod.proto.iscp2.v1.UpstreamCloseResponse, com.github.aptpod.proto.iscp2.v1.UpstreamCloseResponse.Builder, com.github.aptpod.proto.iscp2.v1.UpstreamCloseResponseOrBuilder> upstreamCloseResponseBuilder_;
    /**
     * <code>.iscp2.v1.UpstreamCloseResponse upstream_close_response = 69 [json_name = "upstreamCloseResponse"];</code>
     * @return Whether the upstreamCloseResponse field is set.
     */
    @java.lang.Override
    public boolean hasUpstreamCloseResponse() {
      return messageCase_ == 69;
    }
    /**
     * <code>.iscp2.v1.UpstreamCloseResponse upstream_close_response = 69 [json_name = "upstreamCloseResponse"];</code>
     * @return The upstreamCloseResponse.
     */
    @java.lang.Override
    public com.github.aptpod.proto.iscp2.v1.UpstreamCloseResponse getUpstreamCloseResponse() {
      if (upstreamCloseResponseBuilder_ == null) {
        if (messageCase_ == 69) {
          return (com.github.aptpod.proto.iscp2.v1.UpstreamCloseResponse) message_;
        }
        return com.github.aptpod.proto.iscp2.v1.UpstreamCloseResponse.getDefaultInstance();
      } else {
        if (messageCase_ == 69) {
          return upstreamCloseResponseBuilder_.getMessage();
        }
        return com.github.aptpod.proto.iscp2.v1.UpstreamCloseResponse.getDefaultInstance();
      }
    }
    /**
     * <code>.iscp2.v1.UpstreamCloseResponse upstream_close_response = 69 [json_name = "upstreamCloseResponse"];</code>
     */
    public Builder setUpstreamCloseResponse(com.github.aptpod.proto.iscp2.v1.UpstreamCloseResponse value) {
      if (upstreamCloseResponseBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        message_ = value;
        onChanged();
      } else {
        upstreamCloseResponseBuilder_.setMessage(value);
      }
      messageCase_ = 69;
      return this;
    }
    /**
     * <code>.iscp2.v1.UpstreamCloseResponse upstream_close_response = 69 [json_name = "upstreamCloseResponse"];</code>
     */
    public Builder setUpstreamCloseResponse(
        com.github.aptpod.proto.iscp2.v1.UpstreamCloseResponse.Builder builderForValue) {
      if (upstreamCloseResponseBuilder_ == null) {
        message_ = builderForValue.build();
        onChanged();
      } else {
        upstreamCloseResponseBuilder_.setMessage(builderForValue.build());
      }
      messageCase_ = 69;
      return this;
    }
    /**
     * <code>.iscp2.v1.UpstreamCloseResponse upstream_close_response = 69 [json_name = "upstreamCloseResponse"];</code>
     */
    public Builder mergeUpstreamCloseResponse(com.github.aptpod.proto.iscp2.v1.UpstreamCloseResponse value) {
      if (upstreamCloseResponseBuilder_ == null) {
        if (messageCase_ == 69 &&
            message_ != com.github.aptpod.proto.iscp2.v1.UpstreamCloseResponse.getDefaultInstance()) {
          message_ = com.github.aptpod.proto.iscp2.v1.UpstreamCloseResponse.newBuilder((com.github.aptpod.proto.iscp2.v1.UpstreamCloseResponse) message_)
              .mergeFrom(value).buildPartial();
        } else {
          message_ = value;
        }
        onChanged();
      } else {
        if (messageCase_ == 69) {
          upstreamCloseResponseBuilder_.mergeFrom(value);
        } else {
          upstreamCloseResponseBuilder_.setMessage(value);
        }
      }
      messageCase_ = 69;
      return this;
    }
    /**
     * <code>.iscp2.v1.UpstreamCloseResponse upstream_close_response = 69 [json_name = "upstreamCloseResponse"];</code>
     */
    public Builder clearUpstreamCloseResponse() {
      if (upstreamCloseResponseBuilder_ == null) {
        if (messageCase_ == 69) {
          messageCase_ = 0;
          message_ = null;
          onChanged();
        }
      } else {
        if (messageCase_ == 69) {
          messageCase_ = 0;
          message_ = null;
        }
        upstreamCloseResponseBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>.iscp2.v1.UpstreamCloseResponse upstream_close_response = 69 [json_name = "upstreamCloseResponse"];</code>
     */
    public com.github.aptpod.proto.iscp2.v1.UpstreamCloseResponse.Builder getUpstreamCloseResponseBuilder() {
      return getUpstreamCloseResponseFieldBuilder().getBuilder();
    }
    /**
     * <code>.iscp2.v1.UpstreamCloseResponse upstream_close_response = 69 [json_name = "upstreamCloseResponse"];</code>
     */
    @java.lang.Override
    public com.github.aptpod.proto.iscp2.v1.UpstreamCloseResponseOrBuilder getUpstreamCloseResponseOrBuilder() {
      if ((messageCase_ == 69) && (upstreamCloseResponseBuilder_ != null)) {
        return upstreamCloseResponseBuilder_.getMessageOrBuilder();
      } else {
        if (messageCase_ == 69) {
          return (com.github.aptpod.proto.iscp2.v1.UpstreamCloseResponse) message_;
        }
        return com.github.aptpod.proto.iscp2.v1.UpstreamCloseResponse.getDefaultInstance();
      }
    }
    /**
     * <code>.iscp2.v1.UpstreamCloseResponse upstream_close_response = 69 [json_name = "upstreamCloseResponse"];</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.github.aptpod.proto.iscp2.v1.UpstreamCloseResponse, com.github.aptpod.proto.iscp2.v1.UpstreamCloseResponse.Builder, com.github.aptpod.proto.iscp2.v1.UpstreamCloseResponseOrBuilder> 
        getUpstreamCloseResponseFieldBuilder() {
      if (upstreamCloseResponseBuilder_ == null) {
        if (!(messageCase_ == 69)) {
          message_ = com.github.aptpod.proto.iscp2.v1.UpstreamCloseResponse.getDefaultInstance();
        }
        upstreamCloseResponseBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.github.aptpod.proto.iscp2.v1.UpstreamCloseResponse, com.github.aptpod.proto.iscp2.v1.UpstreamCloseResponse.Builder, com.github.aptpod.proto.iscp2.v1.UpstreamCloseResponseOrBuilder>(
                (com.github.aptpod.proto.iscp2.v1.UpstreamCloseResponse) message_,
                getParentForChildren(),
                isClean());
        message_ = null;
      }
      messageCase_ = 69;
      onChanged();
      return upstreamCloseResponseBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        com.github.aptpod.proto.iscp2.v1.UpstreamChunk, com.github.aptpod.proto.iscp2.v1.UpstreamChunk.Builder, com.github.aptpod.proto.iscp2.v1.UpstreamChunkOrBuilder> upstreamChunkBuilder_;
    /**
     * <code>.iscp2.v1.UpstreamChunk upstream_chunk = 70 [json_name = "upstreamChunk"];</code>
     * @return Whether the upstreamChunk field is set.
     */
    @java.lang.Override
    public boolean hasUpstreamChunk() {
      return messageCase_ == 70;
    }
    /**
     * <code>.iscp2.v1.UpstreamChunk upstream_chunk = 70 [json_name = "upstreamChunk"];</code>
     * @return The upstreamChunk.
     */
    @java.lang.Override
    public com.github.aptpod.proto.iscp2.v1.UpstreamChunk getUpstreamChunk() {
      if (upstreamChunkBuilder_ == null) {
        if (messageCase_ == 70) {
          return (com.github.aptpod.proto.iscp2.v1.UpstreamChunk) message_;
        }
        return com.github.aptpod.proto.iscp2.v1.UpstreamChunk.getDefaultInstance();
      } else {
        if (messageCase_ == 70) {
          return upstreamChunkBuilder_.getMessage();
        }
        return com.github.aptpod.proto.iscp2.v1.UpstreamChunk.getDefaultInstance();
      }
    }
    /**
     * <code>.iscp2.v1.UpstreamChunk upstream_chunk = 70 [json_name = "upstreamChunk"];</code>
     */
    public Builder setUpstreamChunk(com.github.aptpod.proto.iscp2.v1.UpstreamChunk value) {
      if (upstreamChunkBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        message_ = value;
        onChanged();
      } else {
        upstreamChunkBuilder_.setMessage(value);
      }
      messageCase_ = 70;
      return this;
    }
    /**
     * <code>.iscp2.v1.UpstreamChunk upstream_chunk = 70 [json_name = "upstreamChunk"];</code>
     */
    public Builder setUpstreamChunk(
        com.github.aptpod.proto.iscp2.v1.UpstreamChunk.Builder builderForValue) {
      if (upstreamChunkBuilder_ == null) {
        message_ = builderForValue.build();
        onChanged();
      } else {
        upstreamChunkBuilder_.setMessage(builderForValue.build());
      }
      messageCase_ = 70;
      return this;
    }
    /**
     * <code>.iscp2.v1.UpstreamChunk upstream_chunk = 70 [json_name = "upstreamChunk"];</code>
     */
    public Builder mergeUpstreamChunk(com.github.aptpod.proto.iscp2.v1.UpstreamChunk value) {
      if (upstreamChunkBuilder_ == null) {
        if (messageCase_ == 70 &&
            message_ != com.github.aptpod.proto.iscp2.v1.UpstreamChunk.getDefaultInstance()) {
          message_ = com.github.aptpod.proto.iscp2.v1.UpstreamChunk.newBuilder((com.github.aptpod.proto.iscp2.v1.UpstreamChunk) message_)
              .mergeFrom(value).buildPartial();
        } else {
          message_ = value;
        }
        onChanged();
      } else {
        if (messageCase_ == 70) {
          upstreamChunkBuilder_.mergeFrom(value);
        } else {
          upstreamChunkBuilder_.setMessage(value);
        }
      }
      messageCase_ = 70;
      return this;
    }
    /**
     * <code>.iscp2.v1.UpstreamChunk upstream_chunk = 70 [json_name = "upstreamChunk"];</code>
     */
    public Builder clearUpstreamChunk() {
      if (upstreamChunkBuilder_ == null) {
        if (messageCase_ == 70) {
          messageCase_ = 0;
          message_ = null;
          onChanged();
        }
      } else {
        if (messageCase_ == 70) {
          messageCase_ = 0;
          message_ = null;
        }
        upstreamChunkBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>.iscp2.v1.UpstreamChunk upstream_chunk = 70 [json_name = "upstreamChunk"];</code>
     */
    public com.github.aptpod.proto.iscp2.v1.UpstreamChunk.Builder getUpstreamChunkBuilder() {
      return getUpstreamChunkFieldBuilder().getBuilder();
    }
    /**
     * <code>.iscp2.v1.UpstreamChunk upstream_chunk = 70 [json_name = "upstreamChunk"];</code>
     */
    @java.lang.Override
    public com.github.aptpod.proto.iscp2.v1.UpstreamChunkOrBuilder getUpstreamChunkOrBuilder() {
      if ((messageCase_ == 70) && (upstreamChunkBuilder_ != null)) {
        return upstreamChunkBuilder_.getMessageOrBuilder();
      } else {
        if (messageCase_ == 70) {
          return (com.github.aptpod.proto.iscp2.v1.UpstreamChunk) message_;
        }
        return com.github.aptpod.proto.iscp2.v1.UpstreamChunk.getDefaultInstance();
      }
    }
    /**
     * <code>.iscp2.v1.UpstreamChunk upstream_chunk = 70 [json_name = "upstreamChunk"];</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.github.aptpod.proto.iscp2.v1.UpstreamChunk, com.github.aptpod.proto.iscp2.v1.UpstreamChunk.Builder, com.github.aptpod.proto.iscp2.v1.UpstreamChunkOrBuilder> 
        getUpstreamChunkFieldBuilder() {
      if (upstreamChunkBuilder_ == null) {
        if (!(messageCase_ == 70)) {
          message_ = com.github.aptpod.proto.iscp2.v1.UpstreamChunk.getDefaultInstance();
        }
        upstreamChunkBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.github.aptpod.proto.iscp2.v1.UpstreamChunk, com.github.aptpod.proto.iscp2.v1.UpstreamChunk.Builder, com.github.aptpod.proto.iscp2.v1.UpstreamChunkOrBuilder>(
                (com.github.aptpod.proto.iscp2.v1.UpstreamChunk) message_,
                getParentForChildren(),
                isClean());
        message_ = null;
      }
      messageCase_ = 70;
      onChanged();
      return upstreamChunkBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        com.github.aptpod.proto.iscp2.v1.UpstreamChunkAck, com.github.aptpod.proto.iscp2.v1.UpstreamChunkAck.Builder, com.github.aptpod.proto.iscp2.v1.UpstreamChunkAckOrBuilder> upstreamChunkAckBuilder_;
    /**
     * <code>.iscp2.v1.UpstreamChunkAck upstream_chunk_ack = 71 [json_name = "upstreamChunkAck"];</code>
     * @return Whether the upstreamChunkAck field is set.
     */
    @java.lang.Override
    public boolean hasUpstreamChunkAck() {
      return messageCase_ == 71;
    }
    /**
     * <code>.iscp2.v1.UpstreamChunkAck upstream_chunk_ack = 71 [json_name = "upstreamChunkAck"];</code>
     * @return The upstreamChunkAck.
     */
    @java.lang.Override
    public com.github.aptpod.proto.iscp2.v1.UpstreamChunkAck getUpstreamChunkAck() {
      if (upstreamChunkAckBuilder_ == null) {
        if (messageCase_ == 71) {
          return (com.github.aptpod.proto.iscp2.v1.UpstreamChunkAck) message_;
        }
        return com.github.aptpod.proto.iscp2.v1.UpstreamChunkAck.getDefaultInstance();
      } else {
        if (messageCase_ == 71) {
          return upstreamChunkAckBuilder_.getMessage();
        }
        return com.github.aptpod.proto.iscp2.v1.UpstreamChunkAck.getDefaultInstance();
      }
    }
    /**
     * <code>.iscp2.v1.UpstreamChunkAck upstream_chunk_ack = 71 [json_name = "upstreamChunkAck"];</code>
     */
    public Builder setUpstreamChunkAck(com.github.aptpod.proto.iscp2.v1.UpstreamChunkAck value) {
      if (upstreamChunkAckBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        message_ = value;
        onChanged();
      } else {
        upstreamChunkAckBuilder_.setMessage(value);
      }
      messageCase_ = 71;
      return this;
    }
    /**
     * <code>.iscp2.v1.UpstreamChunkAck upstream_chunk_ack = 71 [json_name = "upstreamChunkAck"];</code>
     */
    public Builder setUpstreamChunkAck(
        com.github.aptpod.proto.iscp2.v1.UpstreamChunkAck.Builder builderForValue) {
      if (upstreamChunkAckBuilder_ == null) {
        message_ = builderForValue.build();
        onChanged();
      } else {
        upstreamChunkAckBuilder_.setMessage(builderForValue.build());
      }
      messageCase_ = 71;
      return this;
    }
    /**
     * <code>.iscp2.v1.UpstreamChunkAck upstream_chunk_ack = 71 [json_name = "upstreamChunkAck"];</code>
     */
    public Builder mergeUpstreamChunkAck(com.github.aptpod.proto.iscp2.v1.UpstreamChunkAck value) {
      if (upstreamChunkAckBuilder_ == null) {
        if (messageCase_ == 71 &&
            message_ != com.github.aptpod.proto.iscp2.v1.UpstreamChunkAck.getDefaultInstance()) {
          message_ = com.github.aptpod.proto.iscp2.v1.UpstreamChunkAck.newBuilder((com.github.aptpod.proto.iscp2.v1.UpstreamChunkAck) message_)
              .mergeFrom(value).buildPartial();
        } else {
          message_ = value;
        }
        onChanged();
      } else {
        if (messageCase_ == 71) {
          upstreamChunkAckBuilder_.mergeFrom(value);
        } else {
          upstreamChunkAckBuilder_.setMessage(value);
        }
      }
      messageCase_ = 71;
      return this;
    }
    /**
     * <code>.iscp2.v1.UpstreamChunkAck upstream_chunk_ack = 71 [json_name = "upstreamChunkAck"];</code>
     */
    public Builder clearUpstreamChunkAck() {
      if (upstreamChunkAckBuilder_ == null) {
        if (messageCase_ == 71) {
          messageCase_ = 0;
          message_ = null;
          onChanged();
        }
      } else {
        if (messageCase_ == 71) {
          messageCase_ = 0;
          message_ = null;
        }
        upstreamChunkAckBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>.iscp2.v1.UpstreamChunkAck upstream_chunk_ack = 71 [json_name = "upstreamChunkAck"];</code>
     */
    public com.github.aptpod.proto.iscp2.v1.UpstreamChunkAck.Builder getUpstreamChunkAckBuilder() {
      return getUpstreamChunkAckFieldBuilder().getBuilder();
    }
    /**
     * <code>.iscp2.v1.UpstreamChunkAck upstream_chunk_ack = 71 [json_name = "upstreamChunkAck"];</code>
     */
    @java.lang.Override
    public com.github.aptpod.proto.iscp2.v1.UpstreamChunkAckOrBuilder getUpstreamChunkAckOrBuilder() {
      if ((messageCase_ == 71) && (upstreamChunkAckBuilder_ != null)) {
        return upstreamChunkAckBuilder_.getMessageOrBuilder();
      } else {
        if (messageCase_ == 71) {
          return (com.github.aptpod.proto.iscp2.v1.UpstreamChunkAck) message_;
        }
        return com.github.aptpod.proto.iscp2.v1.UpstreamChunkAck.getDefaultInstance();
      }
    }
    /**
     * <code>.iscp2.v1.UpstreamChunkAck upstream_chunk_ack = 71 [json_name = "upstreamChunkAck"];</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.github.aptpod.proto.iscp2.v1.UpstreamChunkAck, com.github.aptpod.proto.iscp2.v1.UpstreamChunkAck.Builder, com.github.aptpod.proto.iscp2.v1.UpstreamChunkAckOrBuilder> 
        getUpstreamChunkAckFieldBuilder() {
      if (upstreamChunkAckBuilder_ == null) {
        if (!(messageCase_ == 71)) {
          message_ = com.github.aptpod.proto.iscp2.v1.UpstreamChunkAck.getDefaultInstance();
        }
        upstreamChunkAckBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.github.aptpod.proto.iscp2.v1.UpstreamChunkAck, com.github.aptpod.proto.iscp2.v1.UpstreamChunkAck.Builder, com.github.aptpod.proto.iscp2.v1.UpstreamChunkAckOrBuilder>(
                (com.github.aptpod.proto.iscp2.v1.UpstreamChunkAck) message_,
                getParentForChildren(),
                isClean());
        message_ = null;
      }
      messageCase_ = 71;
      onChanged();
      return upstreamChunkAckBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        com.github.aptpod.proto.iscp2.v1.UpstreamMetadata, com.github.aptpod.proto.iscp2.v1.UpstreamMetadata.Builder, com.github.aptpod.proto.iscp2.v1.UpstreamMetadataOrBuilder> upstreamMetadataBuilder_;
    /**
     * <code>.iscp2.v1.UpstreamMetadata upstream_metadata = 72 [json_name = "upstreamMetadata"];</code>
     * @return Whether the upstreamMetadata field is set.
     */
    @java.lang.Override
    public boolean hasUpstreamMetadata() {
      return messageCase_ == 72;
    }
    /**
     * <code>.iscp2.v1.UpstreamMetadata upstream_metadata = 72 [json_name = "upstreamMetadata"];</code>
     * @return The upstreamMetadata.
     */
    @java.lang.Override
    public com.github.aptpod.proto.iscp2.v1.UpstreamMetadata getUpstreamMetadata() {
      if (upstreamMetadataBuilder_ == null) {
        if (messageCase_ == 72) {
          return (com.github.aptpod.proto.iscp2.v1.UpstreamMetadata) message_;
        }
        return com.github.aptpod.proto.iscp2.v1.UpstreamMetadata.getDefaultInstance();
      } else {
        if (messageCase_ == 72) {
          return upstreamMetadataBuilder_.getMessage();
        }
        return com.github.aptpod.proto.iscp2.v1.UpstreamMetadata.getDefaultInstance();
      }
    }
    /**
     * <code>.iscp2.v1.UpstreamMetadata upstream_metadata = 72 [json_name = "upstreamMetadata"];</code>
     */
    public Builder setUpstreamMetadata(com.github.aptpod.proto.iscp2.v1.UpstreamMetadata value) {
      if (upstreamMetadataBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        message_ = value;
        onChanged();
      } else {
        upstreamMetadataBuilder_.setMessage(value);
      }
      messageCase_ = 72;
      return this;
    }
    /**
     * <code>.iscp2.v1.UpstreamMetadata upstream_metadata = 72 [json_name = "upstreamMetadata"];</code>
     */
    public Builder setUpstreamMetadata(
        com.github.aptpod.proto.iscp2.v1.UpstreamMetadata.Builder builderForValue) {
      if (upstreamMetadataBuilder_ == null) {
        message_ = builderForValue.build();
        onChanged();
      } else {
        upstreamMetadataBuilder_.setMessage(builderForValue.build());
      }
      messageCase_ = 72;
      return this;
    }
    /**
     * <code>.iscp2.v1.UpstreamMetadata upstream_metadata = 72 [json_name = "upstreamMetadata"];</code>
     */
    public Builder mergeUpstreamMetadata(com.github.aptpod.proto.iscp2.v1.UpstreamMetadata value) {
      if (upstreamMetadataBuilder_ == null) {
        if (messageCase_ == 72 &&
            message_ != com.github.aptpod.proto.iscp2.v1.UpstreamMetadata.getDefaultInstance()) {
          message_ = com.github.aptpod.proto.iscp2.v1.UpstreamMetadata.newBuilder((com.github.aptpod.proto.iscp2.v1.UpstreamMetadata) message_)
              .mergeFrom(value).buildPartial();
        } else {
          message_ = value;
        }
        onChanged();
      } else {
        if (messageCase_ == 72) {
          upstreamMetadataBuilder_.mergeFrom(value);
        } else {
          upstreamMetadataBuilder_.setMessage(value);
        }
      }
      messageCase_ = 72;
      return this;
    }
    /**
     * <code>.iscp2.v1.UpstreamMetadata upstream_metadata = 72 [json_name = "upstreamMetadata"];</code>
     */
    public Builder clearUpstreamMetadata() {
      if (upstreamMetadataBuilder_ == null) {
        if (messageCase_ == 72) {
          messageCase_ = 0;
          message_ = null;
          onChanged();
        }
      } else {
        if (messageCase_ == 72) {
          messageCase_ = 0;
          message_ = null;
        }
        upstreamMetadataBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>.iscp2.v1.UpstreamMetadata upstream_metadata = 72 [json_name = "upstreamMetadata"];</code>
     */
    public com.github.aptpod.proto.iscp2.v1.UpstreamMetadata.Builder getUpstreamMetadataBuilder() {
      return getUpstreamMetadataFieldBuilder().getBuilder();
    }
    /**
     * <code>.iscp2.v1.UpstreamMetadata upstream_metadata = 72 [json_name = "upstreamMetadata"];</code>
     */
    @java.lang.Override
    public com.github.aptpod.proto.iscp2.v1.UpstreamMetadataOrBuilder getUpstreamMetadataOrBuilder() {
      if ((messageCase_ == 72) && (upstreamMetadataBuilder_ != null)) {
        return upstreamMetadataBuilder_.getMessageOrBuilder();
      } else {
        if (messageCase_ == 72) {
          return (com.github.aptpod.proto.iscp2.v1.UpstreamMetadata) message_;
        }
        return com.github.aptpod.proto.iscp2.v1.UpstreamMetadata.getDefaultInstance();
      }
    }
    /**
     * <code>.iscp2.v1.UpstreamMetadata upstream_metadata = 72 [json_name = "upstreamMetadata"];</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.github.aptpod.proto.iscp2.v1.UpstreamMetadata, com.github.aptpod.proto.iscp2.v1.UpstreamMetadata.Builder, com.github.aptpod.proto.iscp2.v1.UpstreamMetadataOrBuilder> 
        getUpstreamMetadataFieldBuilder() {
      if (upstreamMetadataBuilder_ == null) {
        if (!(messageCase_ == 72)) {
          message_ = com.github.aptpod.proto.iscp2.v1.UpstreamMetadata.getDefaultInstance();
        }
        upstreamMetadataBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.github.aptpod.proto.iscp2.v1.UpstreamMetadata, com.github.aptpod.proto.iscp2.v1.UpstreamMetadata.Builder, com.github.aptpod.proto.iscp2.v1.UpstreamMetadataOrBuilder>(
                (com.github.aptpod.proto.iscp2.v1.UpstreamMetadata) message_,
                getParentForChildren(),
                isClean());
        message_ = null;
      }
      messageCase_ = 72;
      onChanged();
      return upstreamMetadataBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        com.github.aptpod.proto.iscp2.v1.UpstreamMetadataAck, com.github.aptpod.proto.iscp2.v1.UpstreamMetadataAck.Builder, com.github.aptpod.proto.iscp2.v1.UpstreamMetadataAckOrBuilder> upstreamMetadataAckBuilder_;
    /**
     * <code>.iscp2.v1.UpstreamMetadataAck upstream_metadata_ack = 73 [json_name = "upstreamMetadataAck"];</code>
     * @return Whether the upstreamMetadataAck field is set.
     */
    @java.lang.Override
    public boolean hasUpstreamMetadataAck() {
      return messageCase_ == 73;
    }
    /**
     * <code>.iscp2.v1.UpstreamMetadataAck upstream_metadata_ack = 73 [json_name = "upstreamMetadataAck"];</code>
     * @return The upstreamMetadataAck.
     */
    @java.lang.Override
    public com.github.aptpod.proto.iscp2.v1.UpstreamMetadataAck getUpstreamMetadataAck() {
      if (upstreamMetadataAckBuilder_ == null) {
        if (messageCase_ == 73) {
          return (com.github.aptpod.proto.iscp2.v1.UpstreamMetadataAck) message_;
        }
        return com.github.aptpod.proto.iscp2.v1.UpstreamMetadataAck.getDefaultInstance();
      } else {
        if (messageCase_ == 73) {
          return upstreamMetadataAckBuilder_.getMessage();
        }
        return com.github.aptpod.proto.iscp2.v1.UpstreamMetadataAck.getDefaultInstance();
      }
    }
    /**
     * <code>.iscp2.v1.UpstreamMetadataAck upstream_metadata_ack = 73 [json_name = "upstreamMetadataAck"];</code>
     */
    public Builder setUpstreamMetadataAck(com.github.aptpod.proto.iscp2.v1.UpstreamMetadataAck value) {
      if (upstreamMetadataAckBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        message_ = value;
        onChanged();
      } else {
        upstreamMetadataAckBuilder_.setMessage(value);
      }
      messageCase_ = 73;
      return this;
    }
    /**
     * <code>.iscp2.v1.UpstreamMetadataAck upstream_metadata_ack = 73 [json_name = "upstreamMetadataAck"];</code>
     */
    public Builder setUpstreamMetadataAck(
        com.github.aptpod.proto.iscp2.v1.UpstreamMetadataAck.Builder builderForValue) {
      if (upstreamMetadataAckBuilder_ == null) {
        message_ = builderForValue.build();
        onChanged();
      } else {
        upstreamMetadataAckBuilder_.setMessage(builderForValue.build());
      }
      messageCase_ = 73;
      return this;
    }
    /**
     * <code>.iscp2.v1.UpstreamMetadataAck upstream_metadata_ack = 73 [json_name = "upstreamMetadataAck"];</code>
     */
    public Builder mergeUpstreamMetadataAck(com.github.aptpod.proto.iscp2.v1.UpstreamMetadataAck value) {
      if (upstreamMetadataAckBuilder_ == null) {
        if (messageCase_ == 73 &&
            message_ != com.github.aptpod.proto.iscp2.v1.UpstreamMetadataAck.getDefaultInstance()) {
          message_ = com.github.aptpod.proto.iscp2.v1.UpstreamMetadataAck.newBuilder((com.github.aptpod.proto.iscp2.v1.UpstreamMetadataAck) message_)
              .mergeFrom(value).buildPartial();
        } else {
          message_ = value;
        }
        onChanged();
      } else {
        if (messageCase_ == 73) {
          upstreamMetadataAckBuilder_.mergeFrom(value);
        } else {
          upstreamMetadataAckBuilder_.setMessage(value);
        }
      }
      messageCase_ = 73;
      return this;
    }
    /**
     * <code>.iscp2.v1.UpstreamMetadataAck upstream_metadata_ack = 73 [json_name = "upstreamMetadataAck"];</code>
     */
    public Builder clearUpstreamMetadataAck() {
      if (upstreamMetadataAckBuilder_ == null) {
        if (messageCase_ == 73) {
          messageCase_ = 0;
          message_ = null;
          onChanged();
        }
      } else {
        if (messageCase_ == 73) {
          messageCase_ = 0;
          message_ = null;
        }
        upstreamMetadataAckBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>.iscp2.v1.UpstreamMetadataAck upstream_metadata_ack = 73 [json_name = "upstreamMetadataAck"];</code>
     */
    public com.github.aptpod.proto.iscp2.v1.UpstreamMetadataAck.Builder getUpstreamMetadataAckBuilder() {
      return getUpstreamMetadataAckFieldBuilder().getBuilder();
    }
    /**
     * <code>.iscp2.v1.UpstreamMetadataAck upstream_metadata_ack = 73 [json_name = "upstreamMetadataAck"];</code>
     */
    @java.lang.Override
    public com.github.aptpod.proto.iscp2.v1.UpstreamMetadataAckOrBuilder getUpstreamMetadataAckOrBuilder() {
      if ((messageCase_ == 73) && (upstreamMetadataAckBuilder_ != null)) {
        return upstreamMetadataAckBuilder_.getMessageOrBuilder();
      } else {
        if (messageCase_ == 73) {
          return (com.github.aptpod.proto.iscp2.v1.UpstreamMetadataAck) message_;
        }
        return com.github.aptpod.proto.iscp2.v1.UpstreamMetadataAck.getDefaultInstance();
      }
    }
    /**
     * <code>.iscp2.v1.UpstreamMetadataAck upstream_metadata_ack = 73 [json_name = "upstreamMetadataAck"];</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.github.aptpod.proto.iscp2.v1.UpstreamMetadataAck, com.github.aptpod.proto.iscp2.v1.UpstreamMetadataAck.Builder, com.github.aptpod.proto.iscp2.v1.UpstreamMetadataAckOrBuilder> 
        getUpstreamMetadataAckFieldBuilder() {
      if (upstreamMetadataAckBuilder_ == null) {
        if (!(messageCase_ == 73)) {
          message_ = com.github.aptpod.proto.iscp2.v1.UpstreamMetadataAck.getDefaultInstance();
        }
        upstreamMetadataAckBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.github.aptpod.proto.iscp2.v1.UpstreamMetadataAck, com.github.aptpod.proto.iscp2.v1.UpstreamMetadataAck.Builder, com.github.aptpod.proto.iscp2.v1.UpstreamMetadataAckOrBuilder>(
                (com.github.aptpod.proto.iscp2.v1.UpstreamMetadataAck) message_,
                getParentForChildren(),
                isClean());
        message_ = null;
      }
      messageCase_ = 73;
      onChanged();
      return upstreamMetadataAckBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        com.github.aptpod.proto.iscp2.v1.DownstreamOpenRequest, com.github.aptpod.proto.iscp2.v1.DownstreamOpenRequest.Builder, com.github.aptpod.proto.iscp2.v1.DownstreamOpenRequestOrBuilder> downstreamOpenRequestBuilder_;
    /**
     * <pre>
     * Downstream
     * </pre>
     *
     * <code>.iscp2.v1.DownstreamOpenRequest downstream_open_request = 128 [json_name = "downstreamOpenRequest"];</code>
     * @return Whether the downstreamOpenRequest field is set.
     */
    @java.lang.Override
    public boolean hasDownstreamOpenRequest() {
      return messageCase_ == 128;
    }
    /**
     * <pre>
     * Downstream
     * </pre>
     *
     * <code>.iscp2.v1.DownstreamOpenRequest downstream_open_request = 128 [json_name = "downstreamOpenRequest"];</code>
     * @return The downstreamOpenRequest.
     */
    @java.lang.Override
    public com.github.aptpod.proto.iscp2.v1.DownstreamOpenRequest getDownstreamOpenRequest() {
      if (downstreamOpenRequestBuilder_ == null) {
        if (messageCase_ == 128) {
          return (com.github.aptpod.proto.iscp2.v1.DownstreamOpenRequest) message_;
        }
        return com.github.aptpod.proto.iscp2.v1.DownstreamOpenRequest.getDefaultInstance();
      } else {
        if (messageCase_ == 128) {
          return downstreamOpenRequestBuilder_.getMessage();
        }
        return com.github.aptpod.proto.iscp2.v1.DownstreamOpenRequest.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * Downstream
     * </pre>
     *
     * <code>.iscp2.v1.DownstreamOpenRequest downstream_open_request = 128 [json_name = "downstreamOpenRequest"];</code>
     */
    public Builder setDownstreamOpenRequest(com.github.aptpod.proto.iscp2.v1.DownstreamOpenRequest value) {
      if (downstreamOpenRequestBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        message_ = value;
        onChanged();
      } else {
        downstreamOpenRequestBuilder_.setMessage(value);
      }
      messageCase_ = 128;
      return this;
    }
    /**
     * <pre>
     * Downstream
     * </pre>
     *
     * <code>.iscp2.v1.DownstreamOpenRequest downstream_open_request = 128 [json_name = "downstreamOpenRequest"];</code>
     */
    public Builder setDownstreamOpenRequest(
        com.github.aptpod.proto.iscp2.v1.DownstreamOpenRequest.Builder builderForValue) {
      if (downstreamOpenRequestBuilder_ == null) {
        message_ = builderForValue.build();
        onChanged();
      } else {
        downstreamOpenRequestBuilder_.setMessage(builderForValue.build());
      }
      messageCase_ = 128;
      return this;
    }
    /**
     * <pre>
     * Downstream
     * </pre>
     *
     * <code>.iscp2.v1.DownstreamOpenRequest downstream_open_request = 128 [json_name = "downstreamOpenRequest"];</code>
     */
    public Builder mergeDownstreamOpenRequest(com.github.aptpod.proto.iscp2.v1.DownstreamOpenRequest value) {
      if (downstreamOpenRequestBuilder_ == null) {
        if (messageCase_ == 128 &&
            message_ != com.github.aptpod.proto.iscp2.v1.DownstreamOpenRequest.getDefaultInstance()) {
          message_ = com.github.aptpod.proto.iscp2.v1.DownstreamOpenRequest.newBuilder((com.github.aptpod.proto.iscp2.v1.DownstreamOpenRequest) message_)
              .mergeFrom(value).buildPartial();
        } else {
          message_ = value;
        }
        onChanged();
      } else {
        if (messageCase_ == 128) {
          downstreamOpenRequestBuilder_.mergeFrom(value);
        } else {
          downstreamOpenRequestBuilder_.setMessage(value);
        }
      }
      messageCase_ = 128;
      return this;
    }
    /**
     * <pre>
     * Downstream
     * </pre>
     *
     * <code>.iscp2.v1.DownstreamOpenRequest downstream_open_request = 128 [json_name = "downstreamOpenRequest"];</code>
     */
    public Builder clearDownstreamOpenRequest() {
      if (downstreamOpenRequestBuilder_ == null) {
        if (messageCase_ == 128) {
          messageCase_ = 0;
          message_ = null;
          onChanged();
        }
      } else {
        if (messageCase_ == 128) {
          messageCase_ = 0;
          message_ = null;
        }
        downstreamOpenRequestBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * Downstream
     * </pre>
     *
     * <code>.iscp2.v1.DownstreamOpenRequest downstream_open_request = 128 [json_name = "downstreamOpenRequest"];</code>
     */
    public com.github.aptpod.proto.iscp2.v1.DownstreamOpenRequest.Builder getDownstreamOpenRequestBuilder() {
      return getDownstreamOpenRequestFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Downstream
     * </pre>
     *
     * <code>.iscp2.v1.DownstreamOpenRequest downstream_open_request = 128 [json_name = "downstreamOpenRequest"];</code>
     */
    @java.lang.Override
    public com.github.aptpod.proto.iscp2.v1.DownstreamOpenRequestOrBuilder getDownstreamOpenRequestOrBuilder() {
      if ((messageCase_ == 128) && (downstreamOpenRequestBuilder_ != null)) {
        return downstreamOpenRequestBuilder_.getMessageOrBuilder();
      } else {
        if (messageCase_ == 128) {
          return (com.github.aptpod.proto.iscp2.v1.DownstreamOpenRequest) message_;
        }
        return com.github.aptpod.proto.iscp2.v1.DownstreamOpenRequest.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * Downstream
     * </pre>
     *
     * <code>.iscp2.v1.DownstreamOpenRequest downstream_open_request = 128 [json_name = "downstreamOpenRequest"];</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.github.aptpod.proto.iscp2.v1.DownstreamOpenRequest, com.github.aptpod.proto.iscp2.v1.DownstreamOpenRequest.Builder, com.github.aptpod.proto.iscp2.v1.DownstreamOpenRequestOrBuilder> 
        getDownstreamOpenRequestFieldBuilder() {
      if (downstreamOpenRequestBuilder_ == null) {
        if (!(messageCase_ == 128)) {
          message_ = com.github.aptpod.proto.iscp2.v1.DownstreamOpenRequest.getDefaultInstance();
        }
        downstreamOpenRequestBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.github.aptpod.proto.iscp2.v1.DownstreamOpenRequest, com.github.aptpod.proto.iscp2.v1.DownstreamOpenRequest.Builder, com.github.aptpod.proto.iscp2.v1.DownstreamOpenRequestOrBuilder>(
                (com.github.aptpod.proto.iscp2.v1.DownstreamOpenRequest) message_,
                getParentForChildren(),
                isClean());
        message_ = null;
      }
      messageCase_ = 128;
      onChanged();
      return downstreamOpenRequestBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        com.github.aptpod.proto.iscp2.v1.DownstreamOpenResponse, com.github.aptpod.proto.iscp2.v1.DownstreamOpenResponse.Builder, com.github.aptpod.proto.iscp2.v1.DownstreamOpenResponseOrBuilder> downstreamOpenResponseBuilder_;
    /**
     * <code>.iscp2.v1.DownstreamOpenResponse downstream_open_response = 129 [json_name = "downstreamOpenResponse"];</code>
     * @return Whether the downstreamOpenResponse field is set.
     */
    @java.lang.Override
    public boolean hasDownstreamOpenResponse() {
      return messageCase_ == 129;
    }
    /**
     * <code>.iscp2.v1.DownstreamOpenResponse downstream_open_response = 129 [json_name = "downstreamOpenResponse"];</code>
     * @return The downstreamOpenResponse.
     */
    @java.lang.Override
    public com.github.aptpod.proto.iscp2.v1.DownstreamOpenResponse getDownstreamOpenResponse() {
      if (downstreamOpenResponseBuilder_ == null) {
        if (messageCase_ == 129) {
          return (com.github.aptpod.proto.iscp2.v1.DownstreamOpenResponse) message_;
        }
        return com.github.aptpod.proto.iscp2.v1.DownstreamOpenResponse.getDefaultInstance();
      } else {
        if (messageCase_ == 129) {
          return downstreamOpenResponseBuilder_.getMessage();
        }
        return com.github.aptpod.proto.iscp2.v1.DownstreamOpenResponse.getDefaultInstance();
      }
    }
    /**
     * <code>.iscp2.v1.DownstreamOpenResponse downstream_open_response = 129 [json_name = "downstreamOpenResponse"];</code>
     */
    public Builder setDownstreamOpenResponse(com.github.aptpod.proto.iscp2.v1.DownstreamOpenResponse value) {
      if (downstreamOpenResponseBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        message_ = value;
        onChanged();
      } else {
        downstreamOpenResponseBuilder_.setMessage(value);
      }
      messageCase_ = 129;
      return this;
    }
    /**
     * <code>.iscp2.v1.DownstreamOpenResponse downstream_open_response = 129 [json_name = "downstreamOpenResponse"];</code>
     */
    public Builder setDownstreamOpenResponse(
        com.github.aptpod.proto.iscp2.v1.DownstreamOpenResponse.Builder builderForValue) {
      if (downstreamOpenResponseBuilder_ == null) {
        message_ = builderForValue.build();
        onChanged();
      } else {
        downstreamOpenResponseBuilder_.setMessage(builderForValue.build());
      }
      messageCase_ = 129;
      return this;
    }
    /**
     * <code>.iscp2.v1.DownstreamOpenResponse downstream_open_response = 129 [json_name = "downstreamOpenResponse"];</code>
     */
    public Builder mergeDownstreamOpenResponse(com.github.aptpod.proto.iscp2.v1.DownstreamOpenResponse value) {
      if (downstreamOpenResponseBuilder_ == null) {
        if (messageCase_ == 129 &&
            message_ != com.github.aptpod.proto.iscp2.v1.DownstreamOpenResponse.getDefaultInstance()) {
          message_ = com.github.aptpod.proto.iscp2.v1.DownstreamOpenResponse.newBuilder((com.github.aptpod.proto.iscp2.v1.DownstreamOpenResponse) message_)
              .mergeFrom(value).buildPartial();
        } else {
          message_ = value;
        }
        onChanged();
      } else {
        if (messageCase_ == 129) {
          downstreamOpenResponseBuilder_.mergeFrom(value);
        } else {
          downstreamOpenResponseBuilder_.setMessage(value);
        }
      }
      messageCase_ = 129;
      return this;
    }
    /**
     * <code>.iscp2.v1.DownstreamOpenResponse downstream_open_response = 129 [json_name = "downstreamOpenResponse"];</code>
     */
    public Builder clearDownstreamOpenResponse() {
      if (downstreamOpenResponseBuilder_ == null) {
        if (messageCase_ == 129) {
          messageCase_ = 0;
          message_ = null;
          onChanged();
        }
      } else {
        if (messageCase_ == 129) {
          messageCase_ = 0;
          message_ = null;
        }
        downstreamOpenResponseBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>.iscp2.v1.DownstreamOpenResponse downstream_open_response = 129 [json_name = "downstreamOpenResponse"];</code>
     */
    public com.github.aptpod.proto.iscp2.v1.DownstreamOpenResponse.Builder getDownstreamOpenResponseBuilder() {
      return getDownstreamOpenResponseFieldBuilder().getBuilder();
    }
    /**
     * <code>.iscp2.v1.DownstreamOpenResponse downstream_open_response = 129 [json_name = "downstreamOpenResponse"];</code>
     */
    @java.lang.Override
    public com.github.aptpod.proto.iscp2.v1.DownstreamOpenResponseOrBuilder getDownstreamOpenResponseOrBuilder() {
      if ((messageCase_ == 129) && (downstreamOpenResponseBuilder_ != null)) {
        return downstreamOpenResponseBuilder_.getMessageOrBuilder();
      } else {
        if (messageCase_ == 129) {
          return (com.github.aptpod.proto.iscp2.v1.DownstreamOpenResponse) message_;
        }
        return com.github.aptpod.proto.iscp2.v1.DownstreamOpenResponse.getDefaultInstance();
      }
    }
    /**
     * <code>.iscp2.v1.DownstreamOpenResponse downstream_open_response = 129 [json_name = "downstreamOpenResponse"];</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.github.aptpod.proto.iscp2.v1.DownstreamOpenResponse, com.github.aptpod.proto.iscp2.v1.DownstreamOpenResponse.Builder, com.github.aptpod.proto.iscp2.v1.DownstreamOpenResponseOrBuilder> 
        getDownstreamOpenResponseFieldBuilder() {
      if (downstreamOpenResponseBuilder_ == null) {
        if (!(messageCase_ == 129)) {
          message_ = com.github.aptpod.proto.iscp2.v1.DownstreamOpenResponse.getDefaultInstance();
        }
        downstreamOpenResponseBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.github.aptpod.proto.iscp2.v1.DownstreamOpenResponse, com.github.aptpod.proto.iscp2.v1.DownstreamOpenResponse.Builder, com.github.aptpod.proto.iscp2.v1.DownstreamOpenResponseOrBuilder>(
                (com.github.aptpod.proto.iscp2.v1.DownstreamOpenResponse) message_,
                getParentForChildren(),
                isClean());
        message_ = null;
      }
      messageCase_ = 129;
      onChanged();
      return downstreamOpenResponseBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        com.github.aptpod.proto.iscp2.v1.DownstreamResumeRequest, com.github.aptpod.proto.iscp2.v1.DownstreamResumeRequest.Builder, com.github.aptpod.proto.iscp2.v1.DownstreamResumeRequestOrBuilder> downstreamResumeRequestBuilder_;
    /**
     * <code>.iscp2.v1.DownstreamResumeRequest downstream_resume_request = 130 [json_name = "downstreamResumeRequest"];</code>
     * @return Whether the downstreamResumeRequest field is set.
     */
    @java.lang.Override
    public boolean hasDownstreamResumeRequest() {
      return messageCase_ == 130;
    }
    /**
     * <code>.iscp2.v1.DownstreamResumeRequest downstream_resume_request = 130 [json_name = "downstreamResumeRequest"];</code>
     * @return The downstreamResumeRequest.
     */
    @java.lang.Override
    public com.github.aptpod.proto.iscp2.v1.DownstreamResumeRequest getDownstreamResumeRequest() {
      if (downstreamResumeRequestBuilder_ == null) {
        if (messageCase_ == 130) {
          return (com.github.aptpod.proto.iscp2.v1.DownstreamResumeRequest) message_;
        }
        return com.github.aptpod.proto.iscp2.v1.DownstreamResumeRequest.getDefaultInstance();
      } else {
        if (messageCase_ == 130) {
          return downstreamResumeRequestBuilder_.getMessage();
        }
        return com.github.aptpod.proto.iscp2.v1.DownstreamResumeRequest.getDefaultInstance();
      }
    }
    /**
     * <code>.iscp2.v1.DownstreamResumeRequest downstream_resume_request = 130 [json_name = "downstreamResumeRequest"];</code>
     */
    public Builder setDownstreamResumeRequest(com.github.aptpod.proto.iscp2.v1.DownstreamResumeRequest value) {
      if (downstreamResumeRequestBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        message_ = value;
        onChanged();
      } else {
        downstreamResumeRequestBuilder_.setMessage(value);
      }
      messageCase_ = 130;
      return this;
    }
    /**
     * <code>.iscp2.v1.DownstreamResumeRequest downstream_resume_request = 130 [json_name = "downstreamResumeRequest"];</code>
     */
    public Builder setDownstreamResumeRequest(
        com.github.aptpod.proto.iscp2.v1.DownstreamResumeRequest.Builder builderForValue) {
      if (downstreamResumeRequestBuilder_ == null) {
        message_ = builderForValue.build();
        onChanged();
      } else {
        downstreamResumeRequestBuilder_.setMessage(builderForValue.build());
      }
      messageCase_ = 130;
      return this;
    }
    /**
     * <code>.iscp2.v1.DownstreamResumeRequest downstream_resume_request = 130 [json_name = "downstreamResumeRequest"];</code>
     */
    public Builder mergeDownstreamResumeRequest(com.github.aptpod.proto.iscp2.v1.DownstreamResumeRequest value) {
      if (downstreamResumeRequestBuilder_ == null) {
        if (messageCase_ == 130 &&
            message_ != com.github.aptpod.proto.iscp2.v1.DownstreamResumeRequest.getDefaultInstance()) {
          message_ = com.github.aptpod.proto.iscp2.v1.DownstreamResumeRequest.newBuilder((com.github.aptpod.proto.iscp2.v1.DownstreamResumeRequest) message_)
              .mergeFrom(value).buildPartial();
        } else {
          message_ = value;
        }
        onChanged();
      } else {
        if (messageCase_ == 130) {
          downstreamResumeRequestBuilder_.mergeFrom(value);
        } else {
          downstreamResumeRequestBuilder_.setMessage(value);
        }
      }
      messageCase_ = 130;
      return this;
    }
    /**
     * <code>.iscp2.v1.DownstreamResumeRequest downstream_resume_request = 130 [json_name = "downstreamResumeRequest"];</code>
     */
    public Builder clearDownstreamResumeRequest() {
      if (downstreamResumeRequestBuilder_ == null) {
        if (messageCase_ == 130) {
          messageCase_ = 0;
          message_ = null;
          onChanged();
        }
      } else {
        if (messageCase_ == 130) {
          messageCase_ = 0;
          message_ = null;
        }
        downstreamResumeRequestBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>.iscp2.v1.DownstreamResumeRequest downstream_resume_request = 130 [json_name = "downstreamResumeRequest"];</code>
     */
    public com.github.aptpod.proto.iscp2.v1.DownstreamResumeRequest.Builder getDownstreamResumeRequestBuilder() {
      return getDownstreamResumeRequestFieldBuilder().getBuilder();
    }
    /**
     * <code>.iscp2.v1.DownstreamResumeRequest downstream_resume_request = 130 [json_name = "downstreamResumeRequest"];</code>
     */
    @java.lang.Override
    public com.github.aptpod.proto.iscp2.v1.DownstreamResumeRequestOrBuilder getDownstreamResumeRequestOrBuilder() {
      if ((messageCase_ == 130) && (downstreamResumeRequestBuilder_ != null)) {
        return downstreamResumeRequestBuilder_.getMessageOrBuilder();
      } else {
        if (messageCase_ == 130) {
          return (com.github.aptpod.proto.iscp2.v1.DownstreamResumeRequest) message_;
        }
        return com.github.aptpod.proto.iscp2.v1.DownstreamResumeRequest.getDefaultInstance();
      }
    }
    /**
     * <code>.iscp2.v1.DownstreamResumeRequest downstream_resume_request = 130 [json_name = "downstreamResumeRequest"];</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.github.aptpod.proto.iscp2.v1.DownstreamResumeRequest, com.github.aptpod.proto.iscp2.v1.DownstreamResumeRequest.Builder, com.github.aptpod.proto.iscp2.v1.DownstreamResumeRequestOrBuilder> 
        getDownstreamResumeRequestFieldBuilder() {
      if (downstreamResumeRequestBuilder_ == null) {
        if (!(messageCase_ == 130)) {
          message_ = com.github.aptpod.proto.iscp2.v1.DownstreamResumeRequest.getDefaultInstance();
        }
        downstreamResumeRequestBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.github.aptpod.proto.iscp2.v1.DownstreamResumeRequest, com.github.aptpod.proto.iscp2.v1.DownstreamResumeRequest.Builder, com.github.aptpod.proto.iscp2.v1.DownstreamResumeRequestOrBuilder>(
                (com.github.aptpod.proto.iscp2.v1.DownstreamResumeRequest) message_,
                getParentForChildren(),
                isClean());
        message_ = null;
      }
      messageCase_ = 130;
      onChanged();
      return downstreamResumeRequestBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        com.github.aptpod.proto.iscp2.v1.DownstreamResumeResponse, com.github.aptpod.proto.iscp2.v1.DownstreamResumeResponse.Builder, com.github.aptpod.proto.iscp2.v1.DownstreamResumeResponseOrBuilder> downstreamResumeResponseBuilder_;
    /**
     * <code>.iscp2.v1.DownstreamResumeResponse downstream_resume_response = 131 [json_name = "downstreamResumeResponse"];</code>
     * @return Whether the downstreamResumeResponse field is set.
     */
    @java.lang.Override
    public boolean hasDownstreamResumeResponse() {
      return messageCase_ == 131;
    }
    /**
     * <code>.iscp2.v1.DownstreamResumeResponse downstream_resume_response = 131 [json_name = "downstreamResumeResponse"];</code>
     * @return The downstreamResumeResponse.
     */
    @java.lang.Override
    public com.github.aptpod.proto.iscp2.v1.DownstreamResumeResponse getDownstreamResumeResponse() {
      if (downstreamResumeResponseBuilder_ == null) {
        if (messageCase_ == 131) {
          return (com.github.aptpod.proto.iscp2.v1.DownstreamResumeResponse) message_;
        }
        return com.github.aptpod.proto.iscp2.v1.DownstreamResumeResponse.getDefaultInstance();
      } else {
        if (messageCase_ == 131) {
          return downstreamResumeResponseBuilder_.getMessage();
        }
        return com.github.aptpod.proto.iscp2.v1.DownstreamResumeResponse.getDefaultInstance();
      }
    }
    /**
     * <code>.iscp2.v1.DownstreamResumeResponse downstream_resume_response = 131 [json_name = "downstreamResumeResponse"];</code>
     */
    public Builder setDownstreamResumeResponse(com.github.aptpod.proto.iscp2.v1.DownstreamResumeResponse value) {
      if (downstreamResumeResponseBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        message_ = value;
        onChanged();
      } else {
        downstreamResumeResponseBuilder_.setMessage(value);
      }
      messageCase_ = 131;
      return this;
    }
    /**
     * <code>.iscp2.v1.DownstreamResumeResponse downstream_resume_response = 131 [json_name = "downstreamResumeResponse"];</code>
     */
    public Builder setDownstreamResumeResponse(
        com.github.aptpod.proto.iscp2.v1.DownstreamResumeResponse.Builder builderForValue) {
      if (downstreamResumeResponseBuilder_ == null) {
        message_ = builderForValue.build();
        onChanged();
      } else {
        downstreamResumeResponseBuilder_.setMessage(builderForValue.build());
      }
      messageCase_ = 131;
      return this;
    }
    /**
     * <code>.iscp2.v1.DownstreamResumeResponse downstream_resume_response = 131 [json_name = "downstreamResumeResponse"];</code>
     */
    public Builder mergeDownstreamResumeResponse(com.github.aptpod.proto.iscp2.v1.DownstreamResumeResponse value) {
      if (downstreamResumeResponseBuilder_ == null) {
        if (messageCase_ == 131 &&
            message_ != com.github.aptpod.proto.iscp2.v1.DownstreamResumeResponse.getDefaultInstance()) {
          message_ = com.github.aptpod.proto.iscp2.v1.DownstreamResumeResponse.newBuilder((com.github.aptpod.proto.iscp2.v1.DownstreamResumeResponse) message_)
              .mergeFrom(value).buildPartial();
        } else {
          message_ = value;
        }
        onChanged();
      } else {
        if (messageCase_ == 131) {
          downstreamResumeResponseBuilder_.mergeFrom(value);
        } else {
          downstreamResumeResponseBuilder_.setMessage(value);
        }
      }
      messageCase_ = 131;
      return this;
    }
    /**
     * <code>.iscp2.v1.DownstreamResumeResponse downstream_resume_response = 131 [json_name = "downstreamResumeResponse"];</code>
     */
    public Builder clearDownstreamResumeResponse() {
      if (downstreamResumeResponseBuilder_ == null) {
        if (messageCase_ == 131) {
          messageCase_ = 0;
          message_ = null;
          onChanged();
        }
      } else {
        if (messageCase_ == 131) {
          messageCase_ = 0;
          message_ = null;
        }
        downstreamResumeResponseBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>.iscp2.v1.DownstreamResumeResponse downstream_resume_response = 131 [json_name = "downstreamResumeResponse"];</code>
     */
    public com.github.aptpod.proto.iscp2.v1.DownstreamResumeResponse.Builder getDownstreamResumeResponseBuilder() {
      return getDownstreamResumeResponseFieldBuilder().getBuilder();
    }
    /**
     * <code>.iscp2.v1.DownstreamResumeResponse downstream_resume_response = 131 [json_name = "downstreamResumeResponse"];</code>
     */
    @java.lang.Override
    public com.github.aptpod.proto.iscp2.v1.DownstreamResumeResponseOrBuilder getDownstreamResumeResponseOrBuilder() {
      if ((messageCase_ == 131) && (downstreamResumeResponseBuilder_ != null)) {
        return downstreamResumeResponseBuilder_.getMessageOrBuilder();
      } else {
        if (messageCase_ == 131) {
          return (com.github.aptpod.proto.iscp2.v1.DownstreamResumeResponse) message_;
        }
        return com.github.aptpod.proto.iscp2.v1.DownstreamResumeResponse.getDefaultInstance();
      }
    }
    /**
     * <code>.iscp2.v1.DownstreamResumeResponse downstream_resume_response = 131 [json_name = "downstreamResumeResponse"];</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.github.aptpod.proto.iscp2.v1.DownstreamResumeResponse, com.github.aptpod.proto.iscp2.v1.DownstreamResumeResponse.Builder, com.github.aptpod.proto.iscp2.v1.DownstreamResumeResponseOrBuilder> 
        getDownstreamResumeResponseFieldBuilder() {
      if (downstreamResumeResponseBuilder_ == null) {
        if (!(messageCase_ == 131)) {
          message_ = com.github.aptpod.proto.iscp2.v1.DownstreamResumeResponse.getDefaultInstance();
        }
        downstreamResumeResponseBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.github.aptpod.proto.iscp2.v1.DownstreamResumeResponse, com.github.aptpod.proto.iscp2.v1.DownstreamResumeResponse.Builder, com.github.aptpod.proto.iscp2.v1.DownstreamResumeResponseOrBuilder>(
                (com.github.aptpod.proto.iscp2.v1.DownstreamResumeResponse) message_,
                getParentForChildren(),
                isClean());
        message_ = null;
      }
      messageCase_ = 131;
      onChanged();
      return downstreamResumeResponseBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        com.github.aptpod.proto.iscp2.v1.DownstreamCloseRequest, com.github.aptpod.proto.iscp2.v1.DownstreamCloseRequest.Builder, com.github.aptpod.proto.iscp2.v1.DownstreamCloseRequestOrBuilder> downstreamCloseRequestBuilder_;
    /**
     * <code>.iscp2.v1.DownstreamCloseRequest downstream_close_request = 132 [json_name = "downstreamCloseRequest"];</code>
     * @return Whether the downstreamCloseRequest field is set.
     */
    @java.lang.Override
    public boolean hasDownstreamCloseRequest() {
      return messageCase_ == 132;
    }
    /**
     * <code>.iscp2.v1.DownstreamCloseRequest downstream_close_request = 132 [json_name = "downstreamCloseRequest"];</code>
     * @return The downstreamCloseRequest.
     */
    @java.lang.Override
    public com.github.aptpod.proto.iscp2.v1.DownstreamCloseRequest getDownstreamCloseRequest() {
      if (downstreamCloseRequestBuilder_ == null) {
        if (messageCase_ == 132) {
          return (com.github.aptpod.proto.iscp2.v1.DownstreamCloseRequest) message_;
        }
        return com.github.aptpod.proto.iscp2.v1.DownstreamCloseRequest.getDefaultInstance();
      } else {
        if (messageCase_ == 132) {
          return downstreamCloseRequestBuilder_.getMessage();
        }
        return com.github.aptpod.proto.iscp2.v1.DownstreamCloseRequest.getDefaultInstance();
      }
    }
    /**
     * <code>.iscp2.v1.DownstreamCloseRequest downstream_close_request = 132 [json_name = "downstreamCloseRequest"];</code>
     */
    public Builder setDownstreamCloseRequest(com.github.aptpod.proto.iscp2.v1.DownstreamCloseRequest value) {
      if (downstreamCloseRequestBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        message_ = value;
        onChanged();
      } else {
        downstreamCloseRequestBuilder_.setMessage(value);
      }
      messageCase_ = 132;
      return this;
    }
    /**
     * <code>.iscp2.v1.DownstreamCloseRequest downstream_close_request = 132 [json_name = "downstreamCloseRequest"];</code>
     */
    public Builder setDownstreamCloseRequest(
        com.github.aptpod.proto.iscp2.v1.DownstreamCloseRequest.Builder builderForValue) {
      if (downstreamCloseRequestBuilder_ == null) {
        message_ = builderForValue.build();
        onChanged();
      } else {
        downstreamCloseRequestBuilder_.setMessage(builderForValue.build());
      }
      messageCase_ = 132;
      return this;
    }
    /**
     * <code>.iscp2.v1.DownstreamCloseRequest downstream_close_request = 132 [json_name = "downstreamCloseRequest"];</code>
     */
    public Builder mergeDownstreamCloseRequest(com.github.aptpod.proto.iscp2.v1.DownstreamCloseRequest value) {
      if (downstreamCloseRequestBuilder_ == null) {
        if (messageCase_ == 132 &&
            message_ != com.github.aptpod.proto.iscp2.v1.DownstreamCloseRequest.getDefaultInstance()) {
          message_ = com.github.aptpod.proto.iscp2.v1.DownstreamCloseRequest.newBuilder((com.github.aptpod.proto.iscp2.v1.DownstreamCloseRequest) message_)
              .mergeFrom(value).buildPartial();
        } else {
          message_ = value;
        }
        onChanged();
      } else {
        if (messageCase_ == 132) {
          downstreamCloseRequestBuilder_.mergeFrom(value);
        } else {
          downstreamCloseRequestBuilder_.setMessage(value);
        }
      }
      messageCase_ = 132;
      return this;
    }
    /**
     * <code>.iscp2.v1.DownstreamCloseRequest downstream_close_request = 132 [json_name = "downstreamCloseRequest"];</code>
     */
    public Builder clearDownstreamCloseRequest() {
      if (downstreamCloseRequestBuilder_ == null) {
        if (messageCase_ == 132) {
          messageCase_ = 0;
          message_ = null;
          onChanged();
        }
      } else {
        if (messageCase_ == 132) {
          messageCase_ = 0;
          message_ = null;
        }
        downstreamCloseRequestBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>.iscp2.v1.DownstreamCloseRequest downstream_close_request = 132 [json_name = "downstreamCloseRequest"];</code>
     */
    public com.github.aptpod.proto.iscp2.v1.DownstreamCloseRequest.Builder getDownstreamCloseRequestBuilder() {
      return getDownstreamCloseRequestFieldBuilder().getBuilder();
    }
    /**
     * <code>.iscp2.v1.DownstreamCloseRequest downstream_close_request = 132 [json_name = "downstreamCloseRequest"];</code>
     */
    @java.lang.Override
    public com.github.aptpod.proto.iscp2.v1.DownstreamCloseRequestOrBuilder getDownstreamCloseRequestOrBuilder() {
      if ((messageCase_ == 132) && (downstreamCloseRequestBuilder_ != null)) {
        return downstreamCloseRequestBuilder_.getMessageOrBuilder();
      } else {
        if (messageCase_ == 132) {
          return (com.github.aptpod.proto.iscp2.v1.DownstreamCloseRequest) message_;
        }
        return com.github.aptpod.proto.iscp2.v1.DownstreamCloseRequest.getDefaultInstance();
      }
    }
    /**
     * <code>.iscp2.v1.DownstreamCloseRequest downstream_close_request = 132 [json_name = "downstreamCloseRequest"];</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.github.aptpod.proto.iscp2.v1.DownstreamCloseRequest, com.github.aptpod.proto.iscp2.v1.DownstreamCloseRequest.Builder, com.github.aptpod.proto.iscp2.v1.DownstreamCloseRequestOrBuilder> 
        getDownstreamCloseRequestFieldBuilder() {
      if (downstreamCloseRequestBuilder_ == null) {
        if (!(messageCase_ == 132)) {
          message_ = com.github.aptpod.proto.iscp2.v1.DownstreamCloseRequest.getDefaultInstance();
        }
        downstreamCloseRequestBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.github.aptpod.proto.iscp2.v1.DownstreamCloseRequest, com.github.aptpod.proto.iscp2.v1.DownstreamCloseRequest.Builder, com.github.aptpod.proto.iscp2.v1.DownstreamCloseRequestOrBuilder>(
                (com.github.aptpod.proto.iscp2.v1.DownstreamCloseRequest) message_,
                getParentForChildren(),
                isClean());
        message_ = null;
      }
      messageCase_ = 132;
      onChanged();
      return downstreamCloseRequestBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        com.github.aptpod.proto.iscp2.v1.DownstreamCloseResponse, com.github.aptpod.proto.iscp2.v1.DownstreamCloseResponse.Builder, com.github.aptpod.proto.iscp2.v1.DownstreamCloseResponseOrBuilder> downstreamCloseResponseBuilder_;
    /**
     * <code>.iscp2.v1.DownstreamCloseResponse downstream_close_response = 133 [json_name = "downstreamCloseResponse"];</code>
     * @return Whether the downstreamCloseResponse field is set.
     */
    @java.lang.Override
    public boolean hasDownstreamCloseResponse() {
      return messageCase_ == 133;
    }
    /**
     * <code>.iscp2.v1.DownstreamCloseResponse downstream_close_response = 133 [json_name = "downstreamCloseResponse"];</code>
     * @return The downstreamCloseResponse.
     */
    @java.lang.Override
    public com.github.aptpod.proto.iscp2.v1.DownstreamCloseResponse getDownstreamCloseResponse() {
      if (downstreamCloseResponseBuilder_ == null) {
        if (messageCase_ == 133) {
          return (com.github.aptpod.proto.iscp2.v1.DownstreamCloseResponse) message_;
        }
        return com.github.aptpod.proto.iscp2.v1.DownstreamCloseResponse.getDefaultInstance();
      } else {
        if (messageCase_ == 133) {
          return downstreamCloseResponseBuilder_.getMessage();
        }
        return com.github.aptpod.proto.iscp2.v1.DownstreamCloseResponse.getDefaultInstance();
      }
    }
    /**
     * <code>.iscp2.v1.DownstreamCloseResponse downstream_close_response = 133 [json_name = "downstreamCloseResponse"];</code>
     */
    public Builder setDownstreamCloseResponse(com.github.aptpod.proto.iscp2.v1.DownstreamCloseResponse value) {
      if (downstreamCloseResponseBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        message_ = value;
        onChanged();
      } else {
        downstreamCloseResponseBuilder_.setMessage(value);
      }
      messageCase_ = 133;
      return this;
    }
    /**
     * <code>.iscp2.v1.DownstreamCloseResponse downstream_close_response = 133 [json_name = "downstreamCloseResponse"];</code>
     */
    public Builder setDownstreamCloseResponse(
        com.github.aptpod.proto.iscp2.v1.DownstreamCloseResponse.Builder builderForValue) {
      if (downstreamCloseResponseBuilder_ == null) {
        message_ = builderForValue.build();
        onChanged();
      } else {
        downstreamCloseResponseBuilder_.setMessage(builderForValue.build());
      }
      messageCase_ = 133;
      return this;
    }
    /**
     * <code>.iscp2.v1.DownstreamCloseResponse downstream_close_response = 133 [json_name = "downstreamCloseResponse"];</code>
     */
    public Builder mergeDownstreamCloseResponse(com.github.aptpod.proto.iscp2.v1.DownstreamCloseResponse value) {
      if (downstreamCloseResponseBuilder_ == null) {
        if (messageCase_ == 133 &&
            message_ != com.github.aptpod.proto.iscp2.v1.DownstreamCloseResponse.getDefaultInstance()) {
          message_ = com.github.aptpod.proto.iscp2.v1.DownstreamCloseResponse.newBuilder((com.github.aptpod.proto.iscp2.v1.DownstreamCloseResponse) message_)
              .mergeFrom(value).buildPartial();
        } else {
          message_ = value;
        }
        onChanged();
      } else {
        if (messageCase_ == 133) {
          downstreamCloseResponseBuilder_.mergeFrom(value);
        } else {
          downstreamCloseResponseBuilder_.setMessage(value);
        }
      }
      messageCase_ = 133;
      return this;
    }
    /**
     * <code>.iscp2.v1.DownstreamCloseResponse downstream_close_response = 133 [json_name = "downstreamCloseResponse"];</code>
     */
    public Builder clearDownstreamCloseResponse() {
      if (downstreamCloseResponseBuilder_ == null) {
        if (messageCase_ == 133) {
          messageCase_ = 0;
          message_ = null;
          onChanged();
        }
      } else {
        if (messageCase_ == 133) {
          messageCase_ = 0;
          message_ = null;
        }
        downstreamCloseResponseBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>.iscp2.v1.DownstreamCloseResponse downstream_close_response = 133 [json_name = "downstreamCloseResponse"];</code>
     */
    public com.github.aptpod.proto.iscp2.v1.DownstreamCloseResponse.Builder getDownstreamCloseResponseBuilder() {
      return getDownstreamCloseResponseFieldBuilder().getBuilder();
    }
    /**
     * <code>.iscp2.v1.DownstreamCloseResponse downstream_close_response = 133 [json_name = "downstreamCloseResponse"];</code>
     */
    @java.lang.Override
    public com.github.aptpod.proto.iscp2.v1.DownstreamCloseResponseOrBuilder getDownstreamCloseResponseOrBuilder() {
      if ((messageCase_ == 133) && (downstreamCloseResponseBuilder_ != null)) {
        return downstreamCloseResponseBuilder_.getMessageOrBuilder();
      } else {
        if (messageCase_ == 133) {
          return (com.github.aptpod.proto.iscp2.v1.DownstreamCloseResponse) message_;
        }
        return com.github.aptpod.proto.iscp2.v1.DownstreamCloseResponse.getDefaultInstance();
      }
    }
    /**
     * <code>.iscp2.v1.DownstreamCloseResponse downstream_close_response = 133 [json_name = "downstreamCloseResponse"];</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.github.aptpod.proto.iscp2.v1.DownstreamCloseResponse, com.github.aptpod.proto.iscp2.v1.DownstreamCloseResponse.Builder, com.github.aptpod.proto.iscp2.v1.DownstreamCloseResponseOrBuilder> 
        getDownstreamCloseResponseFieldBuilder() {
      if (downstreamCloseResponseBuilder_ == null) {
        if (!(messageCase_ == 133)) {
          message_ = com.github.aptpod.proto.iscp2.v1.DownstreamCloseResponse.getDefaultInstance();
        }
        downstreamCloseResponseBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.github.aptpod.proto.iscp2.v1.DownstreamCloseResponse, com.github.aptpod.proto.iscp2.v1.DownstreamCloseResponse.Builder, com.github.aptpod.proto.iscp2.v1.DownstreamCloseResponseOrBuilder>(
                (com.github.aptpod.proto.iscp2.v1.DownstreamCloseResponse) message_,
                getParentForChildren(),
                isClean());
        message_ = null;
      }
      messageCase_ = 133;
      onChanged();
      return downstreamCloseResponseBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        com.github.aptpod.proto.iscp2.v1.DownstreamChunk, com.github.aptpod.proto.iscp2.v1.DownstreamChunk.Builder, com.github.aptpod.proto.iscp2.v1.DownstreamChunkOrBuilder> downstreamChunkBuilder_;
    /**
     * <code>.iscp2.v1.DownstreamChunk downstream_chunk = 134 [json_name = "downstreamChunk"];</code>
     * @return Whether the downstreamChunk field is set.
     */
    @java.lang.Override
    public boolean hasDownstreamChunk() {
      return messageCase_ == 134;
    }
    /**
     * <code>.iscp2.v1.DownstreamChunk downstream_chunk = 134 [json_name = "downstreamChunk"];</code>
     * @return The downstreamChunk.
     */
    @java.lang.Override
    public com.github.aptpod.proto.iscp2.v1.DownstreamChunk getDownstreamChunk() {
      if (downstreamChunkBuilder_ == null) {
        if (messageCase_ == 134) {
          return (com.github.aptpod.proto.iscp2.v1.DownstreamChunk) message_;
        }
        return com.github.aptpod.proto.iscp2.v1.DownstreamChunk.getDefaultInstance();
      } else {
        if (messageCase_ == 134) {
          return downstreamChunkBuilder_.getMessage();
        }
        return com.github.aptpod.proto.iscp2.v1.DownstreamChunk.getDefaultInstance();
      }
    }
    /**
     * <code>.iscp2.v1.DownstreamChunk downstream_chunk = 134 [json_name = "downstreamChunk"];</code>
     */
    public Builder setDownstreamChunk(com.github.aptpod.proto.iscp2.v1.DownstreamChunk value) {
      if (downstreamChunkBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        message_ = value;
        onChanged();
      } else {
        downstreamChunkBuilder_.setMessage(value);
      }
      messageCase_ = 134;
      return this;
    }
    /**
     * <code>.iscp2.v1.DownstreamChunk downstream_chunk = 134 [json_name = "downstreamChunk"];</code>
     */
    public Builder setDownstreamChunk(
        com.github.aptpod.proto.iscp2.v1.DownstreamChunk.Builder builderForValue) {
      if (downstreamChunkBuilder_ == null) {
        message_ = builderForValue.build();
        onChanged();
      } else {
        downstreamChunkBuilder_.setMessage(builderForValue.build());
      }
      messageCase_ = 134;
      return this;
    }
    /**
     * <code>.iscp2.v1.DownstreamChunk downstream_chunk = 134 [json_name = "downstreamChunk"];</code>
     */
    public Builder mergeDownstreamChunk(com.github.aptpod.proto.iscp2.v1.DownstreamChunk value) {
      if (downstreamChunkBuilder_ == null) {
        if (messageCase_ == 134 &&
            message_ != com.github.aptpod.proto.iscp2.v1.DownstreamChunk.getDefaultInstance()) {
          message_ = com.github.aptpod.proto.iscp2.v1.DownstreamChunk.newBuilder((com.github.aptpod.proto.iscp2.v1.DownstreamChunk) message_)
              .mergeFrom(value).buildPartial();
        } else {
          message_ = value;
        }
        onChanged();
      } else {
        if (messageCase_ == 134) {
          downstreamChunkBuilder_.mergeFrom(value);
        } else {
          downstreamChunkBuilder_.setMessage(value);
        }
      }
      messageCase_ = 134;
      return this;
    }
    /**
     * <code>.iscp2.v1.DownstreamChunk downstream_chunk = 134 [json_name = "downstreamChunk"];</code>
     */
    public Builder clearDownstreamChunk() {
      if (downstreamChunkBuilder_ == null) {
        if (messageCase_ == 134) {
          messageCase_ = 0;
          message_ = null;
          onChanged();
        }
      } else {
        if (messageCase_ == 134) {
          messageCase_ = 0;
          message_ = null;
        }
        downstreamChunkBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>.iscp2.v1.DownstreamChunk downstream_chunk = 134 [json_name = "downstreamChunk"];</code>
     */
    public com.github.aptpod.proto.iscp2.v1.DownstreamChunk.Builder getDownstreamChunkBuilder() {
      return getDownstreamChunkFieldBuilder().getBuilder();
    }
    /**
     * <code>.iscp2.v1.DownstreamChunk downstream_chunk = 134 [json_name = "downstreamChunk"];</code>
     */
    @java.lang.Override
    public com.github.aptpod.proto.iscp2.v1.DownstreamChunkOrBuilder getDownstreamChunkOrBuilder() {
      if ((messageCase_ == 134) && (downstreamChunkBuilder_ != null)) {
        return downstreamChunkBuilder_.getMessageOrBuilder();
      } else {
        if (messageCase_ == 134) {
          return (com.github.aptpod.proto.iscp2.v1.DownstreamChunk) message_;
        }
        return com.github.aptpod.proto.iscp2.v1.DownstreamChunk.getDefaultInstance();
      }
    }
    /**
     * <code>.iscp2.v1.DownstreamChunk downstream_chunk = 134 [json_name = "downstreamChunk"];</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.github.aptpod.proto.iscp2.v1.DownstreamChunk, com.github.aptpod.proto.iscp2.v1.DownstreamChunk.Builder, com.github.aptpod.proto.iscp2.v1.DownstreamChunkOrBuilder> 
        getDownstreamChunkFieldBuilder() {
      if (downstreamChunkBuilder_ == null) {
        if (!(messageCase_ == 134)) {
          message_ = com.github.aptpod.proto.iscp2.v1.DownstreamChunk.getDefaultInstance();
        }
        downstreamChunkBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.github.aptpod.proto.iscp2.v1.DownstreamChunk, com.github.aptpod.proto.iscp2.v1.DownstreamChunk.Builder, com.github.aptpod.proto.iscp2.v1.DownstreamChunkOrBuilder>(
                (com.github.aptpod.proto.iscp2.v1.DownstreamChunk) message_,
                getParentForChildren(),
                isClean());
        message_ = null;
      }
      messageCase_ = 134;
      onChanged();
      return downstreamChunkBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        com.github.aptpod.proto.iscp2.v1.DownstreamChunkAck, com.github.aptpod.proto.iscp2.v1.DownstreamChunkAck.Builder, com.github.aptpod.proto.iscp2.v1.DownstreamChunkAckOrBuilder> downstreamChunkAckBuilder_;
    /**
     * <code>.iscp2.v1.DownstreamChunkAck downstream_chunk_ack = 135 [json_name = "downstreamChunkAck"];</code>
     * @return Whether the downstreamChunkAck field is set.
     */
    @java.lang.Override
    public boolean hasDownstreamChunkAck() {
      return messageCase_ == 135;
    }
    /**
     * <code>.iscp2.v1.DownstreamChunkAck downstream_chunk_ack = 135 [json_name = "downstreamChunkAck"];</code>
     * @return The downstreamChunkAck.
     */
    @java.lang.Override
    public com.github.aptpod.proto.iscp2.v1.DownstreamChunkAck getDownstreamChunkAck() {
      if (downstreamChunkAckBuilder_ == null) {
        if (messageCase_ == 135) {
          return (com.github.aptpod.proto.iscp2.v1.DownstreamChunkAck) message_;
        }
        return com.github.aptpod.proto.iscp2.v1.DownstreamChunkAck.getDefaultInstance();
      } else {
        if (messageCase_ == 135) {
          return downstreamChunkAckBuilder_.getMessage();
        }
        return com.github.aptpod.proto.iscp2.v1.DownstreamChunkAck.getDefaultInstance();
      }
    }
    /**
     * <code>.iscp2.v1.DownstreamChunkAck downstream_chunk_ack = 135 [json_name = "downstreamChunkAck"];</code>
     */
    public Builder setDownstreamChunkAck(com.github.aptpod.proto.iscp2.v1.DownstreamChunkAck value) {
      if (downstreamChunkAckBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        message_ = value;
        onChanged();
      } else {
        downstreamChunkAckBuilder_.setMessage(value);
      }
      messageCase_ = 135;
      return this;
    }
    /**
     * <code>.iscp2.v1.DownstreamChunkAck downstream_chunk_ack = 135 [json_name = "downstreamChunkAck"];</code>
     */
    public Builder setDownstreamChunkAck(
        com.github.aptpod.proto.iscp2.v1.DownstreamChunkAck.Builder builderForValue) {
      if (downstreamChunkAckBuilder_ == null) {
        message_ = builderForValue.build();
        onChanged();
      } else {
        downstreamChunkAckBuilder_.setMessage(builderForValue.build());
      }
      messageCase_ = 135;
      return this;
    }
    /**
     * <code>.iscp2.v1.DownstreamChunkAck downstream_chunk_ack = 135 [json_name = "downstreamChunkAck"];</code>
     */
    public Builder mergeDownstreamChunkAck(com.github.aptpod.proto.iscp2.v1.DownstreamChunkAck value) {
      if (downstreamChunkAckBuilder_ == null) {
        if (messageCase_ == 135 &&
            message_ != com.github.aptpod.proto.iscp2.v1.DownstreamChunkAck.getDefaultInstance()) {
          message_ = com.github.aptpod.proto.iscp2.v1.DownstreamChunkAck.newBuilder((com.github.aptpod.proto.iscp2.v1.DownstreamChunkAck) message_)
              .mergeFrom(value).buildPartial();
        } else {
          message_ = value;
        }
        onChanged();
      } else {
        if (messageCase_ == 135) {
          downstreamChunkAckBuilder_.mergeFrom(value);
        } else {
          downstreamChunkAckBuilder_.setMessage(value);
        }
      }
      messageCase_ = 135;
      return this;
    }
    /**
     * <code>.iscp2.v1.DownstreamChunkAck downstream_chunk_ack = 135 [json_name = "downstreamChunkAck"];</code>
     */
    public Builder clearDownstreamChunkAck() {
      if (downstreamChunkAckBuilder_ == null) {
        if (messageCase_ == 135) {
          messageCase_ = 0;
          message_ = null;
          onChanged();
        }
      } else {
        if (messageCase_ == 135) {
          messageCase_ = 0;
          message_ = null;
        }
        downstreamChunkAckBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>.iscp2.v1.DownstreamChunkAck downstream_chunk_ack = 135 [json_name = "downstreamChunkAck"];</code>
     */
    public com.github.aptpod.proto.iscp2.v1.DownstreamChunkAck.Builder getDownstreamChunkAckBuilder() {
      return getDownstreamChunkAckFieldBuilder().getBuilder();
    }
    /**
     * <code>.iscp2.v1.DownstreamChunkAck downstream_chunk_ack = 135 [json_name = "downstreamChunkAck"];</code>
     */
    @java.lang.Override
    public com.github.aptpod.proto.iscp2.v1.DownstreamChunkAckOrBuilder getDownstreamChunkAckOrBuilder() {
      if ((messageCase_ == 135) && (downstreamChunkAckBuilder_ != null)) {
        return downstreamChunkAckBuilder_.getMessageOrBuilder();
      } else {
        if (messageCase_ == 135) {
          return (com.github.aptpod.proto.iscp2.v1.DownstreamChunkAck) message_;
        }
        return com.github.aptpod.proto.iscp2.v1.DownstreamChunkAck.getDefaultInstance();
      }
    }
    /**
     * <code>.iscp2.v1.DownstreamChunkAck downstream_chunk_ack = 135 [json_name = "downstreamChunkAck"];</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.github.aptpod.proto.iscp2.v1.DownstreamChunkAck, com.github.aptpod.proto.iscp2.v1.DownstreamChunkAck.Builder, com.github.aptpod.proto.iscp2.v1.DownstreamChunkAckOrBuilder> 
        getDownstreamChunkAckFieldBuilder() {
      if (downstreamChunkAckBuilder_ == null) {
        if (!(messageCase_ == 135)) {
          message_ = com.github.aptpod.proto.iscp2.v1.DownstreamChunkAck.getDefaultInstance();
        }
        downstreamChunkAckBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.github.aptpod.proto.iscp2.v1.DownstreamChunkAck, com.github.aptpod.proto.iscp2.v1.DownstreamChunkAck.Builder, com.github.aptpod.proto.iscp2.v1.DownstreamChunkAckOrBuilder>(
                (com.github.aptpod.proto.iscp2.v1.DownstreamChunkAck) message_,
                getParentForChildren(),
                isClean());
        message_ = null;
      }
      messageCase_ = 135;
      onChanged();
      return downstreamChunkAckBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        com.github.aptpod.proto.iscp2.v1.DownstreamChunkAckComplete, com.github.aptpod.proto.iscp2.v1.DownstreamChunkAckComplete.Builder, com.github.aptpod.proto.iscp2.v1.DownstreamChunkAckCompleteOrBuilder> downstreamChunkAckCompleteBuilder_;
    /**
     * <code>.iscp2.v1.DownstreamChunkAckComplete downstream_chunk_ack_complete = 136 [json_name = "downstreamChunkAckComplete"];</code>
     * @return Whether the downstreamChunkAckComplete field is set.
     */
    @java.lang.Override
    public boolean hasDownstreamChunkAckComplete() {
      return messageCase_ == 136;
    }
    /**
     * <code>.iscp2.v1.DownstreamChunkAckComplete downstream_chunk_ack_complete = 136 [json_name = "downstreamChunkAckComplete"];</code>
     * @return The downstreamChunkAckComplete.
     */
    @java.lang.Override
    public com.github.aptpod.proto.iscp2.v1.DownstreamChunkAckComplete getDownstreamChunkAckComplete() {
      if (downstreamChunkAckCompleteBuilder_ == null) {
        if (messageCase_ == 136) {
          return (com.github.aptpod.proto.iscp2.v1.DownstreamChunkAckComplete) message_;
        }
        return com.github.aptpod.proto.iscp2.v1.DownstreamChunkAckComplete.getDefaultInstance();
      } else {
        if (messageCase_ == 136) {
          return downstreamChunkAckCompleteBuilder_.getMessage();
        }
        return com.github.aptpod.proto.iscp2.v1.DownstreamChunkAckComplete.getDefaultInstance();
      }
    }
    /**
     * <code>.iscp2.v1.DownstreamChunkAckComplete downstream_chunk_ack_complete = 136 [json_name = "downstreamChunkAckComplete"];</code>
     */
    public Builder setDownstreamChunkAckComplete(com.github.aptpod.proto.iscp2.v1.DownstreamChunkAckComplete value) {
      if (downstreamChunkAckCompleteBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        message_ = value;
        onChanged();
      } else {
        downstreamChunkAckCompleteBuilder_.setMessage(value);
      }
      messageCase_ = 136;
      return this;
    }
    /**
     * <code>.iscp2.v1.DownstreamChunkAckComplete downstream_chunk_ack_complete = 136 [json_name = "downstreamChunkAckComplete"];</code>
     */
    public Builder setDownstreamChunkAckComplete(
        com.github.aptpod.proto.iscp2.v1.DownstreamChunkAckComplete.Builder builderForValue) {
      if (downstreamChunkAckCompleteBuilder_ == null) {
        message_ = builderForValue.build();
        onChanged();
      } else {
        downstreamChunkAckCompleteBuilder_.setMessage(builderForValue.build());
      }
      messageCase_ = 136;
      return this;
    }
    /**
     * <code>.iscp2.v1.DownstreamChunkAckComplete downstream_chunk_ack_complete = 136 [json_name = "downstreamChunkAckComplete"];</code>
     */
    public Builder mergeDownstreamChunkAckComplete(com.github.aptpod.proto.iscp2.v1.DownstreamChunkAckComplete value) {
      if (downstreamChunkAckCompleteBuilder_ == null) {
        if (messageCase_ == 136 &&
            message_ != com.github.aptpod.proto.iscp2.v1.DownstreamChunkAckComplete.getDefaultInstance()) {
          message_ = com.github.aptpod.proto.iscp2.v1.DownstreamChunkAckComplete.newBuilder((com.github.aptpod.proto.iscp2.v1.DownstreamChunkAckComplete) message_)
              .mergeFrom(value).buildPartial();
        } else {
          message_ = value;
        }
        onChanged();
      } else {
        if (messageCase_ == 136) {
          downstreamChunkAckCompleteBuilder_.mergeFrom(value);
        } else {
          downstreamChunkAckCompleteBuilder_.setMessage(value);
        }
      }
      messageCase_ = 136;
      return this;
    }
    /**
     * <code>.iscp2.v1.DownstreamChunkAckComplete downstream_chunk_ack_complete = 136 [json_name = "downstreamChunkAckComplete"];</code>
     */
    public Builder clearDownstreamChunkAckComplete() {
      if (downstreamChunkAckCompleteBuilder_ == null) {
        if (messageCase_ == 136) {
          messageCase_ = 0;
          message_ = null;
          onChanged();
        }
      } else {
        if (messageCase_ == 136) {
          messageCase_ = 0;
          message_ = null;
        }
        downstreamChunkAckCompleteBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>.iscp2.v1.DownstreamChunkAckComplete downstream_chunk_ack_complete = 136 [json_name = "downstreamChunkAckComplete"];</code>
     */
    public com.github.aptpod.proto.iscp2.v1.DownstreamChunkAckComplete.Builder getDownstreamChunkAckCompleteBuilder() {
      return getDownstreamChunkAckCompleteFieldBuilder().getBuilder();
    }
    /**
     * <code>.iscp2.v1.DownstreamChunkAckComplete downstream_chunk_ack_complete = 136 [json_name = "downstreamChunkAckComplete"];</code>
     */
    @java.lang.Override
    public com.github.aptpod.proto.iscp2.v1.DownstreamChunkAckCompleteOrBuilder getDownstreamChunkAckCompleteOrBuilder() {
      if ((messageCase_ == 136) && (downstreamChunkAckCompleteBuilder_ != null)) {
        return downstreamChunkAckCompleteBuilder_.getMessageOrBuilder();
      } else {
        if (messageCase_ == 136) {
          return (com.github.aptpod.proto.iscp2.v1.DownstreamChunkAckComplete) message_;
        }
        return com.github.aptpod.proto.iscp2.v1.DownstreamChunkAckComplete.getDefaultInstance();
      }
    }
    /**
     * <code>.iscp2.v1.DownstreamChunkAckComplete downstream_chunk_ack_complete = 136 [json_name = "downstreamChunkAckComplete"];</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.github.aptpod.proto.iscp2.v1.DownstreamChunkAckComplete, com.github.aptpod.proto.iscp2.v1.DownstreamChunkAckComplete.Builder, com.github.aptpod.proto.iscp2.v1.DownstreamChunkAckCompleteOrBuilder> 
        getDownstreamChunkAckCompleteFieldBuilder() {
      if (downstreamChunkAckCompleteBuilder_ == null) {
        if (!(messageCase_ == 136)) {
          message_ = com.github.aptpod.proto.iscp2.v1.DownstreamChunkAckComplete.getDefaultInstance();
        }
        downstreamChunkAckCompleteBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.github.aptpod.proto.iscp2.v1.DownstreamChunkAckComplete, com.github.aptpod.proto.iscp2.v1.DownstreamChunkAckComplete.Builder, com.github.aptpod.proto.iscp2.v1.DownstreamChunkAckCompleteOrBuilder>(
                (com.github.aptpod.proto.iscp2.v1.DownstreamChunkAckComplete) message_,
                getParentForChildren(),
                isClean());
        message_ = null;
      }
      messageCase_ = 136;
      onChanged();
      return downstreamChunkAckCompleteBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        com.github.aptpod.proto.iscp2.v1.DownstreamMetadata, com.github.aptpod.proto.iscp2.v1.DownstreamMetadata.Builder, com.github.aptpod.proto.iscp2.v1.DownstreamMetadataOrBuilder> downstreamMetadataBuilder_;
    /**
     * <code>.iscp2.v1.DownstreamMetadata downstream_metadata = 137 [json_name = "downstreamMetadata"];</code>
     * @return Whether the downstreamMetadata field is set.
     */
    @java.lang.Override
    public boolean hasDownstreamMetadata() {
      return messageCase_ == 137;
    }
    /**
     * <code>.iscp2.v1.DownstreamMetadata downstream_metadata = 137 [json_name = "downstreamMetadata"];</code>
     * @return The downstreamMetadata.
     */
    @java.lang.Override
    public com.github.aptpod.proto.iscp2.v1.DownstreamMetadata getDownstreamMetadata() {
      if (downstreamMetadataBuilder_ == null) {
        if (messageCase_ == 137) {
          return (com.github.aptpod.proto.iscp2.v1.DownstreamMetadata) message_;
        }
        return com.github.aptpod.proto.iscp2.v1.DownstreamMetadata.getDefaultInstance();
      } else {
        if (messageCase_ == 137) {
          return downstreamMetadataBuilder_.getMessage();
        }
        return com.github.aptpod.proto.iscp2.v1.DownstreamMetadata.getDefaultInstance();
      }
    }
    /**
     * <code>.iscp2.v1.DownstreamMetadata downstream_metadata = 137 [json_name = "downstreamMetadata"];</code>
     */
    public Builder setDownstreamMetadata(com.github.aptpod.proto.iscp2.v1.DownstreamMetadata value) {
      if (downstreamMetadataBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        message_ = value;
        onChanged();
      } else {
        downstreamMetadataBuilder_.setMessage(value);
      }
      messageCase_ = 137;
      return this;
    }
    /**
     * <code>.iscp2.v1.DownstreamMetadata downstream_metadata = 137 [json_name = "downstreamMetadata"];</code>
     */
    public Builder setDownstreamMetadata(
        com.github.aptpod.proto.iscp2.v1.DownstreamMetadata.Builder builderForValue) {
      if (downstreamMetadataBuilder_ == null) {
        message_ = builderForValue.build();
        onChanged();
      } else {
        downstreamMetadataBuilder_.setMessage(builderForValue.build());
      }
      messageCase_ = 137;
      return this;
    }
    /**
     * <code>.iscp2.v1.DownstreamMetadata downstream_metadata = 137 [json_name = "downstreamMetadata"];</code>
     */
    public Builder mergeDownstreamMetadata(com.github.aptpod.proto.iscp2.v1.DownstreamMetadata value) {
      if (downstreamMetadataBuilder_ == null) {
        if (messageCase_ == 137 &&
            message_ != com.github.aptpod.proto.iscp2.v1.DownstreamMetadata.getDefaultInstance()) {
          message_ = com.github.aptpod.proto.iscp2.v1.DownstreamMetadata.newBuilder((com.github.aptpod.proto.iscp2.v1.DownstreamMetadata) message_)
              .mergeFrom(value).buildPartial();
        } else {
          message_ = value;
        }
        onChanged();
      } else {
        if (messageCase_ == 137) {
          downstreamMetadataBuilder_.mergeFrom(value);
        } else {
          downstreamMetadataBuilder_.setMessage(value);
        }
      }
      messageCase_ = 137;
      return this;
    }
    /**
     * <code>.iscp2.v1.DownstreamMetadata downstream_metadata = 137 [json_name = "downstreamMetadata"];</code>
     */
    public Builder clearDownstreamMetadata() {
      if (downstreamMetadataBuilder_ == null) {
        if (messageCase_ == 137) {
          messageCase_ = 0;
          message_ = null;
          onChanged();
        }
      } else {
        if (messageCase_ == 137) {
          messageCase_ = 0;
          message_ = null;
        }
        downstreamMetadataBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>.iscp2.v1.DownstreamMetadata downstream_metadata = 137 [json_name = "downstreamMetadata"];</code>
     */
    public com.github.aptpod.proto.iscp2.v1.DownstreamMetadata.Builder getDownstreamMetadataBuilder() {
      return getDownstreamMetadataFieldBuilder().getBuilder();
    }
    /**
     * <code>.iscp2.v1.DownstreamMetadata downstream_metadata = 137 [json_name = "downstreamMetadata"];</code>
     */
    @java.lang.Override
    public com.github.aptpod.proto.iscp2.v1.DownstreamMetadataOrBuilder getDownstreamMetadataOrBuilder() {
      if ((messageCase_ == 137) && (downstreamMetadataBuilder_ != null)) {
        return downstreamMetadataBuilder_.getMessageOrBuilder();
      } else {
        if (messageCase_ == 137) {
          return (com.github.aptpod.proto.iscp2.v1.DownstreamMetadata) message_;
        }
        return com.github.aptpod.proto.iscp2.v1.DownstreamMetadata.getDefaultInstance();
      }
    }
    /**
     * <code>.iscp2.v1.DownstreamMetadata downstream_metadata = 137 [json_name = "downstreamMetadata"];</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.github.aptpod.proto.iscp2.v1.DownstreamMetadata, com.github.aptpod.proto.iscp2.v1.DownstreamMetadata.Builder, com.github.aptpod.proto.iscp2.v1.DownstreamMetadataOrBuilder> 
        getDownstreamMetadataFieldBuilder() {
      if (downstreamMetadataBuilder_ == null) {
        if (!(messageCase_ == 137)) {
          message_ = com.github.aptpod.proto.iscp2.v1.DownstreamMetadata.getDefaultInstance();
        }
        downstreamMetadataBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.github.aptpod.proto.iscp2.v1.DownstreamMetadata, com.github.aptpod.proto.iscp2.v1.DownstreamMetadata.Builder, com.github.aptpod.proto.iscp2.v1.DownstreamMetadataOrBuilder>(
                (com.github.aptpod.proto.iscp2.v1.DownstreamMetadata) message_,
                getParentForChildren(),
                isClean());
        message_ = null;
      }
      messageCase_ = 137;
      onChanged();
      return downstreamMetadataBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        com.github.aptpod.proto.iscp2.v1.DownstreamMetadataAck, com.github.aptpod.proto.iscp2.v1.DownstreamMetadataAck.Builder, com.github.aptpod.proto.iscp2.v1.DownstreamMetadataAckOrBuilder> downstreamMetadataAckBuilder_;
    /**
     * <code>.iscp2.v1.DownstreamMetadataAck downstream_metadata_ack = 138 [json_name = "downstreamMetadataAck"];</code>
     * @return Whether the downstreamMetadataAck field is set.
     */
    @java.lang.Override
    public boolean hasDownstreamMetadataAck() {
      return messageCase_ == 138;
    }
    /**
     * <code>.iscp2.v1.DownstreamMetadataAck downstream_metadata_ack = 138 [json_name = "downstreamMetadataAck"];</code>
     * @return The downstreamMetadataAck.
     */
    @java.lang.Override
    public com.github.aptpod.proto.iscp2.v1.DownstreamMetadataAck getDownstreamMetadataAck() {
      if (downstreamMetadataAckBuilder_ == null) {
        if (messageCase_ == 138) {
          return (com.github.aptpod.proto.iscp2.v1.DownstreamMetadataAck) message_;
        }
        return com.github.aptpod.proto.iscp2.v1.DownstreamMetadataAck.getDefaultInstance();
      } else {
        if (messageCase_ == 138) {
          return downstreamMetadataAckBuilder_.getMessage();
        }
        return com.github.aptpod.proto.iscp2.v1.DownstreamMetadataAck.getDefaultInstance();
      }
    }
    /**
     * <code>.iscp2.v1.DownstreamMetadataAck downstream_metadata_ack = 138 [json_name = "downstreamMetadataAck"];</code>
     */
    public Builder setDownstreamMetadataAck(com.github.aptpod.proto.iscp2.v1.DownstreamMetadataAck value) {
      if (downstreamMetadataAckBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        message_ = value;
        onChanged();
      } else {
        downstreamMetadataAckBuilder_.setMessage(value);
      }
      messageCase_ = 138;
      return this;
    }
    /**
     * <code>.iscp2.v1.DownstreamMetadataAck downstream_metadata_ack = 138 [json_name = "downstreamMetadataAck"];</code>
     */
    public Builder setDownstreamMetadataAck(
        com.github.aptpod.proto.iscp2.v1.DownstreamMetadataAck.Builder builderForValue) {
      if (downstreamMetadataAckBuilder_ == null) {
        message_ = builderForValue.build();
        onChanged();
      } else {
        downstreamMetadataAckBuilder_.setMessage(builderForValue.build());
      }
      messageCase_ = 138;
      return this;
    }
    /**
     * <code>.iscp2.v1.DownstreamMetadataAck downstream_metadata_ack = 138 [json_name = "downstreamMetadataAck"];</code>
     */
    public Builder mergeDownstreamMetadataAck(com.github.aptpod.proto.iscp2.v1.DownstreamMetadataAck value) {
      if (downstreamMetadataAckBuilder_ == null) {
        if (messageCase_ == 138 &&
            message_ != com.github.aptpod.proto.iscp2.v1.DownstreamMetadataAck.getDefaultInstance()) {
          message_ = com.github.aptpod.proto.iscp2.v1.DownstreamMetadataAck.newBuilder((com.github.aptpod.proto.iscp2.v1.DownstreamMetadataAck) message_)
              .mergeFrom(value).buildPartial();
        } else {
          message_ = value;
        }
        onChanged();
      } else {
        if (messageCase_ == 138) {
          downstreamMetadataAckBuilder_.mergeFrom(value);
        } else {
          downstreamMetadataAckBuilder_.setMessage(value);
        }
      }
      messageCase_ = 138;
      return this;
    }
    /**
     * <code>.iscp2.v1.DownstreamMetadataAck downstream_metadata_ack = 138 [json_name = "downstreamMetadataAck"];</code>
     */
    public Builder clearDownstreamMetadataAck() {
      if (downstreamMetadataAckBuilder_ == null) {
        if (messageCase_ == 138) {
          messageCase_ = 0;
          message_ = null;
          onChanged();
        }
      } else {
        if (messageCase_ == 138) {
          messageCase_ = 0;
          message_ = null;
        }
        downstreamMetadataAckBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>.iscp2.v1.DownstreamMetadataAck downstream_metadata_ack = 138 [json_name = "downstreamMetadataAck"];</code>
     */
    public com.github.aptpod.proto.iscp2.v1.DownstreamMetadataAck.Builder getDownstreamMetadataAckBuilder() {
      return getDownstreamMetadataAckFieldBuilder().getBuilder();
    }
    /**
     * <code>.iscp2.v1.DownstreamMetadataAck downstream_metadata_ack = 138 [json_name = "downstreamMetadataAck"];</code>
     */
    @java.lang.Override
    public com.github.aptpod.proto.iscp2.v1.DownstreamMetadataAckOrBuilder getDownstreamMetadataAckOrBuilder() {
      if ((messageCase_ == 138) && (downstreamMetadataAckBuilder_ != null)) {
        return downstreamMetadataAckBuilder_.getMessageOrBuilder();
      } else {
        if (messageCase_ == 138) {
          return (com.github.aptpod.proto.iscp2.v1.DownstreamMetadataAck) message_;
        }
        return com.github.aptpod.proto.iscp2.v1.DownstreamMetadataAck.getDefaultInstance();
      }
    }
    /**
     * <code>.iscp2.v1.DownstreamMetadataAck downstream_metadata_ack = 138 [json_name = "downstreamMetadataAck"];</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.github.aptpod.proto.iscp2.v1.DownstreamMetadataAck, com.github.aptpod.proto.iscp2.v1.DownstreamMetadataAck.Builder, com.github.aptpod.proto.iscp2.v1.DownstreamMetadataAckOrBuilder> 
        getDownstreamMetadataAckFieldBuilder() {
      if (downstreamMetadataAckBuilder_ == null) {
        if (!(messageCase_ == 138)) {
          message_ = com.github.aptpod.proto.iscp2.v1.DownstreamMetadataAck.getDefaultInstance();
        }
        downstreamMetadataAckBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.github.aptpod.proto.iscp2.v1.DownstreamMetadataAck, com.github.aptpod.proto.iscp2.v1.DownstreamMetadataAck.Builder, com.github.aptpod.proto.iscp2.v1.DownstreamMetadataAckOrBuilder>(
                (com.github.aptpod.proto.iscp2.v1.DownstreamMetadataAck) message_,
                getParentForChildren(),
                isClean());
        message_ = null;
      }
      messageCase_ = 138;
      onChanged();
      return downstreamMetadataAckBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        com.github.aptpod.proto.iscp2.v1.Ping, com.github.aptpod.proto.iscp2.v1.Ping.Builder, com.github.aptpod.proto.iscp2.v1.PingOrBuilder> pingBuilder_;
    /**
     * <pre>
     * Ping/Pong
     * </pre>
     *
     * <code>.iscp2.v1.Ping ping = 192 [json_name = "ping"];</code>
     * @return Whether the ping field is set.
     */
    @java.lang.Override
    public boolean hasPing() {
      return messageCase_ == 192;
    }
    /**
     * <pre>
     * Ping/Pong
     * </pre>
     *
     * <code>.iscp2.v1.Ping ping = 192 [json_name = "ping"];</code>
     * @return The ping.
     */
    @java.lang.Override
    public com.github.aptpod.proto.iscp2.v1.Ping getPing() {
      if (pingBuilder_ == null) {
        if (messageCase_ == 192) {
          return (com.github.aptpod.proto.iscp2.v1.Ping) message_;
        }
        return com.github.aptpod.proto.iscp2.v1.Ping.getDefaultInstance();
      } else {
        if (messageCase_ == 192) {
          return pingBuilder_.getMessage();
        }
        return com.github.aptpod.proto.iscp2.v1.Ping.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * Ping/Pong
     * </pre>
     *
     * <code>.iscp2.v1.Ping ping = 192 [json_name = "ping"];</code>
     */
    public Builder setPing(com.github.aptpod.proto.iscp2.v1.Ping value) {
      if (pingBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        message_ = value;
        onChanged();
      } else {
        pingBuilder_.setMessage(value);
      }
      messageCase_ = 192;
      return this;
    }
    /**
     * <pre>
     * Ping/Pong
     * </pre>
     *
     * <code>.iscp2.v1.Ping ping = 192 [json_name = "ping"];</code>
     */
    public Builder setPing(
        com.github.aptpod.proto.iscp2.v1.Ping.Builder builderForValue) {
      if (pingBuilder_ == null) {
        message_ = builderForValue.build();
        onChanged();
      } else {
        pingBuilder_.setMessage(builderForValue.build());
      }
      messageCase_ = 192;
      return this;
    }
    /**
     * <pre>
     * Ping/Pong
     * </pre>
     *
     * <code>.iscp2.v1.Ping ping = 192 [json_name = "ping"];</code>
     */
    public Builder mergePing(com.github.aptpod.proto.iscp2.v1.Ping value) {
      if (pingBuilder_ == null) {
        if (messageCase_ == 192 &&
            message_ != com.github.aptpod.proto.iscp2.v1.Ping.getDefaultInstance()) {
          message_ = com.github.aptpod.proto.iscp2.v1.Ping.newBuilder((com.github.aptpod.proto.iscp2.v1.Ping) message_)
              .mergeFrom(value).buildPartial();
        } else {
          message_ = value;
        }
        onChanged();
      } else {
        if (messageCase_ == 192) {
          pingBuilder_.mergeFrom(value);
        } else {
          pingBuilder_.setMessage(value);
        }
      }
      messageCase_ = 192;
      return this;
    }
    /**
     * <pre>
     * Ping/Pong
     * </pre>
     *
     * <code>.iscp2.v1.Ping ping = 192 [json_name = "ping"];</code>
     */
    public Builder clearPing() {
      if (pingBuilder_ == null) {
        if (messageCase_ == 192) {
          messageCase_ = 0;
          message_ = null;
          onChanged();
        }
      } else {
        if (messageCase_ == 192) {
          messageCase_ = 0;
          message_ = null;
        }
        pingBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * Ping/Pong
     * </pre>
     *
     * <code>.iscp2.v1.Ping ping = 192 [json_name = "ping"];</code>
     */
    public com.github.aptpod.proto.iscp2.v1.Ping.Builder getPingBuilder() {
      return getPingFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Ping/Pong
     * </pre>
     *
     * <code>.iscp2.v1.Ping ping = 192 [json_name = "ping"];</code>
     */
    @java.lang.Override
    public com.github.aptpod.proto.iscp2.v1.PingOrBuilder getPingOrBuilder() {
      if ((messageCase_ == 192) && (pingBuilder_ != null)) {
        return pingBuilder_.getMessageOrBuilder();
      } else {
        if (messageCase_ == 192) {
          return (com.github.aptpod.proto.iscp2.v1.Ping) message_;
        }
        return com.github.aptpod.proto.iscp2.v1.Ping.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * Ping/Pong
     * </pre>
     *
     * <code>.iscp2.v1.Ping ping = 192 [json_name = "ping"];</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.github.aptpod.proto.iscp2.v1.Ping, com.github.aptpod.proto.iscp2.v1.Ping.Builder, com.github.aptpod.proto.iscp2.v1.PingOrBuilder> 
        getPingFieldBuilder() {
      if (pingBuilder_ == null) {
        if (!(messageCase_ == 192)) {
          message_ = com.github.aptpod.proto.iscp2.v1.Ping.getDefaultInstance();
        }
        pingBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.github.aptpod.proto.iscp2.v1.Ping, com.github.aptpod.proto.iscp2.v1.Ping.Builder, com.github.aptpod.proto.iscp2.v1.PingOrBuilder>(
                (com.github.aptpod.proto.iscp2.v1.Ping) message_,
                getParentForChildren(),
                isClean());
        message_ = null;
      }
      messageCase_ = 192;
      onChanged();
      return pingBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        com.github.aptpod.proto.iscp2.v1.Pong, com.github.aptpod.proto.iscp2.v1.Pong.Builder, com.github.aptpod.proto.iscp2.v1.PongOrBuilder> pongBuilder_;
    /**
     * <code>.iscp2.v1.Pong pong = 193 [json_name = "pong"];</code>
     * @return Whether the pong field is set.
     */
    @java.lang.Override
    public boolean hasPong() {
      return messageCase_ == 193;
    }
    /**
     * <code>.iscp2.v1.Pong pong = 193 [json_name = "pong"];</code>
     * @return The pong.
     */
    @java.lang.Override
    public com.github.aptpod.proto.iscp2.v1.Pong getPong() {
      if (pongBuilder_ == null) {
        if (messageCase_ == 193) {
          return (com.github.aptpod.proto.iscp2.v1.Pong) message_;
        }
        return com.github.aptpod.proto.iscp2.v1.Pong.getDefaultInstance();
      } else {
        if (messageCase_ == 193) {
          return pongBuilder_.getMessage();
        }
        return com.github.aptpod.proto.iscp2.v1.Pong.getDefaultInstance();
      }
    }
    /**
     * <code>.iscp2.v1.Pong pong = 193 [json_name = "pong"];</code>
     */
    public Builder setPong(com.github.aptpod.proto.iscp2.v1.Pong value) {
      if (pongBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        message_ = value;
        onChanged();
      } else {
        pongBuilder_.setMessage(value);
      }
      messageCase_ = 193;
      return this;
    }
    /**
     * <code>.iscp2.v1.Pong pong = 193 [json_name = "pong"];</code>
     */
    public Builder setPong(
        com.github.aptpod.proto.iscp2.v1.Pong.Builder builderForValue) {
      if (pongBuilder_ == null) {
        message_ = builderForValue.build();
        onChanged();
      } else {
        pongBuilder_.setMessage(builderForValue.build());
      }
      messageCase_ = 193;
      return this;
    }
    /**
     * <code>.iscp2.v1.Pong pong = 193 [json_name = "pong"];</code>
     */
    public Builder mergePong(com.github.aptpod.proto.iscp2.v1.Pong value) {
      if (pongBuilder_ == null) {
        if (messageCase_ == 193 &&
            message_ != com.github.aptpod.proto.iscp2.v1.Pong.getDefaultInstance()) {
          message_ = com.github.aptpod.proto.iscp2.v1.Pong.newBuilder((com.github.aptpod.proto.iscp2.v1.Pong) message_)
              .mergeFrom(value).buildPartial();
        } else {
          message_ = value;
        }
        onChanged();
      } else {
        if (messageCase_ == 193) {
          pongBuilder_.mergeFrom(value);
        } else {
          pongBuilder_.setMessage(value);
        }
      }
      messageCase_ = 193;
      return this;
    }
    /**
     * <code>.iscp2.v1.Pong pong = 193 [json_name = "pong"];</code>
     */
    public Builder clearPong() {
      if (pongBuilder_ == null) {
        if (messageCase_ == 193) {
          messageCase_ = 0;
          message_ = null;
          onChanged();
        }
      } else {
        if (messageCase_ == 193) {
          messageCase_ = 0;
          message_ = null;
        }
        pongBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>.iscp2.v1.Pong pong = 193 [json_name = "pong"];</code>
     */
    public com.github.aptpod.proto.iscp2.v1.Pong.Builder getPongBuilder() {
      return getPongFieldBuilder().getBuilder();
    }
    /**
     * <code>.iscp2.v1.Pong pong = 193 [json_name = "pong"];</code>
     */
    @java.lang.Override
    public com.github.aptpod.proto.iscp2.v1.PongOrBuilder getPongOrBuilder() {
      if ((messageCase_ == 193) && (pongBuilder_ != null)) {
        return pongBuilder_.getMessageOrBuilder();
      } else {
        if (messageCase_ == 193) {
          return (com.github.aptpod.proto.iscp2.v1.Pong) message_;
        }
        return com.github.aptpod.proto.iscp2.v1.Pong.getDefaultInstance();
      }
    }
    /**
     * <code>.iscp2.v1.Pong pong = 193 [json_name = "pong"];</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.github.aptpod.proto.iscp2.v1.Pong, com.github.aptpod.proto.iscp2.v1.Pong.Builder, com.github.aptpod.proto.iscp2.v1.PongOrBuilder> 
        getPongFieldBuilder() {
      if (pongBuilder_ == null) {
        if (!(messageCase_ == 193)) {
          message_ = com.github.aptpod.proto.iscp2.v1.Pong.getDefaultInstance();
        }
        pongBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.github.aptpod.proto.iscp2.v1.Pong, com.github.aptpod.proto.iscp2.v1.Pong.Builder, com.github.aptpod.proto.iscp2.v1.PongOrBuilder>(
                (com.github.aptpod.proto.iscp2.v1.Pong) message_,
                getParentForChildren(),
                isClean());
        message_ = null;
      }
      messageCase_ = 193;
      onChanged();
      return pongBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        com.github.aptpod.proto.iscp2.v1.UpstreamCall, com.github.aptpod.proto.iscp2.v1.UpstreamCall.Builder, com.github.aptpod.proto.iscp2.v1.UpstreamCallOrBuilder> upstreamCallBuilder_;
    /**
     * <pre>
     * E2E Call
     * </pre>
     *
     * <code>.iscp2.v1.UpstreamCall upstream_call = 256 [json_name = "upstreamCall"];</code>
     * @return Whether the upstreamCall field is set.
     */
    @java.lang.Override
    public boolean hasUpstreamCall() {
      return messageCase_ == 256;
    }
    /**
     * <pre>
     * E2E Call
     * </pre>
     *
     * <code>.iscp2.v1.UpstreamCall upstream_call = 256 [json_name = "upstreamCall"];</code>
     * @return The upstreamCall.
     */
    @java.lang.Override
    public com.github.aptpod.proto.iscp2.v1.UpstreamCall getUpstreamCall() {
      if (upstreamCallBuilder_ == null) {
        if (messageCase_ == 256) {
          return (com.github.aptpod.proto.iscp2.v1.UpstreamCall) message_;
        }
        return com.github.aptpod.proto.iscp2.v1.UpstreamCall.getDefaultInstance();
      } else {
        if (messageCase_ == 256) {
          return upstreamCallBuilder_.getMessage();
        }
        return com.github.aptpod.proto.iscp2.v1.UpstreamCall.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * E2E Call
     * </pre>
     *
     * <code>.iscp2.v1.UpstreamCall upstream_call = 256 [json_name = "upstreamCall"];</code>
     */
    public Builder setUpstreamCall(com.github.aptpod.proto.iscp2.v1.UpstreamCall value) {
      if (upstreamCallBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        message_ = value;
        onChanged();
      } else {
        upstreamCallBuilder_.setMessage(value);
      }
      messageCase_ = 256;
      return this;
    }
    /**
     * <pre>
     * E2E Call
     * </pre>
     *
     * <code>.iscp2.v1.UpstreamCall upstream_call = 256 [json_name = "upstreamCall"];</code>
     */
    public Builder setUpstreamCall(
        com.github.aptpod.proto.iscp2.v1.UpstreamCall.Builder builderForValue) {
      if (upstreamCallBuilder_ == null) {
        message_ = builderForValue.build();
        onChanged();
      } else {
        upstreamCallBuilder_.setMessage(builderForValue.build());
      }
      messageCase_ = 256;
      return this;
    }
    /**
     * <pre>
     * E2E Call
     * </pre>
     *
     * <code>.iscp2.v1.UpstreamCall upstream_call = 256 [json_name = "upstreamCall"];</code>
     */
    public Builder mergeUpstreamCall(com.github.aptpod.proto.iscp2.v1.UpstreamCall value) {
      if (upstreamCallBuilder_ == null) {
        if (messageCase_ == 256 &&
            message_ != com.github.aptpod.proto.iscp2.v1.UpstreamCall.getDefaultInstance()) {
          message_ = com.github.aptpod.proto.iscp2.v1.UpstreamCall.newBuilder((com.github.aptpod.proto.iscp2.v1.UpstreamCall) message_)
              .mergeFrom(value).buildPartial();
        } else {
          message_ = value;
        }
        onChanged();
      } else {
        if (messageCase_ == 256) {
          upstreamCallBuilder_.mergeFrom(value);
        } else {
          upstreamCallBuilder_.setMessage(value);
        }
      }
      messageCase_ = 256;
      return this;
    }
    /**
     * <pre>
     * E2E Call
     * </pre>
     *
     * <code>.iscp2.v1.UpstreamCall upstream_call = 256 [json_name = "upstreamCall"];</code>
     */
    public Builder clearUpstreamCall() {
      if (upstreamCallBuilder_ == null) {
        if (messageCase_ == 256) {
          messageCase_ = 0;
          message_ = null;
          onChanged();
        }
      } else {
        if (messageCase_ == 256) {
          messageCase_ = 0;
          message_ = null;
        }
        upstreamCallBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * E2E Call
     * </pre>
     *
     * <code>.iscp2.v1.UpstreamCall upstream_call = 256 [json_name = "upstreamCall"];</code>
     */
    public com.github.aptpod.proto.iscp2.v1.UpstreamCall.Builder getUpstreamCallBuilder() {
      return getUpstreamCallFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * E2E Call
     * </pre>
     *
     * <code>.iscp2.v1.UpstreamCall upstream_call = 256 [json_name = "upstreamCall"];</code>
     */
    @java.lang.Override
    public com.github.aptpod.proto.iscp2.v1.UpstreamCallOrBuilder getUpstreamCallOrBuilder() {
      if ((messageCase_ == 256) && (upstreamCallBuilder_ != null)) {
        return upstreamCallBuilder_.getMessageOrBuilder();
      } else {
        if (messageCase_ == 256) {
          return (com.github.aptpod.proto.iscp2.v1.UpstreamCall) message_;
        }
        return com.github.aptpod.proto.iscp2.v1.UpstreamCall.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * E2E Call
     * </pre>
     *
     * <code>.iscp2.v1.UpstreamCall upstream_call = 256 [json_name = "upstreamCall"];</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.github.aptpod.proto.iscp2.v1.UpstreamCall, com.github.aptpod.proto.iscp2.v1.UpstreamCall.Builder, com.github.aptpod.proto.iscp2.v1.UpstreamCallOrBuilder> 
        getUpstreamCallFieldBuilder() {
      if (upstreamCallBuilder_ == null) {
        if (!(messageCase_ == 256)) {
          message_ = com.github.aptpod.proto.iscp2.v1.UpstreamCall.getDefaultInstance();
        }
        upstreamCallBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.github.aptpod.proto.iscp2.v1.UpstreamCall, com.github.aptpod.proto.iscp2.v1.UpstreamCall.Builder, com.github.aptpod.proto.iscp2.v1.UpstreamCallOrBuilder>(
                (com.github.aptpod.proto.iscp2.v1.UpstreamCall) message_,
                getParentForChildren(),
                isClean());
        message_ = null;
      }
      messageCase_ = 256;
      onChanged();
      return upstreamCallBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        com.github.aptpod.proto.iscp2.v1.UpstreamCallAck, com.github.aptpod.proto.iscp2.v1.UpstreamCallAck.Builder, com.github.aptpod.proto.iscp2.v1.UpstreamCallAckOrBuilder> upstreamCallAckBuilder_;
    /**
     * <code>.iscp2.v1.UpstreamCallAck upstream_call_ack = 257 [json_name = "upstreamCallAck"];</code>
     * @return Whether the upstreamCallAck field is set.
     */
    @java.lang.Override
    public boolean hasUpstreamCallAck() {
      return messageCase_ == 257;
    }
    /**
     * <code>.iscp2.v1.UpstreamCallAck upstream_call_ack = 257 [json_name = "upstreamCallAck"];</code>
     * @return The upstreamCallAck.
     */
    @java.lang.Override
    public com.github.aptpod.proto.iscp2.v1.UpstreamCallAck getUpstreamCallAck() {
      if (upstreamCallAckBuilder_ == null) {
        if (messageCase_ == 257) {
          return (com.github.aptpod.proto.iscp2.v1.UpstreamCallAck) message_;
        }
        return com.github.aptpod.proto.iscp2.v1.UpstreamCallAck.getDefaultInstance();
      } else {
        if (messageCase_ == 257) {
          return upstreamCallAckBuilder_.getMessage();
        }
        return com.github.aptpod.proto.iscp2.v1.UpstreamCallAck.getDefaultInstance();
      }
    }
    /**
     * <code>.iscp2.v1.UpstreamCallAck upstream_call_ack = 257 [json_name = "upstreamCallAck"];</code>
     */
    public Builder setUpstreamCallAck(com.github.aptpod.proto.iscp2.v1.UpstreamCallAck value) {
      if (upstreamCallAckBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        message_ = value;
        onChanged();
      } else {
        upstreamCallAckBuilder_.setMessage(value);
      }
      messageCase_ = 257;
      return this;
    }
    /**
     * <code>.iscp2.v1.UpstreamCallAck upstream_call_ack = 257 [json_name = "upstreamCallAck"];</code>
     */
    public Builder setUpstreamCallAck(
        com.github.aptpod.proto.iscp2.v1.UpstreamCallAck.Builder builderForValue) {
      if (upstreamCallAckBuilder_ == null) {
        message_ = builderForValue.build();
        onChanged();
      } else {
        upstreamCallAckBuilder_.setMessage(builderForValue.build());
      }
      messageCase_ = 257;
      return this;
    }
    /**
     * <code>.iscp2.v1.UpstreamCallAck upstream_call_ack = 257 [json_name = "upstreamCallAck"];</code>
     */
    public Builder mergeUpstreamCallAck(com.github.aptpod.proto.iscp2.v1.UpstreamCallAck value) {
      if (upstreamCallAckBuilder_ == null) {
        if (messageCase_ == 257 &&
            message_ != com.github.aptpod.proto.iscp2.v1.UpstreamCallAck.getDefaultInstance()) {
          message_ = com.github.aptpod.proto.iscp2.v1.UpstreamCallAck.newBuilder((com.github.aptpod.proto.iscp2.v1.UpstreamCallAck) message_)
              .mergeFrom(value).buildPartial();
        } else {
          message_ = value;
        }
        onChanged();
      } else {
        if (messageCase_ == 257) {
          upstreamCallAckBuilder_.mergeFrom(value);
        } else {
          upstreamCallAckBuilder_.setMessage(value);
        }
      }
      messageCase_ = 257;
      return this;
    }
    /**
     * <code>.iscp2.v1.UpstreamCallAck upstream_call_ack = 257 [json_name = "upstreamCallAck"];</code>
     */
    public Builder clearUpstreamCallAck() {
      if (upstreamCallAckBuilder_ == null) {
        if (messageCase_ == 257) {
          messageCase_ = 0;
          message_ = null;
          onChanged();
        }
      } else {
        if (messageCase_ == 257) {
          messageCase_ = 0;
          message_ = null;
        }
        upstreamCallAckBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>.iscp2.v1.UpstreamCallAck upstream_call_ack = 257 [json_name = "upstreamCallAck"];</code>
     */
    public com.github.aptpod.proto.iscp2.v1.UpstreamCallAck.Builder getUpstreamCallAckBuilder() {
      return getUpstreamCallAckFieldBuilder().getBuilder();
    }
    /**
     * <code>.iscp2.v1.UpstreamCallAck upstream_call_ack = 257 [json_name = "upstreamCallAck"];</code>
     */
    @java.lang.Override
    public com.github.aptpod.proto.iscp2.v1.UpstreamCallAckOrBuilder getUpstreamCallAckOrBuilder() {
      if ((messageCase_ == 257) && (upstreamCallAckBuilder_ != null)) {
        return upstreamCallAckBuilder_.getMessageOrBuilder();
      } else {
        if (messageCase_ == 257) {
          return (com.github.aptpod.proto.iscp2.v1.UpstreamCallAck) message_;
        }
        return com.github.aptpod.proto.iscp2.v1.UpstreamCallAck.getDefaultInstance();
      }
    }
    /**
     * <code>.iscp2.v1.UpstreamCallAck upstream_call_ack = 257 [json_name = "upstreamCallAck"];</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.github.aptpod.proto.iscp2.v1.UpstreamCallAck, com.github.aptpod.proto.iscp2.v1.UpstreamCallAck.Builder, com.github.aptpod.proto.iscp2.v1.UpstreamCallAckOrBuilder> 
        getUpstreamCallAckFieldBuilder() {
      if (upstreamCallAckBuilder_ == null) {
        if (!(messageCase_ == 257)) {
          message_ = com.github.aptpod.proto.iscp2.v1.UpstreamCallAck.getDefaultInstance();
        }
        upstreamCallAckBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.github.aptpod.proto.iscp2.v1.UpstreamCallAck, com.github.aptpod.proto.iscp2.v1.UpstreamCallAck.Builder, com.github.aptpod.proto.iscp2.v1.UpstreamCallAckOrBuilder>(
                (com.github.aptpod.proto.iscp2.v1.UpstreamCallAck) message_,
                getParentForChildren(),
                isClean());
        message_ = null;
      }
      messageCase_ = 257;
      onChanged();
      return upstreamCallAckBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        com.github.aptpod.proto.iscp2.v1.DownstreamCall, com.github.aptpod.proto.iscp2.v1.DownstreamCall.Builder, com.github.aptpod.proto.iscp2.v1.DownstreamCallOrBuilder> downstreamCallBuilder_;
    /**
     * <code>.iscp2.v1.DownstreamCall downstream_call = 258 [json_name = "downstreamCall"];</code>
     * @return Whether the downstreamCall field is set.
     */
    @java.lang.Override
    public boolean hasDownstreamCall() {
      return messageCase_ == 258;
    }
    /**
     * <code>.iscp2.v1.DownstreamCall downstream_call = 258 [json_name = "downstreamCall"];</code>
     * @return The downstreamCall.
     */
    @java.lang.Override
    public com.github.aptpod.proto.iscp2.v1.DownstreamCall getDownstreamCall() {
      if (downstreamCallBuilder_ == null) {
        if (messageCase_ == 258) {
          return (com.github.aptpod.proto.iscp2.v1.DownstreamCall) message_;
        }
        return com.github.aptpod.proto.iscp2.v1.DownstreamCall.getDefaultInstance();
      } else {
        if (messageCase_ == 258) {
          return downstreamCallBuilder_.getMessage();
        }
        return com.github.aptpod.proto.iscp2.v1.DownstreamCall.getDefaultInstance();
      }
    }
    /**
     * <code>.iscp2.v1.DownstreamCall downstream_call = 258 [json_name = "downstreamCall"];</code>
     */
    public Builder setDownstreamCall(com.github.aptpod.proto.iscp2.v1.DownstreamCall value) {
      if (downstreamCallBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        message_ = value;
        onChanged();
      } else {
        downstreamCallBuilder_.setMessage(value);
      }
      messageCase_ = 258;
      return this;
    }
    /**
     * <code>.iscp2.v1.DownstreamCall downstream_call = 258 [json_name = "downstreamCall"];</code>
     */
    public Builder setDownstreamCall(
        com.github.aptpod.proto.iscp2.v1.DownstreamCall.Builder builderForValue) {
      if (downstreamCallBuilder_ == null) {
        message_ = builderForValue.build();
        onChanged();
      } else {
        downstreamCallBuilder_.setMessage(builderForValue.build());
      }
      messageCase_ = 258;
      return this;
    }
    /**
     * <code>.iscp2.v1.DownstreamCall downstream_call = 258 [json_name = "downstreamCall"];</code>
     */
    public Builder mergeDownstreamCall(com.github.aptpod.proto.iscp2.v1.DownstreamCall value) {
      if (downstreamCallBuilder_ == null) {
        if (messageCase_ == 258 &&
            message_ != com.github.aptpod.proto.iscp2.v1.DownstreamCall.getDefaultInstance()) {
          message_ = com.github.aptpod.proto.iscp2.v1.DownstreamCall.newBuilder((com.github.aptpod.proto.iscp2.v1.DownstreamCall) message_)
              .mergeFrom(value).buildPartial();
        } else {
          message_ = value;
        }
        onChanged();
      } else {
        if (messageCase_ == 258) {
          downstreamCallBuilder_.mergeFrom(value);
        } else {
          downstreamCallBuilder_.setMessage(value);
        }
      }
      messageCase_ = 258;
      return this;
    }
    /**
     * <code>.iscp2.v1.DownstreamCall downstream_call = 258 [json_name = "downstreamCall"];</code>
     */
    public Builder clearDownstreamCall() {
      if (downstreamCallBuilder_ == null) {
        if (messageCase_ == 258) {
          messageCase_ = 0;
          message_ = null;
          onChanged();
        }
      } else {
        if (messageCase_ == 258) {
          messageCase_ = 0;
          message_ = null;
        }
        downstreamCallBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>.iscp2.v1.DownstreamCall downstream_call = 258 [json_name = "downstreamCall"];</code>
     */
    public com.github.aptpod.proto.iscp2.v1.DownstreamCall.Builder getDownstreamCallBuilder() {
      return getDownstreamCallFieldBuilder().getBuilder();
    }
    /**
     * <code>.iscp2.v1.DownstreamCall downstream_call = 258 [json_name = "downstreamCall"];</code>
     */
    @java.lang.Override
    public com.github.aptpod.proto.iscp2.v1.DownstreamCallOrBuilder getDownstreamCallOrBuilder() {
      if ((messageCase_ == 258) && (downstreamCallBuilder_ != null)) {
        return downstreamCallBuilder_.getMessageOrBuilder();
      } else {
        if (messageCase_ == 258) {
          return (com.github.aptpod.proto.iscp2.v1.DownstreamCall) message_;
        }
        return com.github.aptpod.proto.iscp2.v1.DownstreamCall.getDefaultInstance();
      }
    }
    /**
     * <code>.iscp2.v1.DownstreamCall downstream_call = 258 [json_name = "downstreamCall"];</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.github.aptpod.proto.iscp2.v1.DownstreamCall, com.github.aptpod.proto.iscp2.v1.DownstreamCall.Builder, com.github.aptpod.proto.iscp2.v1.DownstreamCallOrBuilder> 
        getDownstreamCallFieldBuilder() {
      if (downstreamCallBuilder_ == null) {
        if (!(messageCase_ == 258)) {
          message_ = com.github.aptpod.proto.iscp2.v1.DownstreamCall.getDefaultInstance();
        }
        downstreamCallBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.github.aptpod.proto.iscp2.v1.DownstreamCall, com.github.aptpod.proto.iscp2.v1.DownstreamCall.Builder, com.github.aptpod.proto.iscp2.v1.DownstreamCallOrBuilder>(
                (com.github.aptpod.proto.iscp2.v1.DownstreamCall) message_,
                getParentForChildren(),
                isClean());
        message_ = null;
      }
      messageCase_ = 258;
      onChanged();
      return downstreamCallBuilder_;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:iscp2.v1.Message)
  }

  // @@protoc_insertion_point(class_scope:iscp2.v1.Message)
  private static final com.github.aptpod.proto.iscp2.v1.Message DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.github.aptpod.proto.iscp2.v1.Message();
  }

  public static com.github.aptpod.proto.iscp2.v1.Message getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<Message>
      PARSER = new com.google.protobuf.AbstractParser<Message>() {
    @java.lang.Override
    public Message parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<Message> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<Message> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.github.aptpod.proto.iscp2.v1.Message getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

