// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: iscp2/v1/downstream.proto

package com.github.aptpod.proto.iscp2.v1;

public interface DownstreamChunkAckCompleteOrBuilder extends
    // @@protoc_insertion_point(interface_extends:iscp2.v1.DownstreamChunkAckComplete)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <code>uint32 stream_id_alias = 1 [json_name = "streamIdAlias"];</code>
   * @return The streamIdAlias.
   */
  int getStreamIdAlias();

  /**
   * <code>uint32 ack_id = 2 [json_name = "ackId"];</code>
   * @return The ackId.
   */
  int getAckId();

  /**
   * <code>.iscp2.v1.ResultCode result_code = 3 [json_name = "resultCode"];</code>
   * @return The enum numeric value on the wire for resultCode.
   */
  int getResultCodeValue();
  /**
   * <code>.iscp2.v1.ResultCode result_code = 3 [json_name = "resultCode"];</code>
   * @return The resultCode.
   */
  com.github.aptpod.proto.iscp2.v1.ResultCode getResultCode();

  /**
   * <code>string result_string = 4 [json_name = "resultString"];</code>
   * @return The resultString.
   */
  java.lang.String getResultString();
  /**
   * <code>string result_string = 4 [json_name = "resultString"];</code>
   * @return The bytes for resultString.
   */
  com.google.protobuf.ByteString
      getResultStringBytes();

  /**
   * <code>.iscp2.v1.extensions.DownstreamChunkAckCompleteExtensionFields extension_fields = 5 [json_name = "extensionFields"];</code>
   * @return Whether the extensionFields field is set.
   */
  boolean hasExtensionFields();
  /**
   * <code>.iscp2.v1.extensions.DownstreamChunkAckCompleteExtensionFields extension_fields = 5 [json_name = "extensionFields"];</code>
   * @return The extensionFields.
   */
  com.github.aptpod.proto.iscp2.v1.extensions.DownstreamChunkAckCompleteExtensionFields getExtensionFields();
  /**
   * <code>.iscp2.v1.extensions.DownstreamChunkAckCompleteExtensionFields extension_fields = 5 [json_name = "extensionFields"];</code>
   */
  com.github.aptpod.proto.iscp2.v1.extensions.DownstreamChunkAckCompleteExtensionFieldsOrBuilder getExtensionFieldsOrBuilder();
}
