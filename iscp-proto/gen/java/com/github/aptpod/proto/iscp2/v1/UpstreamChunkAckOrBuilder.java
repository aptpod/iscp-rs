// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: iscp2/v1/upstream.proto

package com.github.aptpod.proto.iscp2.v1;

public interface UpstreamChunkAckOrBuilder extends
    // @@protoc_insertion_point(interface_extends:iscp2.v1.UpstreamChunkAck)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <code>uint32 stream_id_alias = 1 [json_name = "streamIdAlias"];</code>
   * @return The streamIdAlias.
   */
  int getStreamIdAlias();

  /**
   * <code>repeated .iscp2.v1.UpstreamChunkResult results = 2 [json_name = "results"];</code>
   */
  java.util.List<com.github.aptpod.proto.iscp2.v1.UpstreamChunkResult> 
      getResultsList();
  /**
   * <code>repeated .iscp2.v1.UpstreamChunkResult results = 2 [json_name = "results"];</code>
   */
  com.github.aptpod.proto.iscp2.v1.UpstreamChunkResult getResults(int index);
  /**
   * <code>repeated .iscp2.v1.UpstreamChunkResult results = 2 [json_name = "results"];</code>
   */
  int getResultsCount();
  /**
   * <code>repeated .iscp2.v1.UpstreamChunkResult results = 2 [json_name = "results"];</code>
   */
  java.util.List<? extends com.github.aptpod.proto.iscp2.v1.UpstreamChunkResultOrBuilder> 
      getResultsOrBuilderList();
  /**
   * <code>repeated .iscp2.v1.UpstreamChunkResult results = 2 [json_name = "results"];</code>
   */
  com.github.aptpod.proto.iscp2.v1.UpstreamChunkResultOrBuilder getResultsOrBuilder(
      int index);

  /**
   * <code>map&lt;uint32, .iscp2.v1.DataID&gt; data_id_aliases = 3 [json_name = "dataIdAliases"];</code>
   */
  int getDataIdAliasesCount();
  /**
   * <code>map&lt;uint32, .iscp2.v1.DataID&gt; data_id_aliases = 3 [json_name = "dataIdAliases"];</code>
   */
  boolean containsDataIdAliases(
      int key);
  /**
   * Use {@link #getDataIdAliasesMap()} instead.
   */
  @java.lang.Deprecated
  java.util.Map<java.lang.Integer, com.github.aptpod.proto.iscp2.v1.DataID>
  getDataIdAliases();
  /**
   * <code>map&lt;uint32, .iscp2.v1.DataID&gt; data_id_aliases = 3 [json_name = "dataIdAliases"];</code>
   */
  java.util.Map<java.lang.Integer, com.github.aptpod.proto.iscp2.v1.DataID>
  getDataIdAliasesMap();
  /**
   * <code>map&lt;uint32, .iscp2.v1.DataID&gt; data_id_aliases = 3 [json_name = "dataIdAliases"];</code>
   */
  /* nullable */
com.github.aptpod.proto.iscp2.v1.DataID getDataIdAliasesOrDefault(
      int key,
      /* nullable */
com.github.aptpod.proto.iscp2.v1.DataID defaultValue);
  /**
   * <code>map&lt;uint32, .iscp2.v1.DataID&gt; data_id_aliases = 3 [json_name = "dataIdAliases"];</code>
   */
  com.github.aptpod.proto.iscp2.v1.DataID getDataIdAliasesOrThrow(
      int key);

  /**
   * <code>.iscp2.v1.extensions.UpstreamChunkAckExtensionFields extension_fields = 4 [json_name = "extensionFields"];</code>
   * @return Whether the extensionFields field is set.
   */
  boolean hasExtensionFields();
  /**
   * <code>.iscp2.v1.extensions.UpstreamChunkAckExtensionFields extension_fields = 4 [json_name = "extensionFields"];</code>
   * @return The extensionFields.
   */
  com.github.aptpod.proto.iscp2.v1.extensions.UpstreamChunkAckExtensionFields getExtensionFields();
  /**
   * <code>.iscp2.v1.extensions.UpstreamChunkAckExtensionFields extension_fields = 4 [json_name = "extensionFields"];</code>
   */
  com.github.aptpod.proto.iscp2.v1.extensions.UpstreamChunkAckExtensionFieldsOrBuilder getExtensionFieldsOrBuilder();
}
