// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: iscp2/v1/downstream.proto

package com.github.aptpod.proto.iscp2.v1;

/**
 * Protobuf type {@code iscp2.v1.DownstreamMetadata}
 */
public final class DownstreamMetadata extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:iscp2.v1.DownstreamMetadata)
    DownstreamMetadataOrBuilder {
private static final long serialVersionUID = 0L;
  // Use DownstreamMetadata.newBuilder() to construct.
  private DownstreamMetadata(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private DownstreamMetadata() {
    sourceNodeId_ = "";
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new DownstreamMetadata();
  }

  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.github.aptpod.proto.iscp2.v1.DownstreamProto.internal_static_iscp2_v1_DownstreamMetadata_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.github.aptpod.proto.iscp2.v1.DownstreamProto.internal_static_iscp2_v1_DownstreamMetadata_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.github.aptpod.proto.iscp2.v1.DownstreamMetadata.class, com.github.aptpod.proto.iscp2.v1.DownstreamMetadata.Builder.class);
  }

  private int metadataCase_ = 0;
  @SuppressWarnings("serial")
  private java.lang.Object metadata_;
  public enum MetadataCase
      implements com.google.protobuf.Internal.EnumLite,
          com.google.protobuf.AbstractMessage.InternalOneOfEnum {
    BASE_TIME(2),
    UPSTREAM_OPEN(3),
    UPSTREAM_ABNORMAL_CLOSE(4),
    UPSTREAM_RESUME(5),
    UPSTREAM_NORMAL_CLOSE(6),
    DOWNSTREAM_OPEN(7),
    DOWNSTREAM_ABNORMAL_CLOSE(8),
    DOWNSTREAM_RESUME(9),
    DOWNSTREAM_NORMAL_CLOSE(10),
    METADATA_NOT_SET(0);
    private final int value;
    private MetadataCase(int value) {
      this.value = value;
    }
    /**
     * @param value The number of the enum to look for.
     * @return The enum associated with the given number.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static MetadataCase valueOf(int value) {
      return forNumber(value);
    }

    public static MetadataCase forNumber(int value) {
      switch (value) {
        case 2: return BASE_TIME;
        case 3: return UPSTREAM_OPEN;
        case 4: return UPSTREAM_ABNORMAL_CLOSE;
        case 5: return UPSTREAM_RESUME;
        case 6: return UPSTREAM_NORMAL_CLOSE;
        case 7: return DOWNSTREAM_OPEN;
        case 8: return DOWNSTREAM_ABNORMAL_CLOSE;
        case 9: return DOWNSTREAM_RESUME;
        case 10: return DOWNSTREAM_NORMAL_CLOSE;
        case 0: return METADATA_NOT_SET;
        default: return null;
      }
    }
    public int getNumber() {
      return this.value;
    }
  };

  public MetadataCase
  getMetadataCase() {
    return MetadataCase.forNumber(
        metadataCase_);
  }

  public static final int REQUEST_ID_FIELD_NUMBER = 1;
  private int requestId_ = 0;
  /**
   * <code>uint32 request_id = 1 [json_name = "requestId"];</code>
   * @return The requestId.
   */
  @java.lang.Override
  public int getRequestId() {
    return requestId_;
  }

  public static final int STREAM_ID_ALIAS_FIELD_NUMBER = 13;
  private int streamIdAlias_ = 0;
  /**
   * <code>uint32 stream_id_alias = 13 [json_name = "streamIdAlias"];</code>
   * @return The streamIdAlias.
   */
  @java.lang.Override
  public int getStreamIdAlias() {
    return streamIdAlias_;
  }

  public static final int BASE_TIME_FIELD_NUMBER = 2;
  /**
   * <code>.iscp2.v1.BaseTime base_time = 2 [json_name = "baseTime"];</code>
   * @return Whether the baseTime field is set.
   */
  @java.lang.Override
  public boolean hasBaseTime() {
    return metadataCase_ == 2;
  }
  /**
   * <code>.iscp2.v1.BaseTime base_time = 2 [json_name = "baseTime"];</code>
   * @return The baseTime.
   */
  @java.lang.Override
  public com.github.aptpod.proto.iscp2.v1.BaseTime getBaseTime() {
    if (metadataCase_ == 2) {
       return (com.github.aptpod.proto.iscp2.v1.BaseTime) metadata_;
    }
    return com.github.aptpod.proto.iscp2.v1.BaseTime.getDefaultInstance();
  }
  /**
   * <code>.iscp2.v1.BaseTime base_time = 2 [json_name = "baseTime"];</code>
   */
  @java.lang.Override
  public com.github.aptpod.proto.iscp2.v1.BaseTimeOrBuilder getBaseTimeOrBuilder() {
    if (metadataCase_ == 2) {
       return (com.github.aptpod.proto.iscp2.v1.BaseTime) metadata_;
    }
    return com.github.aptpod.proto.iscp2.v1.BaseTime.getDefaultInstance();
  }

  public static final int UPSTREAM_OPEN_FIELD_NUMBER = 3;
  /**
   * <code>.iscp2.v1.UpstreamOpen upstream_open = 3 [json_name = "upstreamOpen"];</code>
   * @return Whether the upstreamOpen field is set.
   */
  @java.lang.Override
  public boolean hasUpstreamOpen() {
    return metadataCase_ == 3;
  }
  /**
   * <code>.iscp2.v1.UpstreamOpen upstream_open = 3 [json_name = "upstreamOpen"];</code>
   * @return The upstreamOpen.
   */
  @java.lang.Override
  public com.github.aptpod.proto.iscp2.v1.UpstreamOpen getUpstreamOpen() {
    if (metadataCase_ == 3) {
       return (com.github.aptpod.proto.iscp2.v1.UpstreamOpen) metadata_;
    }
    return com.github.aptpod.proto.iscp2.v1.UpstreamOpen.getDefaultInstance();
  }
  /**
   * <code>.iscp2.v1.UpstreamOpen upstream_open = 3 [json_name = "upstreamOpen"];</code>
   */
  @java.lang.Override
  public com.github.aptpod.proto.iscp2.v1.UpstreamOpenOrBuilder getUpstreamOpenOrBuilder() {
    if (metadataCase_ == 3) {
       return (com.github.aptpod.proto.iscp2.v1.UpstreamOpen) metadata_;
    }
    return com.github.aptpod.proto.iscp2.v1.UpstreamOpen.getDefaultInstance();
  }

  public static final int UPSTREAM_ABNORMAL_CLOSE_FIELD_NUMBER = 4;
  /**
   * <code>.iscp2.v1.UpstreamAbnormalClose upstream_abnormal_close = 4 [json_name = "upstreamAbnormalClose"];</code>
   * @return Whether the upstreamAbnormalClose field is set.
   */
  @java.lang.Override
  public boolean hasUpstreamAbnormalClose() {
    return metadataCase_ == 4;
  }
  /**
   * <code>.iscp2.v1.UpstreamAbnormalClose upstream_abnormal_close = 4 [json_name = "upstreamAbnormalClose"];</code>
   * @return The upstreamAbnormalClose.
   */
  @java.lang.Override
  public com.github.aptpod.proto.iscp2.v1.UpstreamAbnormalClose getUpstreamAbnormalClose() {
    if (metadataCase_ == 4) {
       return (com.github.aptpod.proto.iscp2.v1.UpstreamAbnormalClose) metadata_;
    }
    return com.github.aptpod.proto.iscp2.v1.UpstreamAbnormalClose.getDefaultInstance();
  }
  /**
   * <code>.iscp2.v1.UpstreamAbnormalClose upstream_abnormal_close = 4 [json_name = "upstreamAbnormalClose"];</code>
   */
  @java.lang.Override
  public com.github.aptpod.proto.iscp2.v1.UpstreamAbnormalCloseOrBuilder getUpstreamAbnormalCloseOrBuilder() {
    if (metadataCase_ == 4) {
       return (com.github.aptpod.proto.iscp2.v1.UpstreamAbnormalClose) metadata_;
    }
    return com.github.aptpod.proto.iscp2.v1.UpstreamAbnormalClose.getDefaultInstance();
  }

  public static final int UPSTREAM_RESUME_FIELD_NUMBER = 5;
  /**
   * <code>.iscp2.v1.UpstreamResume upstream_resume = 5 [json_name = "upstreamResume"];</code>
   * @return Whether the upstreamResume field is set.
   */
  @java.lang.Override
  public boolean hasUpstreamResume() {
    return metadataCase_ == 5;
  }
  /**
   * <code>.iscp2.v1.UpstreamResume upstream_resume = 5 [json_name = "upstreamResume"];</code>
   * @return The upstreamResume.
   */
  @java.lang.Override
  public com.github.aptpod.proto.iscp2.v1.UpstreamResume getUpstreamResume() {
    if (metadataCase_ == 5) {
       return (com.github.aptpod.proto.iscp2.v1.UpstreamResume) metadata_;
    }
    return com.github.aptpod.proto.iscp2.v1.UpstreamResume.getDefaultInstance();
  }
  /**
   * <code>.iscp2.v1.UpstreamResume upstream_resume = 5 [json_name = "upstreamResume"];</code>
   */
  @java.lang.Override
  public com.github.aptpod.proto.iscp2.v1.UpstreamResumeOrBuilder getUpstreamResumeOrBuilder() {
    if (metadataCase_ == 5) {
       return (com.github.aptpod.proto.iscp2.v1.UpstreamResume) metadata_;
    }
    return com.github.aptpod.proto.iscp2.v1.UpstreamResume.getDefaultInstance();
  }

  public static final int UPSTREAM_NORMAL_CLOSE_FIELD_NUMBER = 6;
  /**
   * <code>.iscp2.v1.UpstreamNormalClose upstream_normal_close = 6 [json_name = "upstreamNormalClose"];</code>
   * @return Whether the upstreamNormalClose field is set.
   */
  @java.lang.Override
  public boolean hasUpstreamNormalClose() {
    return metadataCase_ == 6;
  }
  /**
   * <code>.iscp2.v1.UpstreamNormalClose upstream_normal_close = 6 [json_name = "upstreamNormalClose"];</code>
   * @return The upstreamNormalClose.
   */
  @java.lang.Override
  public com.github.aptpod.proto.iscp2.v1.UpstreamNormalClose getUpstreamNormalClose() {
    if (metadataCase_ == 6) {
       return (com.github.aptpod.proto.iscp2.v1.UpstreamNormalClose) metadata_;
    }
    return com.github.aptpod.proto.iscp2.v1.UpstreamNormalClose.getDefaultInstance();
  }
  /**
   * <code>.iscp2.v1.UpstreamNormalClose upstream_normal_close = 6 [json_name = "upstreamNormalClose"];</code>
   */
  @java.lang.Override
  public com.github.aptpod.proto.iscp2.v1.UpstreamNormalCloseOrBuilder getUpstreamNormalCloseOrBuilder() {
    if (metadataCase_ == 6) {
       return (com.github.aptpod.proto.iscp2.v1.UpstreamNormalClose) metadata_;
    }
    return com.github.aptpod.proto.iscp2.v1.UpstreamNormalClose.getDefaultInstance();
  }

  public static final int DOWNSTREAM_OPEN_FIELD_NUMBER = 7;
  /**
   * <code>.iscp2.v1.DownstreamOpen downstream_open = 7 [json_name = "downstreamOpen"];</code>
   * @return Whether the downstreamOpen field is set.
   */
  @java.lang.Override
  public boolean hasDownstreamOpen() {
    return metadataCase_ == 7;
  }
  /**
   * <code>.iscp2.v1.DownstreamOpen downstream_open = 7 [json_name = "downstreamOpen"];</code>
   * @return The downstreamOpen.
   */
  @java.lang.Override
  public com.github.aptpod.proto.iscp2.v1.DownstreamOpen getDownstreamOpen() {
    if (metadataCase_ == 7) {
       return (com.github.aptpod.proto.iscp2.v1.DownstreamOpen) metadata_;
    }
    return com.github.aptpod.proto.iscp2.v1.DownstreamOpen.getDefaultInstance();
  }
  /**
   * <code>.iscp2.v1.DownstreamOpen downstream_open = 7 [json_name = "downstreamOpen"];</code>
   */
  @java.lang.Override
  public com.github.aptpod.proto.iscp2.v1.DownstreamOpenOrBuilder getDownstreamOpenOrBuilder() {
    if (metadataCase_ == 7) {
       return (com.github.aptpod.proto.iscp2.v1.DownstreamOpen) metadata_;
    }
    return com.github.aptpod.proto.iscp2.v1.DownstreamOpen.getDefaultInstance();
  }

  public static final int DOWNSTREAM_ABNORMAL_CLOSE_FIELD_NUMBER = 8;
  /**
   * <code>.iscp2.v1.DownstreamAbnormalClose downstream_abnormal_close = 8 [json_name = "downstreamAbnormalClose"];</code>
   * @return Whether the downstreamAbnormalClose field is set.
   */
  @java.lang.Override
  public boolean hasDownstreamAbnormalClose() {
    return metadataCase_ == 8;
  }
  /**
   * <code>.iscp2.v1.DownstreamAbnormalClose downstream_abnormal_close = 8 [json_name = "downstreamAbnormalClose"];</code>
   * @return The downstreamAbnormalClose.
   */
  @java.lang.Override
  public com.github.aptpod.proto.iscp2.v1.DownstreamAbnormalClose getDownstreamAbnormalClose() {
    if (metadataCase_ == 8) {
       return (com.github.aptpod.proto.iscp2.v1.DownstreamAbnormalClose) metadata_;
    }
    return com.github.aptpod.proto.iscp2.v1.DownstreamAbnormalClose.getDefaultInstance();
  }
  /**
   * <code>.iscp2.v1.DownstreamAbnormalClose downstream_abnormal_close = 8 [json_name = "downstreamAbnormalClose"];</code>
   */
  @java.lang.Override
  public com.github.aptpod.proto.iscp2.v1.DownstreamAbnormalCloseOrBuilder getDownstreamAbnormalCloseOrBuilder() {
    if (metadataCase_ == 8) {
       return (com.github.aptpod.proto.iscp2.v1.DownstreamAbnormalClose) metadata_;
    }
    return com.github.aptpod.proto.iscp2.v1.DownstreamAbnormalClose.getDefaultInstance();
  }

  public static final int DOWNSTREAM_RESUME_FIELD_NUMBER = 9;
  /**
   * <code>.iscp2.v1.DownstreamResume downstream_resume = 9 [json_name = "downstreamResume"];</code>
   * @return Whether the downstreamResume field is set.
   */
  @java.lang.Override
  public boolean hasDownstreamResume() {
    return metadataCase_ == 9;
  }
  /**
   * <code>.iscp2.v1.DownstreamResume downstream_resume = 9 [json_name = "downstreamResume"];</code>
   * @return The downstreamResume.
   */
  @java.lang.Override
  public com.github.aptpod.proto.iscp2.v1.DownstreamResume getDownstreamResume() {
    if (metadataCase_ == 9) {
       return (com.github.aptpod.proto.iscp2.v1.DownstreamResume) metadata_;
    }
    return com.github.aptpod.proto.iscp2.v1.DownstreamResume.getDefaultInstance();
  }
  /**
   * <code>.iscp2.v1.DownstreamResume downstream_resume = 9 [json_name = "downstreamResume"];</code>
   */
  @java.lang.Override
  public com.github.aptpod.proto.iscp2.v1.DownstreamResumeOrBuilder getDownstreamResumeOrBuilder() {
    if (metadataCase_ == 9) {
       return (com.github.aptpod.proto.iscp2.v1.DownstreamResume) metadata_;
    }
    return com.github.aptpod.proto.iscp2.v1.DownstreamResume.getDefaultInstance();
  }

  public static final int DOWNSTREAM_NORMAL_CLOSE_FIELD_NUMBER = 10;
  /**
   * <code>.iscp2.v1.DownstreamNormalClose downstream_normal_close = 10 [json_name = "downstreamNormalClose"];</code>
   * @return Whether the downstreamNormalClose field is set.
   */
  @java.lang.Override
  public boolean hasDownstreamNormalClose() {
    return metadataCase_ == 10;
  }
  /**
   * <code>.iscp2.v1.DownstreamNormalClose downstream_normal_close = 10 [json_name = "downstreamNormalClose"];</code>
   * @return The downstreamNormalClose.
   */
  @java.lang.Override
  public com.github.aptpod.proto.iscp2.v1.DownstreamNormalClose getDownstreamNormalClose() {
    if (metadataCase_ == 10) {
       return (com.github.aptpod.proto.iscp2.v1.DownstreamNormalClose) metadata_;
    }
    return com.github.aptpod.proto.iscp2.v1.DownstreamNormalClose.getDefaultInstance();
  }
  /**
   * <code>.iscp2.v1.DownstreamNormalClose downstream_normal_close = 10 [json_name = "downstreamNormalClose"];</code>
   */
  @java.lang.Override
  public com.github.aptpod.proto.iscp2.v1.DownstreamNormalCloseOrBuilder getDownstreamNormalCloseOrBuilder() {
    if (metadataCase_ == 10) {
       return (com.github.aptpod.proto.iscp2.v1.DownstreamNormalClose) metadata_;
    }
    return com.github.aptpod.proto.iscp2.v1.DownstreamNormalClose.getDefaultInstance();
  }

  public static final int SOURCE_NODE_ID_FIELD_NUMBER = 11;
  @SuppressWarnings("serial")
  private volatile java.lang.Object sourceNodeId_ = "";
  /**
   * <code>string source_node_id = 11 [json_name = "sourceNodeId"];</code>
   * @return The sourceNodeId.
   */
  @java.lang.Override
  public java.lang.String getSourceNodeId() {
    java.lang.Object ref = sourceNodeId_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      sourceNodeId_ = s;
      return s;
    }
  }
  /**
   * <code>string source_node_id = 11 [json_name = "sourceNodeId"];</code>
   * @return The bytes for sourceNodeId.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getSourceNodeIdBytes() {
    java.lang.Object ref = sourceNodeId_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      sourceNodeId_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int EXTENSION_FIELDS_FIELD_NUMBER = 12;
  private com.github.aptpod.proto.iscp2.v1.extensions.DownstreamMetadataExtensionFields extensionFields_;
  /**
   * <code>.iscp2.v1.extensions.DownstreamMetadataExtensionFields extension_fields = 12 [json_name = "extensionFields"];</code>
   * @return Whether the extensionFields field is set.
   */
  @java.lang.Override
  public boolean hasExtensionFields() {
    return extensionFields_ != null;
  }
  /**
   * <code>.iscp2.v1.extensions.DownstreamMetadataExtensionFields extension_fields = 12 [json_name = "extensionFields"];</code>
   * @return The extensionFields.
   */
  @java.lang.Override
  public com.github.aptpod.proto.iscp2.v1.extensions.DownstreamMetadataExtensionFields getExtensionFields() {
    return extensionFields_ == null ? com.github.aptpod.proto.iscp2.v1.extensions.DownstreamMetadataExtensionFields.getDefaultInstance() : extensionFields_;
  }
  /**
   * <code>.iscp2.v1.extensions.DownstreamMetadataExtensionFields extension_fields = 12 [json_name = "extensionFields"];</code>
   */
  @java.lang.Override
  public com.github.aptpod.proto.iscp2.v1.extensions.DownstreamMetadataExtensionFieldsOrBuilder getExtensionFieldsOrBuilder() {
    return extensionFields_ == null ? com.github.aptpod.proto.iscp2.v1.extensions.DownstreamMetadataExtensionFields.getDefaultInstance() : extensionFields_;
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (requestId_ != 0) {
      output.writeUInt32(1, requestId_);
    }
    if (metadataCase_ == 2) {
      output.writeMessage(2, (com.github.aptpod.proto.iscp2.v1.BaseTime) metadata_);
    }
    if (metadataCase_ == 3) {
      output.writeMessage(3, (com.github.aptpod.proto.iscp2.v1.UpstreamOpen) metadata_);
    }
    if (metadataCase_ == 4) {
      output.writeMessage(4, (com.github.aptpod.proto.iscp2.v1.UpstreamAbnormalClose) metadata_);
    }
    if (metadataCase_ == 5) {
      output.writeMessage(5, (com.github.aptpod.proto.iscp2.v1.UpstreamResume) metadata_);
    }
    if (metadataCase_ == 6) {
      output.writeMessage(6, (com.github.aptpod.proto.iscp2.v1.UpstreamNormalClose) metadata_);
    }
    if (metadataCase_ == 7) {
      output.writeMessage(7, (com.github.aptpod.proto.iscp2.v1.DownstreamOpen) metadata_);
    }
    if (metadataCase_ == 8) {
      output.writeMessage(8, (com.github.aptpod.proto.iscp2.v1.DownstreamAbnormalClose) metadata_);
    }
    if (metadataCase_ == 9) {
      output.writeMessage(9, (com.github.aptpod.proto.iscp2.v1.DownstreamResume) metadata_);
    }
    if (metadataCase_ == 10) {
      output.writeMessage(10, (com.github.aptpod.proto.iscp2.v1.DownstreamNormalClose) metadata_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(sourceNodeId_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 11, sourceNodeId_);
    }
    if (extensionFields_ != null) {
      output.writeMessage(12, getExtensionFields());
    }
    if (streamIdAlias_ != 0) {
      output.writeUInt32(13, streamIdAlias_);
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (requestId_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt32Size(1, requestId_);
    }
    if (metadataCase_ == 2) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, (com.github.aptpod.proto.iscp2.v1.BaseTime) metadata_);
    }
    if (metadataCase_ == 3) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(3, (com.github.aptpod.proto.iscp2.v1.UpstreamOpen) metadata_);
    }
    if (metadataCase_ == 4) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(4, (com.github.aptpod.proto.iscp2.v1.UpstreamAbnormalClose) metadata_);
    }
    if (metadataCase_ == 5) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(5, (com.github.aptpod.proto.iscp2.v1.UpstreamResume) metadata_);
    }
    if (metadataCase_ == 6) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(6, (com.github.aptpod.proto.iscp2.v1.UpstreamNormalClose) metadata_);
    }
    if (metadataCase_ == 7) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(7, (com.github.aptpod.proto.iscp2.v1.DownstreamOpen) metadata_);
    }
    if (metadataCase_ == 8) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(8, (com.github.aptpod.proto.iscp2.v1.DownstreamAbnormalClose) metadata_);
    }
    if (metadataCase_ == 9) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(9, (com.github.aptpod.proto.iscp2.v1.DownstreamResume) metadata_);
    }
    if (metadataCase_ == 10) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(10, (com.github.aptpod.proto.iscp2.v1.DownstreamNormalClose) metadata_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(sourceNodeId_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(11, sourceNodeId_);
    }
    if (extensionFields_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(12, getExtensionFields());
    }
    if (streamIdAlias_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt32Size(13, streamIdAlias_);
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.github.aptpod.proto.iscp2.v1.DownstreamMetadata)) {
      return super.equals(obj);
    }
    com.github.aptpod.proto.iscp2.v1.DownstreamMetadata other = (com.github.aptpod.proto.iscp2.v1.DownstreamMetadata) obj;

    if (getRequestId()
        != other.getRequestId()) return false;
    if (getStreamIdAlias()
        != other.getStreamIdAlias()) return false;
    if (!getSourceNodeId()
        .equals(other.getSourceNodeId())) return false;
    if (hasExtensionFields() != other.hasExtensionFields()) return false;
    if (hasExtensionFields()) {
      if (!getExtensionFields()
          .equals(other.getExtensionFields())) return false;
    }
    if (!getMetadataCase().equals(other.getMetadataCase())) return false;
    switch (metadataCase_) {
      case 2:
        if (!getBaseTime()
            .equals(other.getBaseTime())) return false;
        break;
      case 3:
        if (!getUpstreamOpen()
            .equals(other.getUpstreamOpen())) return false;
        break;
      case 4:
        if (!getUpstreamAbnormalClose()
            .equals(other.getUpstreamAbnormalClose())) return false;
        break;
      case 5:
        if (!getUpstreamResume()
            .equals(other.getUpstreamResume())) return false;
        break;
      case 6:
        if (!getUpstreamNormalClose()
            .equals(other.getUpstreamNormalClose())) return false;
        break;
      case 7:
        if (!getDownstreamOpen()
            .equals(other.getDownstreamOpen())) return false;
        break;
      case 8:
        if (!getDownstreamAbnormalClose()
            .equals(other.getDownstreamAbnormalClose())) return false;
        break;
      case 9:
        if (!getDownstreamResume()
            .equals(other.getDownstreamResume())) return false;
        break;
      case 10:
        if (!getDownstreamNormalClose()
            .equals(other.getDownstreamNormalClose())) return false;
        break;
      case 0:
      default:
    }
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + REQUEST_ID_FIELD_NUMBER;
    hash = (53 * hash) + getRequestId();
    hash = (37 * hash) + STREAM_ID_ALIAS_FIELD_NUMBER;
    hash = (53 * hash) + getStreamIdAlias();
    hash = (37 * hash) + SOURCE_NODE_ID_FIELD_NUMBER;
    hash = (53 * hash) + getSourceNodeId().hashCode();
    if (hasExtensionFields()) {
      hash = (37 * hash) + EXTENSION_FIELDS_FIELD_NUMBER;
      hash = (53 * hash) + getExtensionFields().hashCode();
    }
    switch (metadataCase_) {
      case 2:
        hash = (37 * hash) + BASE_TIME_FIELD_NUMBER;
        hash = (53 * hash) + getBaseTime().hashCode();
        break;
      case 3:
        hash = (37 * hash) + UPSTREAM_OPEN_FIELD_NUMBER;
        hash = (53 * hash) + getUpstreamOpen().hashCode();
        break;
      case 4:
        hash = (37 * hash) + UPSTREAM_ABNORMAL_CLOSE_FIELD_NUMBER;
        hash = (53 * hash) + getUpstreamAbnormalClose().hashCode();
        break;
      case 5:
        hash = (37 * hash) + UPSTREAM_RESUME_FIELD_NUMBER;
        hash = (53 * hash) + getUpstreamResume().hashCode();
        break;
      case 6:
        hash = (37 * hash) + UPSTREAM_NORMAL_CLOSE_FIELD_NUMBER;
        hash = (53 * hash) + getUpstreamNormalClose().hashCode();
        break;
      case 7:
        hash = (37 * hash) + DOWNSTREAM_OPEN_FIELD_NUMBER;
        hash = (53 * hash) + getDownstreamOpen().hashCode();
        break;
      case 8:
        hash = (37 * hash) + DOWNSTREAM_ABNORMAL_CLOSE_FIELD_NUMBER;
        hash = (53 * hash) + getDownstreamAbnormalClose().hashCode();
        break;
      case 9:
        hash = (37 * hash) + DOWNSTREAM_RESUME_FIELD_NUMBER;
        hash = (53 * hash) + getDownstreamResume().hashCode();
        break;
      case 10:
        hash = (37 * hash) + DOWNSTREAM_NORMAL_CLOSE_FIELD_NUMBER;
        hash = (53 * hash) + getDownstreamNormalClose().hashCode();
        break;
      case 0:
      default:
    }
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.github.aptpod.proto.iscp2.v1.DownstreamMetadata parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.github.aptpod.proto.iscp2.v1.DownstreamMetadata parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.github.aptpod.proto.iscp2.v1.DownstreamMetadata parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.github.aptpod.proto.iscp2.v1.DownstreamMetadata parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.github.aptpod.proto.iscp2.v1.DownstreamMetadata parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.github.aptpod.proto.iscp2.v1.DownstreamMetadata parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.github.aptpod.proto.iscp2.v1.DownstreamMetadata parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.github.aptpod.proto.iscp2.v1.DownstreamMetadata parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public static com.github.aptpod.proto.iscp2.v1.DownstreamMetadata parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }

  public static com.github.aptpod.proto.iscp2.v1.DownstreamMetadata parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.github.aptpod.proto.iscp2.v1.DownstreamMetadata parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.github.aptpod.proto.iscp2.v1.DownstreamMetadata parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.github.aptpod.proto.iscp2.v1.DownstreamMetadata prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code iscp2.v1.DownstreamMetadata}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:iscp2.v1.DownstreamMetadata)
      com.github.aptpod.proto.iscp2.v1.DownstreamMetadataOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.github.aptpod.proto.iscp2.v1.DownstreamProto.internal_static_iscp2_v1_DownstreamMetadata_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.github.aptpod.proto.iscp2.v1.DownstreamProto.internal_static_iscp2_v1_DownstreamMetadata_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.github.aptpod.proto.iscp2.v1.DownstreamMetadata.class, com.github.aptpod.proto.iscp2.v1.DownstreamMetadata.Builder.class);
    }

    // Construct using com.github.aptpod.proto.iscp2.v1.DownstreamMetadata.newBuilder()
    private Builder() {

    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);

    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      requestId_ = 0;
      streamIdAlias_ = 0;
      if (baseTimeBuilder_ != null) {
        baseTimeBuilder_.clear();
      }
      if (upstreamOpenBuilder_ != null) {
        upstreamOpenBuilder_.clear();
      }
      if (upstreamAbnormalCloseBuilder_ != null) {
        upstreamAbnormalCloseBuilder_.clear();
      }
      if (upstreamResumeBuilder_ != null) {
        upstreamResumeBuilder_.clear();
      }
      if (upstreamNormalCloseBuilder_ != null) {
        upstreamNormalCloseBuilder_.clear();
      }
      if (downstreamOpenBuilder_ != null) {
        downstreamOpenBuilder_.clear();
      }
      if (downstreamAbnormalCloseBuilder_ != null) {
        downstreamAbnormalCloseBuilder_.clear();
      }
      if (downstreamResumeBuilder_ != null) {
        downstreamResumeBuilder_.clear();
      }
      if (downstreamNormalCloseBuilder_ != null) {
        downstreamNormalCloseBuilder_.clear();
      }
      sourceNodeId_ = "";
      extensionFields_ = null;
      if (extensionFieldsBuilder_ != null) {
        extensionFieldsBuilder_.dispose();
        extensionFieldsBuilder_ = null;
      }
      metadataCase_ = 0;
      metadata_ = null;
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.github.aptpod.proto.iscp2.v1.DownstreamProto.internal_static_iscp2_v1_DownstreamMetadata_descriptor;
    }

    @java.lang.Override
    public com.github.aptpod.proto.iscp2.v1.DownstreamMetadata getDefaultInstanceForType() {
      return com.github.aptpod.proto.iscp2.v1.DownstreamMetadata.getDefaultInstance();
    }

    @java.lang.Override
    public com.github.aptpod.proto.iscp2.v1.DownstreamMetadata build() {
      com.github.aptpod.proto.iscp2.v1.DownstreamMetadata result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.github.aptpod.proto.iscp2.v1.DownstreamMetadata buildPartial() {
      com.github.aptpod.proto.iscp2.v1.DownstreamMetadata result = new com.github.aptpod.proto.iscp2.v1.DownstreamMetadata(this);
      if (bitField0_ != 0) { buildPartial0(result); }
      buildPartialOneofs(result);
      onBuilt();
      return result;
    }

    private void buildPartial0(com.github.aptpod.proto.iscp2.v1.DownstreamMetadata result) {
      int from_bitField0_ = bitField0_;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        result.requestId_ = requestId_;
      }
      if (((from_bitField0_ & 0x00000002) != 0)) {
        result.streamIdAlias_ = streamIdAlias_;
      }
      if (((from_bitField0_ & 0x00000800) != 0)) {
        result.sourceNodeId_ = sourceNodeId_;
      }
      if (((from_bitField0_ & 0x00001000) != 0)) {
        result.extensionFields_ = extensionFieldsBuilder_ == null
            ? extensionFields_
            : extensionFieldsBuilder_.build();
      }
    }

    private void buildPartialOneofs(com.github.aptpod.proto.iscp2.v1.DownstreamMetadata result) {
      result.metadataCase_ = metadataCase_;
      result.metadata_ = this.metadata_;
      if (metadataCase_ == 2 &&
          baseTimeBuilder_ != null) {
        result.metadata_ = baseTimeBuilder_.build();
      }
      if (metadataCase_ == 3 &&
          upstreamOpenBuilder_ != null) {
        result.metadata_ = upstreamOpenBuilder_.build();
      }
      if (metadataCase_ == 4 &&
          upstreamAbnormalCloseBuilder_ != null) {
        result.metadata_ = upstreamAbnormalCloseBuilder_.build();
      }
      if (metadataCase_ == 5 &&
          upstreamResumeBuilder_ != null) {
        result.metadata_ = upstreamResumeBuilder_.build();
      }
      if (metadataCase_ == 6 &&
          upstreamNormalCloseBuilder_ != null) {
        result.metadata_ = upstreamNormalCloseBuilder_.build();
      }
      if (metadataCase_ == 7 &&
          downstreamOpenBuilder_ != null) {
        result.metadata_ = downstreamOpenBuilder_.build();
      }
      if (metadataCase_ == 8 &&
          downstreamAbnormalCloseBuilder_ != null) {
        result.metadata_ = downstreamAbnormalCloseBuilder_.build();
      }
      if (metadataCase_ == 9 &&
          downstreamResumeBuilder_ != null) {
        result.metadata_ = downstreamResumeBuilder_.build();
      }
      if (metadataCase_ == 10 &&
          downstreamNormalCloseBuilder_ != null) {
        result.metadata_ = downstreamNormalCloseBuilder_.build();
      }
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.github.aptpod.proto.iscp2.v1.DownstreamMetadata) {
        return mergeFrom((com.github.aptpod.proto.iscp2.v1.DownstreamMetadata)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.github.aptpod.proto.iscp2.v1.DownstreamMetadata other) {
      if (other == com.github.aptpod.proto.iscp2.v1.DownstreamMetadata.getDefaultInstance()) return this;
      if (other.getRequestId() != 0) {
        setRequestId(other.getRequestId());
      }
      if (other.getStreamIdAlias() != 0) {
        setStreamIdAlias(other.getStreamIdAlias());
      }
      if (!other.getSourceNodeId().isEmpty()) {
        sourceNodeId_ = other.sourceNodeId_;
        bitField0_ |= 0x00000800;
        onChanged();
      }
      if (other.hasExtensionFields()) {
        mergeExtensionFields(other.getExtensionFields());
      }
      switch (other.getMetadataCase()) {
        case BASE_TIME: {
          mergeBaseTime(other.getBaseTime());
          break;
        }
        case UPSTREAM_OPEN: {
          mergeUpstreamOpen(other.getUpstreamOpen());
          break;
        }
        case UPSTREAM_ABNORMAL_CLOSE: {
          mergeUpstreamAbnormalClose(other.getUpstreamAbnormalClose());
          break;
        }
        case UPSTREAM_RESUME: {
          mergeUpstreamResume(other.getUpstreamResume());
          break;
        }
        case UPSTREAM_NORMAL_CLOSE: {
          mergeUpstreamNormalClose(other.getUpstreamNormalClose());
          break;
        }
        case DOWNSTREAM_OPEN: {
          mergeDownstreamOpen(other.getDownstreamOpen());
          break;
        }
        case DOWNSTREAM_ABNORMAL_CLOSE: {
          mergeDownstreamAbnormalClose(other.getDownstreamAbnormalClose());
          break;
        }
        case DOWNSTREAM_RESUME: {
          mergeDownstreamResume(other.getDownstreamResume());
          break;
        }
        case DOWNSTREAM_NORMAL_CLOSE: {
          mergeDownstreamNormalClose(other.getDownstreamNormalClose());
          break;
        }
        case METADATA_NOT_SET: {
          break;
        }
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {
              requestId_ = input.readUInt32();
              bitField0_ |= 0x00000001;
              break;
            } // case 8
            case 18: {
              input.readMessage(
                  getBaseTimeFieldBuilder().getBuilder(),
                  extensionRegistry);
              metadataCase_ = 2;
              break;
            } // case 18
            case 26: {
              input.readMessage(
                  getUpstreamOpenFieldBuilder().getBuilder(),
                  extensionRegistry);
              metadataCase_ = 3;
              break;
            } // case 26
            case 34: {
              input.readMessage(
                  getUpstreamAbnormalCloseFieldBuilder().getBuilder(),
                  extensionRegistry);
              metadataCase_ = 4;
              break;
            } // case 34
            case 42: {
              input.readMessage(
                  getUpstreamResumeFieldBuilder().getBuilder(),
                  extensionRegistry);
              metadataCase_ = 5;
              break;
            } // case 42
            case 50: {
              input.readMessage(
                  getUpstreamNormalCloseFieldBuilder().getBuilder(),
                  extensionRegistry);
              metadataCase_ = 6;
              break;
            } // case 50
            case 58: {
              input.readMessage(
                  getDownstreamOpenFieldBuilder().getBuilder(),
                  extensionRegistry);
              metadataCase_ = 7;
              break;
            } // case 58
            case 66: {
              input.readMessage(
                  getDownstreamAbnormalCloseFieldBuilder().getBuilder(),
                  extensionRegistry);
              metadataCase_ = 8;
              break;
            } // case 66
            case 74: {
              input.readMessage(
                  getDownstreamResumeFieldBuilder().getBuilder(),
                  extensionRegistry);
              metadataCase_ = 9;
              break;
            } // case 74
            case 82: {
              input.readMessage(
                  getDownstreamNormalCloseFieldBuilder().getBuilder(),
                  extensionRegistry);
              metadataCase_ = 10;
              break;
            } // case 82
            case 90: {
              sourceNodeId_ = input.readStringRequireUtf8();
              bitField0_ |= 0x00000800;
              break;
            } // case 90
            case 98: {
              input.readMessage(
                  getExtensionFieldsFieldBuilder().getBuilder(),
                  extensionRegistry);
              bitField0_ |= 0x00001000;
              break;
            } // case 98
            case 104: {
              streamIdAlias_ = input.readUInt32();
              bitField0_ |= 0x00000002;
              break;
            } // case 104
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int metadataCase_ = 0;
    private java.lang.Object metadata_;
    public MetadataCase
        getMetadataCase() {
      return MetadataCase.forNumber(
          metadataCase_);
    }

    public Builder clearMetadata() {
      metadataCase_ = 0;
      metadata_ = null;
      onChanged();
      return this;
    }

    private int bitField0_;

    private int requestId_ ;
    /**
     * <code>uint32 request_id = 1 [json_name = "requestId"];</code>
     * @return The requestId.
     */
    @java.lang.Override
    public int getRequestId() {
      return requestId_;
    }
    /**
     * <code>uint32 request_id = 1 [json_name = "requestId"];</code>
     * @param value The requestId to set.
     * @return This builder for chaining.
     */
    public Builder setRequestId(int value) {

      requestId_ = value;
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <code>uint32 request_id = 1 [json_name = "requestId"];</code>
     * @return This builder for chaining.
     */
    public Builder clearRequestId() {
      bitField0_ = (bitField0_ & ~0x00000001);
      requestId_ = 0;
      onChanged();
      return this;
    }

    private int streamIdAlias_ ;
    /**
     * <code>uint32 stream_id_alias = 13 [json_name = "streamIdAlias"];</code>
     * @return The streamIdAlias.
     */
    @java.lang.Override
    public int getStreamIdAlias() {
      return streamIdAlias_;
    }
    /**
     * <code>uint32 stream_id_alias = 13 [json_name = "streamIdAlias"];</code>
     * @param value The streamIdAlias to set.
     * @return This builder for chaining.
     */
    public Builder setStreamIdAlias(int value) {

      streamIdAlias_ = value;
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }
    /**
     * <code>uint32 stream_id_alias = 13 [json_name = "streamIdAlias"];</code>
     * @return This builder for chaining.
     */
    public Builder clearStreamIdAlias() {
      bitField0_ = (bitField0_ & ~0x00000002);
      streamIdAlias_ = 0;
      onChanged();
      return this;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        com.github.aptpod.proto.iscp2.v1.BaseTime, com.github.aptpod.proto.iscp2.v1.BaseTime.Builder, com.github.aptpod.proto.iscp2.v1.BaseTimeOrBuilder> baseTimeBuilder_;
    /**
     * <code>.iscp2.v1.BaseTime base_time = 2 [json_name = "baseTime"];</code>
     * @return Whether the baseTime field is set.
     */
    @java.lang.Override
    public boolean hasBaseTime() {
      return metadataCase_ == 2;
    }
    /**
     * <code>.iscp2.v1.BaseTime base_time = 2 [json_name = "baseTime"];</code>
     * @return The baseTime.
     */
    @java.lang.Override
    public com.github.aptpod.proto.iscp2.v1.BaseTime getBaseTime() {
      if (baseTimeBuilder_ == null) {
        if (metadataCase_ == 2) {
          return (com.github.aptpod.proto.iscp2.v1.BaseTime) metadata_;
        }
        return com.github.aptpod.proto.iscp2.v1.BaseTime.getDefaultInstance();
      } else {
        if (metadataCase_ == 2) {
          return baseTimeBuilder_.getMessage();
        }
        return com.github.aptpod.proto.iscp2.v1.BaseTime.getDefaultInstance();
      }
    }
    /**
     * <code>.iscp2.v1.BaseTime base_time = 2 [json_name = "baseTime"];</code>
     */
    public Builder setBaseTime(com.github.aptpod.proto.iscp2.v1.BaseTime value) {
      if (baseTimeBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        metadata_ = value;
        onChanged();
      } else {
        baseTimeBuilder_.setMessage(value);
      }
      metadataCase_ = 2;
      return this;
    }
    /**
     * <code>.iscp2.v1.BaseTime base_time = 2 [json_name = "baseTime"];</code>
     */
    public Builder setBaseTime(
        com.github.aptpod.proto.iscp2.v1.BaseTime.Builder builderForValue) {
      if (baseTimeBuilder_ == null) {
        metadata_ = builderForValue.build();
        onChanged();
      } else {
        baseTimeBuilder_.setMessage(builderForValue.build());
      }
      metadataCase_ = 2;
      return this;
    }
    /**
     * <code>.iscp2.v1.BaseTime base_time = 2 [json_name = "baseTime"];</code>
     */
    public Builder mergeBaseTime(com.github.aptpod.proto.iscp2.v1.BaseTime value) {
      if (baseTimeBuilder_ == null) {
        if (metadataCase_ == 2 &&
            metadata_ != com.github.aptpod.proto.iscp2.v1.BaseTime.getDefaultInstance()) {
          metadata_ = com.github.aptpod.proto.iscp2.v1.BaseTime.newBuilder((com.github.aptpod.proto.iscp2.v1.BaseTime) metadata_)
              .mergeFrom(value).buildPartial();
        } else {
          metadata_ = value;
        }
        onChanged();
      } else {
        if (metadataCase_ == 2) {
          baseTimeBuilder_.mergeFrom(value);
        } else {
          baseTimeBuilder_.setMessage(value);
        }
      }
      metadataCase_ = 2;
      return this;
    }
    /**
     * <code>.iscp2.v1.BaseTime base_time = 2 [json_name = "baseTime"];</code>
     */
    public Builder clearBaseTime() {
      if (baseTimeBuilder_ == null) {
        if (metadataCase_ == 2) {
          metadataCase_ = 0;
          metadata_ = null;
          onChanged();
        }
      } else {
        if (metadataCase_ == 2) {
          metadataCase_ = 0;
          metadata_ = null;
        }
        baseTimeBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>.iscp2.v1.BaseTime base_time = 2 [json_name = "baseTime"];</code>
     */
    public com.github.aptpod.proto.iscp2.v1.BaseTime.Builder getBaseTimeBuilder() {
      return getBaseTimeFieldBuilder().getBuilder();
    }
    /**
     * <code>.iscp2.v1.BaseTime base_time = 2 [json_name = "baseTime"];</code>
     */
    @java.lang.Override
    public com.github.aptpod.proto.iscp2.v1.BaseTimeOrBuilder getBaseTimeOrBuilder() {
      if ((metadataCase_ == 2) && (baseTimeBuilder_ != null)) {
        return baseTimeBuilder_.getMessageOrBuilder();
      } else {
        if (metadataCase_ == 2) {
          return (com.github.aptpod.proto.iscp2.v1.BaseTime) metadata_;
        }
        return com.github.aptpod.proto.iscp2.v1.BaseTime.getDefaultInstance();
      }
    }
    /**
     * <code>.iscp2.v1.BaseTime base_time = 2 [json_name = "baseTime"];</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.github.aptpod.proto.iscp2.v1.BaseTime, com.github.aptpod.proto.iscp2.v1.BaseTime.Builder, com.github.aptpod.proto.iscp2.v1.BaseTimeOrBuilder> 
        getBaseTimeFieldBuilder() {
      if (baseTimeBuilder_ == null) {
        if (!(metadataCase_ == 2)) {
          metadata_ = com.github.aptpod.proto.iscp2.v1.BaseTime.getDefaultInstance();
        }
        baseTimeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.github.aptpod.proto.iscp2.v1.BaseTime, com.github.aptpod.proto.iscp2.v1.BaseTime.Builder, com.github.aptpod.proto.iscp2.v1.BaseTimeOrBuilder>(
                (com.github.aptpod.proto.iscp2.v1.BaseTime) metadata_,
                getParentForChildren(),
                isClean());
        metadata_ = null;
      }
      metadataCase_ = 2;
      onChanged();
      return baseTimeBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        com.github.aptpod.proto.iscp2.v1.UpstreamOpen, com.github.aptpod.proto.iscp2.v1.UpstreamOpen.Builder, com.github.aptpod.proto.iscp2.v1.UpstreamOpenOrBuilder> upstreamOpenBuilder_;
    /**
     * <code>.iscp2.v1.UpstreamOpen upstream_open = 3 [json_name = "upstreamOpen"];</code>
     * @return Whether the upstreamOpen field is set.
     */
    @java.lang.Override
    public boolean hasUpstreamOpen() {
      return metadataCase_ == 3;
    }
    /**
     * <code>.iscp2.v1.UpstreamOpen upstream_open = 3 [json_name = "upstreamOpen"];</code>
     * @return The upstreamOpen.
     */
    @java.lang.Override
    public com.github.aptpod.proto.iscp2.v1.UpstreamOpen getUpstreamOpen() {
      if (upstreamOpenBuilder_ == null) {
        if (metadataCase_ == 3) {
          return (com.github.aptpod.proto.iscp2.v1.UpstreamOpen) metadata_;
        }
        return com.github.aptpod.proto.iscp2.v1.UpstreamOpen.getDefaultInstance();
      } else {
        if (metadataCase_ == 3) {
          return upstreamOpenBuilder_.getMessage();
        }
        return com.github.aptpod.proto.iscp2.v1.UpstreamOpen.getDefaultInstance();
      }
    }
    /**
     * <code>.iscp2.v1.UpstreamOpen upstream_open = 3 [json_name = "upstreamOpen"];</code>
     */
    public Builder setUpstreamOpen(com.github.aptpod.proto.iscp2.v1.UpstreamOpen value) {
      if (upstreamOpenBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        metadata_ = value;
        onChanged();
      } else {
        upstreamOpenBuilder_.setMessage(value);
      }
      metadataCase_ = 3;
      return this;
    }
    /**
     * <code>.iscp2.v1.UpstreamOpen upstream_open = 3 [json_name = "upstreamOpen"];</code>
     */
    public Builder setUpstreamOpen(
        com.github.aptpod.proto.iscp2.v1.UpstreamOpen.Builder builderForValue) {
      if (upstreamOpenBuilder_ == null) {
        metadata_ = builderForValue.build();
        onChanged();
      } else {
        upstreamOpenBuilder_.setMessage(builderForValue.build());
      }
      metadataCase_ = 3;
      return this;
    }
    /**
     * <code>.iscp2.v1.UpstreamOpen upstream_open = 3 [json_name = "upstreamOpen"];</code>
     */
    public Builder mergeUpstreamOpen(com.github.aptpod.proto.iscp2.v1.UpstreamOpen value) {
      if (upstreamOpenBuilder_ == null) {
        if (metadataCase_ == 3 &&
            metadata_ != com.github.aptpod.proto.iscp2.v1.UpstreamOpen.getDefaultInstance()) {
          metadata_ = com.github.aptpod.proto.iscp2.v1.UpstreamOpen.newBuilder((com.github.aptpod.proto.iscp2.v1.UpstreamOpen) metadata_)
              .mergeFrom(value).buildPartial();
        } else {
          metadata_ = value;
        }
        onChanged();
      } else {
        if (metadataCase_ == 3) {
          upstreamOpenBuilder_.mergeFrom(value);
        } else {
          upstreamOpenBuilder_.setMessage(value);
        }
      }
      metadataCase_ = 3;
      return this;
    }
    /**
     * <code>.iscp2.v1.UpstreamOpen upstream_open = 3 [json_name = "upstreamOpen"];</code>
     */
    public Builder clearUpstreamOpen() {
      if (upstreamOpenBuilder_ == null) {
        if (metadataCase_ == 3) {
          metadataCase_ = 0;
          metadata_ = null;
          onChanged();
        }
      } else {
        if (metadataCase_ == 3) {
          metadataCase_ = 0;
          metadata_ = null;
        }
        upstreamOpenBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>.iscp2.v1.UpstreamOpen upstream_open = 3 [json_name = "upstreamOpen"];</code>
     */
    public com.github.aptpod.proto.iscp2.v1.UpstreamOpen.Builder getUpstreamOpenBuilder() {
      return getUpstreamOpenFieldBuilder().getBuilder();
    }
    /**
     * <code>.iscp2.v1.UpstreamOpen upstream_open = 3 [json_name = "upstreamOpen"];</code>
     */
    @java.lang.Override
    public com.github.aptpod.proto.iscp2.v1.UpstreamOpenOrBuilder getUpstreamOpenOrBuilder() {
      if ((metadataCase_ == 3) && (upstreamOpenBuilder_ != null)) {
        return upstreamOpenBuilder_.getMessageOrBuilder();
      } else {
        if (metadataCase_ == 3) {
          return (com.github.aptpod.proto.iscp2.v1.UpstreamOpen) metadata_;
        }
        return com.github.aptpod.proto.iscp2.v1.UpstreamOpen.getDefaultInstance();
      }
    }
    /**
     * <code>.iscp2.v1.UpstreamOpen upstream_open = 3 [json_name = "upstreamOpen"];</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.github.aptpod.proto.iscp2.v1.UpstreamOpen, com.github.aptpod.proto.iscp2.v1.UpstreamOpen.Builder, com.github.aptpod.proto.iscp2.v1.UpstreamOpenOrBuilder> 
        getUpstreamOpenFieldBuilder() {
      if (upstreamOpenBuilder_ == null) {
        if (!(metadataCase_ == 3)) {
          metadata_ = com.github.aptpod.proto.iscp2.v1.UpstreamOpen.getDefaultInstance();
        }
        upstreamOpenBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.github.aptpod.proto.iscp2.v1.UpstreamOpen, com.github.aptpod.proto.iscp2.v1.UpstreamOpen.Builder, com.github.aptpod.proto.iscp2.v1.UpstreamOpenOrBuilder>(
                (com.github.aptpod.proto.iscp2.v1.UpstreamOpen) metadata_,
                getParentForChildren(),
                isClean());
        metadata_ = null;
      }
      metadataCase_ = 3;
      onChanged();
      return upstreamOpenBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        com.github.aptpod.proto.iscp2.v1.UpstreamAbnormalClose, com.github.aptpod.proto.iscp2.v1.UpstreamAbnormalClose.Builder, com.github.aptpod.proto.iscp2.v1.UpstreamAbnormalCloseOrBuilder> upstreamAbnormalCloseBuilder_;
    /**
     * <code>.iscp2.v1.UpstreamAbnormalClose upstream_abnormal_close = 4 [json_name = "upstreamAbnormalClose"];</code>
     * @return Whether the upstreamAbnormalClose field is set.
     */
    @java.lang.Override
    public boolean hasUpstreamAbnormalClose() {
      return metadataCase_ == 4;
    }
    /**
     * <code>.iscp2.v1.UpstreamAbnormalClose upstream_abnormal_close = 4 [json_name = "upstreamAbnormalClose"];</code>
     * @return The upstreamAbnormalClose.
     */
    @java.lang.Override
    public com.github.aptpod.proto.iscp2.v1.UpstreamAbnormalClose getUpstreamAbnormalClose() {
      if (upstreamAbnormalCloseBuilder_ == null) {
        if (metadataCase_ == 4) {
          return (com.github.aptpod.proto.iscp2.v1.UpstreamAbnormalClose) metadata_;
        }
        return com.github.aptpod.proto.iscp2.v1.UpstreamAbnormalClose.getDefaultInstance();
      } else {
        if (metadataCase_ == 4) {
          return upstreamAbnormalCloseBuilder_.getMessage();
        }
        return com.github.aptpod.proto.iscp2.v1.UpstreamAbnormalClose.getDefaultInstance();
      }
    }
    /**
     * <code>.iscp2.v1.UpstreamAbnormalClose upstream_abnormal_close = 4 [json_name = "upstreamAbnormalClose"];</code>
     */
    public Builder setUpstreamAbnormalClose(com.github.aptpod.proto.iscp2.v1.UpstreamAbnormalClose value) {
      if (upstreamAbnormalCloseBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        metadata_ = value;
        onChanged();
      } else {
        upstreamAbnormalCloseBuilder_.setMessage(value);
      }
      metadataCase_ = 4;
      return this;
    }
    /**
     * <code>.iscp2.v1.UpstreamAbnormalClose upstream_abnormal_close = 4 [json_name = "upstreamAbnormalClose"];</code>
     */
    public Builder setUpstreamAbnormalClose(
        com.github.aptpod.proto.iscp2.v1.UpstreamAbnormalClose.Builder builderForValue) {
      if (upstreamAbnormalCloseBuilder_ == null) {
        metadata_ = builderForValue.build();
        onChanged();
      } else {
        upstreamAbnormalCloseBuilder_.setMessage(builderForValue.build());
      }
      metadataCase_ = 4;
      return this;
    }
    /**
     * <code>.iscp2.v1.UpstreamAbnormalClose upstream_abnormal_close = 4 [json_name = "upstreamAbnormalClose"];</code>
     */
    public Builder mergeUpstreamAbnormalClose(com.github.aptpod.proto.iscp2.v1.UpstreamAbnormalClose value) {
      if (upstreamAbnormalCloseBuilder_ == null) {
        if (metadataCase_ == 4 &&
            metadata_ != com.github.aptpod.proto.iscp2.v1.UpstreamAbnormalClose.getDefaultInstance()) {
          metadata_ = com.github.aptpod.proto.iscp2.v1.UpstreamAbnormalClose.newBuilder((com.github.aptpod.proto.iscp2.v1.UpstreamAbnormalClose) metadata_)
              .mergeFrom(value).buildPartial();
        } else {
          metadata_ = value;
        }
        onChanged();
      } else {
        if (metadataCase_ == 4) {
          upstreamAbnormalCloseBuilder_.mergeFrom(value);
        } else {
          upstreamAbnormalCloseBuilder_.setMessage(value);
        }
      }
      metadataCase_ = 4;
      return this;
    }
    /**
     * <code>.iscp2.v1.UpstreamAbnormalClose upstream_abnormal_close = 4 [json_name = "upstreamAbnormalClose"];</code>
     */
    public Builder clearUpstreamAbnormalClose() {
      if (upstreamAbnormalCloseBuilder_ == null) {
        if (metadataCase_ == 4) {
          metadataCase_ = 0;
          metadata_ = null;
          onChanged();
        }
      } else {
        if (metadataCase_ == 4) {
          metadataCase_ = 0;
          metadata_ = null;
        }
        upstreamAbnormalCloseBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>.iscp2.v1.UpstreamAbnormalClose upstream_abnormal_close = 4 [json_name = "upstreamAbnormalClose"];</code>
     */
    public com.github.aptpod.proto.iscp2.v1.UpstreamAbnormalClose.Builder getUpstreamAbnormalCloseBuilder() {
      return getUpstreamAbnormalCloseFieldBuilder().getBuilder();
    }
    /**
     * <code>.iscp2.v1.UpstreamAbnormalClose upstream_abnormal_close = 4 [json_name = "upstreamAbnormalClose"];</code>
     */
    @java.lang.Override
    public com.github.aptpod.proto.iscp2.v1.UpstreamAbnormalCloseOrBuilder getUpstreamAbnormalCloseOrBuilder() {
      if ((metadataCase_ == 4) && (upstreamAbnormalCloseBuilder_ != null)) {
        return upstreamAbnormalCloseBuilder_.getMessageOrBuilder();
      } else {
        if (metadataCase_ == 4) {
          return (com.github.aptpod.proto.iscp2.v1.UpstreamAbnormalClose) metadata_;
        }
        return com.github.aptpod.proto.iscp2.v1.UpstreamAbnormalClose.getDefaultInstance();
      }
    }
    /**
     * <code>.iscp2.v1.UpstreamAbnormalClose upstream_abnormal_close = 4 [json_name = "upstreamAbnormalClose"];</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.github.aptpod.proto.iscp2.v1.UpstreamAbnormalClose, com.github.aptpod.proto.iscp2.v1.UpstreamAbnormalClose.Builder, com.github.aptpod.proto.iscp2.v1.UpstreamAbnormalCloseOrBuilder> 
        getUpstreamAbnormalCloseFieldBuilder() {
      if (upstreamAbnormalCloseBuilder_ == null) {
        if (!(metadataCase_ == 4)) {
          metadata_ = com.github.aptpod.proto.iscp2.v1.UpstreamAbnormalClose.getDefaultInstance();
        }
        upstreamAbnormalCloseBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.github.aptpod.proto.iscp2.v1.UpstreamAbnormalClose, com.github.aptpod.proto.iscp2.v1.UpstreamAbnormalClose.Builder, com.github.aptpod.proto.iscp2.v1.UpstreamAbnormalCloseOrBuilder>(
                (com.github.aptpod.proto.iscp2.v1.UpstreamAbnormalClose) metadata_,
                getParentForChildren(),
                isClean());
        metadata_ = null;
      }
      metadataCase_ = 4;
      onChanged();
      return upstreamAbnormalCloseBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        com.github.aptpod.proto.iscp2.v1.UpstreamResume, com.github.aptpod.proto.iscp2.v1.UpstreamResume.Builder, com.github.aptpod.proto.iscp2.v1.UpstreamResumeOrBuilder> upstreamResumeBuilder_;
    /**
     * <code>.iscp2.v1.UpstreamResume upstream_resume = 5 [json_name = "upstreamResume"];</code>
     * @return Whether the upstreamResume field is set.
     */
    @java.lang.Override
    public boolean hasUpstreamResume() {
      return metadataCase_ == 5;
    }
    /**
     * <code>.iscp2.v1.UpstreamResume upstream_resume = 5 [json_name = "upstreamResume"];</code>
     * @return The upstreamResume.
     */
    @java.lang.Override
    public com.github.aptpod.proto.iscp2.v1.UpstreamResume getUpstreamResume() {
      if (upstreamResumeBuilder_ == null) {
        if (metadataCase_ == 5) {
          return (com.github.aptpod.proto.iscp2.v1.UpstreamResume) metadata_;
        }
        return com.github.aptpod.proto.iscp2.v1.UpstreamResume.getDefaultInstance();
      } else {
        if (metadataCase_ == 5) {
          return upstreamResumeBuilder_.getMessage();
        }
        return com.github.aptpod.proto.iscp2.v1.UpstreamResume.getDefaultInstance();
      }
    }
    /**
     * <code>.iscp2.v1.UpstreamResume upstream_resume = 5 [json_name = "upstreamResume"];</code>
     */
    public Builder setUpstreamResume(com.github.aptpod.proto.iscp2.v1.UpstreamResume value) {
      if (upstreamResumeBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        metadata_ = value;
        onChanged();
      } else {
        upstreamResumeBuilder_.setMessage(value);
      }
      metadataCase_ = 5;
      return this;
    }
    /**
     * <code>.iscp2.v1.UpstreamResume upstream_resume = 5 [json_name = "upstreamResume"];</code>
     */
    public Builder setUpstreamResume(
        com.github.aptpod.proto.iscp2.v1.UpstreamResume.Builder builderForValue) {
      if (upstreamResumeBuilder_ == null) {
        metadata_ = builderForValue.build();
        onChanged();
      } else {
        upstreamResumeBuilder_.setMessage(builderForValue.build());
      }
      metadataCase_ = 5;
      return this;
    }
    /**
     * <code>.iscp2.v1.UpstreamResume upstream_resume = 5 [json_name = "upstreamResume"];</code>
     */
    public Builder mergeUpstreamResume(com.github.aptpod.proto.iscp2.v1.UpstreamResume value) {
      if (upstreamResumeBuilder_ == null) {
        if (metadataCase_ == 5 &&
            metadata_ != com.github.aptpod.proto.iscp2.v1.UpstreamResume.getDefaultInstance()) {
          metadata_ = com.github.aptpod.proto.iscp2.v1.UpstreamResume.newBuilder((com.github.aptpod.proto.iscp2.v1.UpstreamResume) metadata_)
              .mergeFrom(value).buildPartial();
        } else {
          metadata_ = value;
        }
        onChanged();
      } else {
        if (metadataCase_ == 5) {
          upstreamResumeBuilder_.mergeFrom(value);
        } else {
          upstreamResumeBuilder_.setMessage(value);
        }
      }
      metadataCase_ = 5;
      return this;
    }
    /**
     * <code>.iscp2.v1.UpstreamResume upstream_resume = 5 [json_name = "upstreamResume"];</code>
     */
    public Builder clearUpstreamResume() {
      if (upstreamResumeBuilder_ == null) {
        if (metadataCase_ == 5) {
          metadataCase_ = 0;
          metadata_ = null;
          onChanged();
        }
      } else {
        if (metadataCase_ == 5) {
          metadataCase_ = 0;
          metadata_ = null;
        }
        upstreamResumeBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>.iscp2.v1.UpstreamResume upstream_resume = 5 [json_name = "upstreamResume"];</code>
     */
    public com.github.aptpod.proto.iscp2.v1.UpstreamResume.Builder getUpstreamResumeBuilder() {
      return getUpstreamResumeFieldBuilder().getBuilder();
    }
    /**
     * <code>.iscp2.v1.UpstreamResume upstream_resume = 5 [json_name = "upstreamResume"];</code>
     */
    @java.lang.Override
    public com.github.aptpod.proto.iscp2.v1.UpstreamResumeOrBuilder getUpstreamResumeOrBuilder() {
      if ((metadataCase_ == 5) && (upstreamResumeBuilder_ != null)) {
        return upstreamResumeBuilder_.getMessageOrBuilder();
      } else {
        if (metadataCase_ == 5) {
          return (com.github.aptpod.proto.iscp2.v1.UpstreamResume) metadata_;
        }
        return com.github.aptpod.proto.iscp2.v1.UpstreamResume.getDefaultInstance();
      }
    }
    /**
     * <code>.iscp2.v1.UpstreamResume upstream_resume = 5 [json_name = "upstreamResume"];</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.github.aptpod.proto.iscp2.v1.UpstreamResume, com.github.aptpod.proto.iscp2.v1.UpstreamResume.Builder, com.github.aptpod.proto.iscp2.v1.UpstreamResumeOrBuilder> 
        getUpstreamResumeFieldBuilder() {
      if (upstreamResumeBuilder_ == null) {
        if (!(metadataCase_ == 5)) {
          metadata_ = com.github.aptpod.proto.iscp2.v1.UpstreamResume.getDefaultInstance();
        }
        upstreamResumeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.github.aptpod.proto.iscp2.v1.UpstreamResume, com.github.aptpod.proto.iscp2.v1.UpstreamResume.Builder, com.github.aptpod.proto.iscp2.v1.UpstreamResumeOrBuilder>(
                (com.github.aptpod.proto.iscp2.v1.UpstreamResume) metadata_,
                getParentForChildren(),
                isClean());
        metadata_ = null;
      }
      metadataCase_ = 5;
      onChanged();
      return upstreamResumeBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        com.github.aptpod.proto.iscp2.v1.UpstreamNormalClose, com.github.aptpod.proto.iscp2.v1.UpstreamNormalClose.Builder, com.github.aptpod.proto.iscp2.v1.UpstreamNormalCloseOrBuilder> upstreamNormalCloseBuilder_;
    /**
     * <code>.iscp2.v1.UpstreamNormalClose upstream_normal_close = 6 [json_name = "upstreamNormalClose"];</code>
     * @return Whether the upstreamNormalClose field is set.
     */
    @java.lang.Override
    public boolean hasUpstreamNormalClose() {
      return metadataCase_ == 6;
    }
    /**
     * <code>.iscp2.v1.UpstreamNormalClose upstream_normal_close = 6 [json_name = "upstreamNormalClose"];</code>
     * @return The upstreamNormalClose.
     */
    @java.lang.Override
    public com.github.aptpod.proto.iscp2.v1.UpstreamNormalClose getUpstreamNormalClose() {
      if (upstreamNormalCloseBuilder_ == null) {
        if (metadataCase_ == 6) {
          return (com.github.aptpod.proto.iscp2.v1.UpstreamNormalClose) metadata_;
        }
        return com.github.aptpod.proto.iscp2.v1.UpstreamNormalClose.getDefaultInstance();
      } else {
        if (metadataCase_ == 6) {
          return upstreamNormalCloseBuilder_.getMessage();
        }
        return com.github.aptpod.proto.iscp2.v1.UpstreamNormalClose.getDefaultInstance();
      }
    }
    /**
     * <code>.iscp2.v1.UpstreamNormalClose upstream_normal_close = 6 [json_name = "upstreamNormalClose"];</code>
     */
    public Builder setUpstreamNormalClose(com.github.aptpod.proto.iscp2.v1.UpstreamNormalClose value) {
      if (upstreamNormalCloseBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        metadata_ = value;
        onChanged();
      } else {
        upstreamNormalCloseBuilder_.setMessage(value);
      }
      metadataCase_ = 6;
      return this;
    }
    /**
     * <code>.iscp2.v1.UpstreamNormalClose upstream_normal_close = 6 [json_name = "upstreamNormalClose"];</code>
     */
    public Builder setUpstreamNormalClose(
        com.github.aptpod.proto.iscp2.v1.UpstreamNormalClose.Builder builderForValue) {
      if (upstreamNormalCloseBuilder_ == null) {
        metadata_ = builderForValue.build();
        onChanged();
      } else {
        upstreamNormalCloseBuilder_.setMessage(builderForValue.build());
      }
      metadataCase_ = 6;
      return this;
    }
    /**
     * <code>.iscp2.v1.UpstreamNormalClose upstream_normal_close = 6 [json_name = "upstreamNormalClose"];</code>
     */
    public Builder mergeUpstreamNormalClose(com.github.aptpod.proto.iscp2.v1.UpstreamNormalClose value) {
      if (upstreamNormalCloseBuilder_ == null) {
        if (metadataCase_ == 6 &&
            metadata_ != com.github.aptpod.proto.iscp2.v1.UpstreamNormalClose.getDefaultInstance()) {
          metadata_ = com.github.aptpod.proto.iscp2.v1.UpstreamNormalClose.newBuilder((com.github.aptpod.proto.iscp2.v1.UpstreamNormalClose) metadata_)
              .mergeFrom(value).buildPartial();
        } else {
          metadata_ = value;
        }
        onChanged();
      } else {
        if (metadataCase_ == 6) {
          upstreamNormalCloseBuilder_.mergeFrom(value);
        } else {
          upstreamNormalCloseBuilder_.setMessage(value);
        }
      }
      metadataCase_ = 6;
      return this;
    }
    /**
     * <code>.iscp2.v1.UpstreamNormalClose upstream_normal_close = 6 [json_name = "upstreamNormalClose"];</code>
     */
    public Builder clearUpstreamNormalClose() {
      if (upstreamNormalCloseBuilder_ == null) {
        if (metadataCase_ == 6) {
          metadataCase_ = 0;
          metadata_ = null;
          onChanged();
        }
      } else {
        if (metadataCase_ == 6) {
          metadataCase_ = 0;
          metadata_ = null;
        }
        upstreamNormalCloseBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>.iscp2.v1.UpstreamNormalClose upstream_normal_close = 6 [json_name = "upstreamNormalClose"];</code>
     */
    public com.github.aptpod.proto.iscp2.v1.UpstreamNormalClose.Builder getUpstreamNormalCloseBuilder() {
      return getUpstreamNormalCloseFieldBuilder().getBuilder();
    }
    /**
     * <code>.iscp2.v1.UpstreamNormalClose upstream_normal_close = 6 [json_name = "upstreamNormalClose"];</code>
     */
    @java.lang.Override
    public com.github.aptpod.proto.iscp2.v1.UpstreamNormalCloseOrBuilder getUpstreamNormalCloseOrBuilder() {
      if ((metadataCase_ == 6) && (upstreamNormalCloseBuilder_ != null)) {
        return upstreamNormalCloseBuilder_.getMessageOrBuilder();
      } else {
        if (metadataCase_ == 6) {
          return (com.github.aptpod.proto.iscp2.v1.UpstreamNormalClose) metadata_;
        }
        return com.github.aptpod.proto.iscp2.v1.UpstreamNormalClose.getDefaultInstance();
      }
    }
    /**
     * <code>.iscp2.v1.UpstreamNormalClose upstream_normal_close = 6 [json_name = "upstreamNormalClose"];</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.github.aptpod.proto.iscp2.v1.UpstreamNormalClose, com.github.aptpod.proto.iscp2.v1.UpstreamNormalClose.Builder, com.github.aptpod.proto.iscp2.v1.UpstreamNormalCloseOrBuilder> 
        getUpstreamNormalCloseFieldBuilder() {
      if (upstreamNormalCloseBuilder_ == null) {
        if (!(metadataCase_ == 6)) {
          metadata_ = com.github.aptpod.proto.iscp2.v1.UpstreamNormalClose.getDefaultInstance();
        }
        upstreamNormalCloseBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.github.aptpod.proto.iscp2.v1.UpstreamNormalClose, com.github.aptpod.proto.iscp2.v1.UpstreamNormalClose.Builder, com.github.aptpod.proto.iscp2.v1.UpstreamNormalCloseOrBuilder>(
                (com.github.aptpod.proto.iscp2.v1.UpstreamNormalClose) metadata_,
                getParentForChildren(),
                isClean());
        metadata_ = null;
      }
      metadataCase_ = 6;
      onChanged();
      return upstreamNormalCloseBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        com.github.aptpod.proto.iscp2.v1.DownstreamOpen, com.github.aptpod.proto.iscp2.v1.DownstreamOpen.Builder, com.github.aptpod.proto.iscp2.v1.DownstreamOpenOrBuilder> downstreamOpenBuilder_;
    /**
     * <code>.iscp2.v1.DownstreamOpen downstream_open = 7 [json_name = "downstreamOpen"];</code>
     * @return Whether the downstreamOpen field is set.
     */
    @java.lang.Override
    public boolean hasDownstreamOpen() {
      return metadataCase_ == 7;
    }
    /**
     * <code>.iscp2.v1.DownstreamOpen downstream_open = 7 [json_name = "downstreamOpen"];</code>
     * @return The downstreamOpen.
     */
    @java.lang.Override
    public com.github.aptpod.proto.iscp2.v1.DownstreamOpen getDownstreamOpen() {
      if (downstreamOpenBuilder_ == null) {
        if (metadataCase_ == 7) {
          return (com.github.aptpod.proto.iscp2.v1.DownstreamOpen) metadata_;
        }
        return com.github.aptpod.proto.iscp2.v1.DownstreamOpen.getDefaultInstance();
      } else {
        if (metadataCase_ == 7) {
          return downstreamOpenBuilder_.getMessage();
        }
        return com.github.aptpod.proto.iscp2.v1.DownstreamOpen.getDefaultInstance();
      }
    }
    /**
     * <code>.iscp2.v1.DownstreamOpen downstream_open = 7 [json_name = "downstreamOpen"];</code>
     */
    public Builder setDownstreamOpen(com.github.aptpod.proto.iscp2.v1.DownstreamOpen value) {
      if (downstreamOpenBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        metadata_ = value;
        onChanged();
      } else {
        downstreamOpenBuilder_.setMessage(value);
      }
      metadataCase_ = 7;
      return this;
    }
    /**
     * <code>.iscp2.v1.DownstreamOpen downstream_open = 7 [json_name = "downstreamOpen"];</code>
     */
    public Builder setDownstreamOpen(
        com.github.aptpod.proto.iscp2.v1.DownstreamOpen.Builder builderForValue) {
      if (downstreamOpenBuilder_ == null) {
        metadata_ = builderForValue.build();
        onChanged();
      } else {
        downstreamOpenBuilder_.setMessage(builderForValue.build());
      }
      metadataCase_ = 7;
      return this;
    }
    /**
     * <code>.iscp2.v1.DownstreamOpen downstream_open = 7 [json_name = "downstreamOpen"];</code>
     */
    public Builder mergeDownstreamOpen(com.github.aptpod.proto.iscp2.v1.DownstreamOpen value) {
      if (downstreamOpenBuilder_ == null) {
        if (metadataCase_ == 7 &&
            metadata_ != com.github.aptpod.proto.iscp2.v1.DownstreamOpen.getDefaultInstance()) {
          metadata_ = com.github.aptpod.proto.iscp2.v1.DownstreamOpen.newBuilder((com.github.aptpod.proto.iscp2.v1.DownstreamOpen) metadata_)
              .mergeFrom(value).buildPartial();
        } else {
          metadata_ = value;
        }
        onChanged();
      } else {
        if (metadataCase_ == 7) {
          downstreamOpenBuilder_.mergeFrom(value);
        } else {
          downstreamOpenBuilder_.setMessage(value);
        }
      }
      metadataCase_ = 7;
      return this;
    }
    /**
     * <code>.iscp2.v1.DownstreamOpen downstream_open = 7 [json_name = "downstreamOpen"];</code>
     */
    public Builder clearDownstreamOpen() {
      if (downstreamOpenBuilder_ == null) {
        if (metadataCase_ == 7) {
          metadataCase_ = 0;
          metadata_ = null;
          onChanged();
        }
      } else {
        if (metadataCase_ == 7) {
          metadataCase_ = 0;
          metadata_ = null;
        }
        downstreamOpenBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>.iscp2.v1.DownstreamOpen downstream_open = 7 [json_name = "downstreamOpen"];</code>
     */
    public com.github.aptpod.proto.iscp2.v1.DownstreamOpen.Builder getDownstreamOpenBuilder() {
      return getDownstreamOpenFieldBuilder().getBuilder();
    }
    /**
     * <code>.iscp2.v1.DownstreamOpen downstream_open = 7 [json_name = "downstreamOpen"];</code>
     */
    @java.lang.Override
    public com.github.aptpod.proto.iscp2.v1.DownstreamOpenOrBuilder getDownstreamOpenOrBuilder() {
      if ((metadataCase_ == 7) && (downstreamOpenBuilder_ != null)) {
        return downstreamOpenBuilder_.getMessageOrBuilder();
      } else {
        if (metadataCase_ == 7) {
          return (com.github.aptpod.proto.iscp2.v1.DownstreamOpen) metadata_;
        }
        return com.github.aptpod.proto.iscp2.v1.DownstreamOpen.getDefaultInstance();
      }
    }
    /**
     * <code>.iscp2.v1.DownstreamOpen downstream_open = 7 [json_name = "downstreamOpen"];</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.github.aptpod.proto.iscp2.v1.DownstreamOpen, com.github.aptpod.proto.iscp2.v1.DownstreamOpen.Builder, com.github.aptpod.proto.iscp2.v1.DownstreamOpenOrBuilder> 
        getDownstreamOpenFieldBuilder() {
      if (downstreamOpenBuilder_ == null) {
        if (!(metadataCase_ == 7)) {
          metadata_ = com.github.aptpod.proto.iscp2.v1.DownstreamOpen.getDefaultInstance();
        }
        downstreamOpenBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.github.aptpod.proto.iscp2.v1.DownstreamOpen, com.github.aptpod.proto.iscp2.v1.DownstreamOpen.Builder, com.github.aptpod.proto.iscp2.v1.DownstreamOpenOrBuilder>(
                (com.github.aptpod.proto.iscp2.v1.DownstreamOpen) metadata_,
                getParentForChildren(),
                isClean());
        metadata_ = null;
      }
      metadataCase_ = 7;
      onChanged();
      return downstreamOpenBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        com.github.aptpod.proto.iscp2.v1.DownstreamAbnormalClose, com.github.aptpod.proto.iscp2.v1.DownstreamAbnormalClose.Builder, com.github.aptpod.proto.iscp2.v1.DownstreamAbnormalCloseOrBuilder> downstreamAbnormalCloseBuilder_;
    /**
     * <code>.iscp2.v1.DownstreamAbnormalClose downstream_abnormal_close = 8 [json_name = "downstreamAbnormalClose"];</code>
     * @return Whether the downstreamAbnormalClose field is set.
     */
    @java.lang.Override
    public boolean hasDownstreamAbnormalClose() {
      return metadataCase_ == 8;
    }
    /**
     * <code>.iscp2.v1.DownstreamAbnormalClose downstream_abnormal_close = 8 [json_name = "downstreamAbnormalClose"];</code>
     * @return The downstreamAbnormalClose.
     */
    @java.lang.Override
    public com.github.aptpod.proto.iscp2.v1.DownstreamAbnormalClose getDownstreamAbnormalClose() {
      if (downstreamAbnormalCloseBuilder_ == null) {
        if (metadataCase_ == 8) {
          return (com.github.aptpod.proto.iscp2.v1.DownstreamAbnormalClose) metadata_;
        }
        return com.github.aptpod.proto.iscp2.v1.DownstreamAbnormalClose.getDefaultInstance();
      } else {
        if (metadataCase_ == 8) {
          return downstreamAbnormalCloseBuilder_.getMessage();
        }
        return com.github.aptpod.proto.iscp2.v1.DownstreamAbnormalClose.getDefaultInstance();
      }
    }
    /**
     * <code>.iscp2.v1.DownstreamAbnormalClose downstream_abnormal_close = 8 [json_name = "downstreamAbnormalClose"];</code>
     */
    public Builder setDownstreamAbnormalClose(com.github.aptpod.proto.iscp2.v1.DownstreamAbnormalClose value) {
      if (downstreamAbnormalCloseBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        metadata_ = value;
        onChanged();
      } else {
        downstreamAbnormalCloseBuilder_.setMessage(value);
      }
      metadataCase_ = 8;
      return this;
    }
    /**
     * <code>.iscp2.v1.DownstreamAbnormalClose downstream_abnormal_close = 8 [json_name = "downstreamAbnormalClose"];</code>
     */
    public Builder setDownstreamAbnormalClose(
        com.github.aptpod.proto.iscp2.v1.DownstreamAbnormalClose.Builder builderForValue) {
      if (downstreamAbnormalCloseBuilder_ == null) {
        metadata_ = builderForValue.build();
        onChanged();
      } else {
        downstreamAbnormalCloseBuilder_.setMessage(builderForValue.build());
      }
      metadataCase_ = 8;
      return this;
    }
    /**
     * <code>.iscp2.v1.DownstreamAbnormalClose downstream_abnormal_close = 8 [json_name = "downstreamAbnormalClose"];</code>
     */
    public Builder mergeDownstreamAbnormalClose(com.github.aptpod.proto.iscp2.v1.DownstreamAbnormalClose value) {
      if (downstreamAbnormalCloseBuilder_ == null) {
        if (metadataCase_ == 8 &&
            metadata_ != com.github.aptpod.proto.iscp2.v1.DownstreamAbnormalClose.getDefaultInstance()) {
          metadata_ = com.github.aptpod.proto.iscp2.v1.DownstreamAbnormalClose.newBuilder((com.github.aptpod.proto.iscp2.v1.DownstreamAbnormalClose) metadata_)
              .mergeFrom(value).buildPartial();
        } else {
          metadata_ = value;
        }
        onChanged();
      } else {
        if (metadataCase_ == 8) {
          downstreamAbnormalCloseBuilder_.mergeFrom(value);
        } else {
          downstreamAbnormalCloseBuilder_.setMessage(value);
        }
      }
      metadataCase_ = 8;
      return this;
    }
    /**
     * <code>.iscp2.v1.DownstreamAbnormalClose downstream_abnormal_close = 8 [json_name = "downstreamAbnormalClose"];</code>
     */
    public Builder clearDownstreamAbnormalClose() {
      if (downstreamAbnormalCloseBuilder_ == null) {
        if (metadataCase_ == 8) {
          metadataCase_ = 0;
          metadata_ = null;
          onChanged();
        }
      } else {
        if (metadataCase_ == 8) {
          metadataCase_ = 0;
          metadata_ = null;
        }
        downstreamAbnormalCloseBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>.iscp2.v1.DownstreamAbnormalClose downstream_abnormal_close = 8 [json_name = "downstreamAbnormalClose"];</code>
     */
    public com.github.aptpod.proto.iscp2.v1.DownstreamAbnormalClose.Builder getDownstreamAbnormalCloseBuilder() {
      return getDownstreamAbnormalCloseFieldBuilder().getBuilder();
    }
    /**
     * <code>.iscp2.v1.DownstreamAbnormalClose downstream_abnormal_close = 8 [json_name = "downstreamAbnormalClose"];</code>
     */
    @java.lang.Override
    public com.github.aptpod.proto.iscp2.v1.DownstreamAbnormalCloseOrBuilder getDownstreamAbnormalCloseOrBuilder() {
      if ((metadataCase_ == 8) && (downstreamAbnormalCloseBuilder_ != null)) {
        return downstreamAbnormalCloseBuilder_.getMessageOrBuilder();
      } else {
        if (metadataCase_ == 8) {
          return (com.github.aptpod.proto.iscp2.v1.DownstreamAbnormalClose) metadata_;
        }
        return com.github.aptpod.proto.iscp2.v1.DownstreamAbnormalClose.getDefaultInstance();
      }
    }
    /**
     * <code>.iscp2.v1.DownstreamAbnormalClose downstream_abnormal_close = 8 [json_name = "downstreamAbnormalClose"];</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.github.aptpod.proto.iscp2.v1.DownstreamAbnormalClose, com.github.aptpod.proto.iscp2.v1.DownstreamAbnormalClose.Builder, com.github.aptpod.proto.iscp2.v1.DownstreamAbnormalCloseOrBuilder> 
        getDownstreamAbnormalCloseFieldBuilder() {
      if (downstreamAbnormalCloseBuilder_ == null) {
        if (!(metadataCase_ == 8)) {
          metadata_ = com.github.aptpod.proto.iscp2.v1.DownstreamAbnormalClose.getDefaultInstance();
        }
        downstreamAbnormalCloseBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.github.aptpod.proto.iscp2.v1.DownstreamAbnormalClose, com.github.aptpod.proto.iscp2.v1.DownstreamAbnormalClose.Builder, com.github.aptpod.proto.iscp2.v1.DownstreamAbnormalCloseOrBuilder>(
                (com.github.aptpod.proto.iscp2.v1.DownstreamAbnormalClose) metadata_,
                getParentForChildren(),
                isClean());
        metadata_ = null;
      }
      metadataCase_ = 8;
      onChanged();
      return downstreamAbnormalCloseBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        com.github.aptpod.proto.iscp2.v1.DownstreamResume, com.github.aptpod.proto.iscp2.v1.DownstreamResume.Builder, com.github.aptpod.proto.iscp2.v1.DownstreamResumeOrBuilder> downstreamResumeBuilder_;
    /**
     * <code>.iscp2.v1.DownstreamResume downstream_resume = 9 [json_name = "downstreamResume"];</code>
     * @return Whether the downstreamResume field is set.
     */
    @java.lang.Override
    public boolean hasDownstreamResume() {
      return metadataCase_ == 9;
    }
    /**
     * <code>.iscp2.v1.DownstreamResume downstream_resume = 9 [json_name = "downstreamResume"];</code>
     * @return The downstreamResume.
     */
    @java.lang.Override
    public com.github.aptpod.proto.iscp2.v1.DownstreamResume getDownstreamResume() {
      if (downstreamResumeBuilder_ == null) {
        if (metadataCase_ == 9) {
          return (com.github.aptpod.proto.iscp2.v1.DownstreamResume) metadata_;
        }
        return com.github.aptpod.proto.iscp2.v1.DownstreamResume.getDefaultInstance();
      } else {
        if (metadataCase_ == 9) {
          return downstreamResumeBuilder_.getMessage();
        }
        return com.github.aptpod.proto.iscp2.v1.DownstreamResume.getDefaultInstance();
      }
    }
    /**
     * <code>.iscp2.v1.DownstreamResume downstream_resume = 9 [json_name = "downstreamResume"];</code>
     */
    public Builder setDownstreamResume(com.github.aptpod.proto.iscp2.v1.DownstreamResume value) {
      if (downstreamResumeBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        metadata_ = value;
        onChanged();
      } else {
        downstreamResumeBuilder_.setMessage(value);
      }
      metadataCase_ = 9;
      return this;
    }
    /**
     * <code>.iscp2.v1.DownstreamResume downstream_resume = 9 [json_name = "downstreamResume"];</code>
     */
    public Builder setDownstreamResume(
        com.github.aptpod.proto.iscp2.v1.DownstreamResume.Builder builderForValue) {
      if (downstreamResumeBuilder_ == null) {
        metadata_ = builderForValue.build();
        onChanged();
      } else {
        downstreamResumeBuilder_.setMessage(builderForValue.build());
      }
      metadataCase_ = 9;
      return this;
    }
    /**
     * <code>.iscp2.v1.DownstreamResume downstream_resume = 9 [json_name = "downstreamResume"];</code>
     */
    public Builder mergeDownstreamResume(com.github.aptpod.proto.iscp2.v1.DownstreamResume value) {
      if (downstreamResumeBuilder_ == null) {
        if (metadataCase_ == 9 &&
            metadata_ != com.github.aptpod.proto.iscp2.v1.DownstreamResume.getDefaultInstance()) {
          metadata_ = com.github.aptpod.proto.iscp2.v1.DownstreamResume.newBuilder((com.github.aptpod.proto.iscp2.v1.DownstreamResume) metadata_)
              .mergeFrom(value).buildPartial();
        } else {
          metadata_ = value;
        }
        onChanged();
      } else {
        if (metadataCase_ == 9) {
          downstreamResumeBuilder_.mergeFrom(value);
        } else {
          downstreamResumeBuilder_.setMessage(value);
        }
      }
      metadataCase_ = 9;
      return this;
    }
    /**
     * <code>.iscp2.v1.DownstreamResume downstream_resume = 9 [json_name = "downstreamResume"];</code>
     */
    public Builder clearDownstreamResume() {
      if (downstreamResumeBuilder_ == null) {
        if (metadataCase_ == 9) {
          metadataCase_ = 0;
          metadata_ = null;
          onChanged();
        }
      } else {
        if (metadataCase_ == 9) {
          metadataCase_ = 0;
          metadata_ = null;
        }
        downstreamResumeBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>.iscp2.v1.DownstreamResume downstream_resume = 9 [json_name = "downstreamResume"];</code>
     */
    public com.github.aptpod.proto.iscp2.v1.DownstreamResume.Builder getDownstreamResumeBuilder() {
      return getDownstreamResumeFieldBuilder().getBuilder();
    }
    /**
     * <code>.iscp2.v1.DownstreamResume downstream_resume = 9 [json_name = "downstreamResume"];</code>
     */
    @java.lang.Override
    public com.github.aptpod.proto.iscp2.v1.DownstreamResumeOrBuilder getDownstreamResumeOrBuilder() {
      if ((metadataCase_ == 9) && (downstreamResumeBuilder_ != null)) {
        return downstreamResumeBuilder_.getMessageOrBuilder();
      } else {
        if (metadataCase_ == 9) {
          return (com.github.aptpod.proto.iscp2.v1.DownstreamResume) metadata_;
        }
        return com.github.aptpod.proto.iscp2.v1.DownstreamResume.getDefaultInstance();
      }
    }
    /**
     * <code>.iscp2.v1.DownstreamResume downstream_resume = 9 [json_name = "downstreamResume"];</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.github.aptpod.proto.iscp2.v1.DownstreamResume, com.github.aptpod.proto.iscp2.v1.DownstreamResume.Builder, com.github.aptpod.proto.iscp2.v1.DownstreamResumeOrBuilder> 
        getDownstreamResumeFieldBuilder() {
      if (downstreamResumeBuilder_ == null) {
        if (!(metadataCase_ == 9)) {
          metadata_ = com.github.aptpod.proto.iscp2.v1.DownstreamResume.getDefaultInstance();
        }
        downstreamResumeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.github.aptpod.proto.iscp2.v1.DownstreamResume, com.github.aptpod.proto.iscp2.v1.DownstreamResume.Builder, com.github.aptpod.proto.iscp2.v1.DownstreamResumeOrBuilder>(
                (com.github.aptpod.proto.iscp2.v1.DownstreamResume) metadata_,
                getParentForChildren(),
                isClean());
        metadata_ = null;
      }
      metadataCase_ = 9;
      onChanged();
      return downstreamResumeBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        com.github.aptpod.proto.iscp2.v1.DownstreamNormalClose, com.github.aptpod.proto.iscp2.v1.DownstreamNormalClose.Builder, com.github.aptpod.proto.iscp2.v1.DownstreamNormalCloseOrBuilder> downstreamNormalCloseBuilder_;
    /**
     * <code>.iscp2.v1.DownstreamNormalClose downstream_normal_close = 10 [json_name = "downstreamNormalClose"];</code>
     * @return Whether the downstreamNormalClose field is set.
     */
    @java.lang.Override
    public boolean hasDownstreamNormalClose() {
      return metadataCase_ == 10;
    }
    /**
     * <code>.iscp2.v1.DownstreamNormalClose downstream_normal_close = 10 [json_name = "downstreamNormalClose"];</code>
     * @return The downstreamNormalClose.
     */
    @java.lang.Override
    public com.github.aptpod.proto.iscp2.v1.DownstreamNormalClose getDownstreamNormalClose() {
      if (downstreamNormalCloseBuilder_ == null) {
        if (metadataCase_ == 10) {
          return (com.github.aptpod.proto.iscp2.v1.DownstreamNormalClose) metadata_;
        }
        return com.github.aptpod.proto.iscp2.v1.DownstreamNormalClose.getDefaultInstance();
      } else {
        if (metadataCase_ == 10) {
          return downstreamNormalCloseBuilder_.getMessage();
        }
        return com.github.aptpod.proto.iscp2.v1.DownstreamNormalClose.getDefaultInstance();
      }
    }
    /**
     * <code>.iscp2.v1.DownstreamNormalClose downstream_normal_close = 10 [json_name = "downstreamNormalClose"];</code>
     */
    public Builder setDownstreamNormalClose(com.github.aptpod.proto.iscp2.v1.DownstreamNormalClose value) {
      if (downstreamNormalCloseBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        metadata_ = value;
        onChanged();
      } else {
        downstreamNormalCloseBuilder_.setMessage(value);
      }
      metadataCase_ = 10;
      return this;
    }
    /**
     * <code>.iscp2.v1.DownstreamNormalClose downstream_normal_close = 10 [json_name = "downstreamNormalClose"];</code>
     */
    public Builder setDownstreamNormalClose(
        com.github.aptpod.proto.iscp2.v1.DownstreamNormalClose.Builder builderForValue) {
      if (downstreamNormalCloseBuilder_ == null) {
        metadata_ = builderForValue.build();
        onChanged();
      } else {
        downstreamNormalCloseBuilder_.setMessage(builderForValue.build());
      }
      metadataCase_ = 10;
      return this;
    }
    /**
     * <code>.iscp2.v1.DownstreamNormalClose downstream_normal_close = 10 [json_name = "downstreamNormalClose"];</code>
     */
    public Builder mergeDownstreamNormalClose(com.github.aptpod.proto.iscp2.v1.DownstreamNormalClose value) {
      if (downstreamNormalCloseBuilder_ == null) {
        if (metadataCase_ == 10 &&
            metadata_ != com.github.aptpod.proto.iscp2.v1.DownstreamNormalClose.getDefaultInstance()) {
          metadata_ = com.github.aptpod.proto.iscp2.v1.DownstreamNormalClose.newBuilder((com.github.aptpod.proto.iscp2.v1.DownstreamNormalClose) metadata_)
              .mergeFrom(value).buildPartial();
        } else {
          metadata_ = value;
        }
        onChanged();
      } else {
        if (metadataCase_ == 10) {
          downstreamNormalCloseBuilder_.mergeFrom(value);
        } else {
          downstreamNormalCloseBuilder_.setMessage(value);
        }
      }
      metadataCase_ = 10;
      return this;
    }
    /**
     * <code>.iscp2.v1.DownstreamNormalClose downstream_normal_close = 10 [json_name = "downstreamNormalClose"];</code>
     */
    public Builder clearDownstreamNormalClose() {
      if (downstreamNormalCloseBuilder_ == null) {
        if (metadataCase_ == 10) {
          metadataCase_ = 0;
          metadata_ = null;
          onChanged();
        }
      } else {
        if (metadataCase_ == 10) {
          metadataCase_ = 0;
          metadata_ = null;
        }
        downstreamNormalCloseBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>.iscp2.v1.DownstreamNormalClose downstream_normal_close = 10 [json_name = "downstreamNormalClose"];</code>
     */
    public com.github.aptpod.proto.iscp2.v1.DownstreamNormalClose.Builder getDownstreamNormalCloseBuilder() {
      return getDownstreamNormalCloseFieldBuilder().getBuilder();
    }
    /**
     * <code>.iscp2.v1.DownstreamNormalClose downstream_normal_close = 10 [json_name = "downstreamNormalClose"];</code>
     */
    @java.lang.Override
    public com.github.aptpod.proto.iscp2.v1.DownstreamNormalCloseOrBuilder getDownstreamNormalCloseOrBuilder() {
      if ((metadataCase_ == 10) && (downstreamNormalCloseBuilder_ != null)) {
        return downstreamNormalCloseBuilder_.getMessageOrBuilder();
      } else {
        if (metadataCase_ == 10) {
          return (com.github.aptpod.proto.iscp2.v1.DownstreamNormalClose) metadata_;
        }
        return com.github.aptpod.proto.iscp2.v1.DownstreamNormalClose.getDefaultInstance();
      }
    }
    /**
     * <code>.iscp2.v1.DownstreamNormalClose downstream_normal_close = 10 [json_name = "downstreamNormalClose"];</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.github.aptpod.proto.iscp2.v1.DownstreamNormalClose, com.github.aptpod.proto.iscp2.v1.DownstreamNormalClose.Builder, com.github.aptpod.proto.iscp2.v1.DownstreamNormalCloseOrBuilder> 
        getDownstreamNormalCloseFieldBuilder() {
      if (downstreamNormalCloseBuilder_ == null) {
        if (!(metadataCase_ == 10)) {
          metadata_ = com.github.aptpod.proto.iscp2.v1.DownstreamNormalClose.getDefaultInstance();
        }
        downstreamNormalCloseBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.github.aptpod.proto.iscp2.v1.DownstreamNormalClose, com.github.aptpod.proto.iscp2.v1.DownstreamNormalClose.Builder, com.github.aptpod.proto.iscp2.v1.DownstreamNormalCloseOrBuilder>(
                (com.github.aptpod.proto.iscp2.v1.DownstreamNormalClose) metadata_,
                getParentForChildren(),
                isClean());
        metadata_ = null;
      }
      metadataCase_ = 10;
      onChanged();
      return downstreamNormalCloseBuilder_;
    }

    private java.lang.Object sourceNodeId_ = "";
    /**
     * <code>string source_node_id = 11 [json_name = "sourceNodeId"];</code>
     * @return The sourceNodeId.
     */
    public java.lang.String getSourceNodeId() {
      java.lang.Object ref = sourceNodeId_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        sourceNodeId_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <code>string source_node_id = 11 [json_name = "sourceNodeId"];</code>
     * @return The bytes for sourceNodeId.
     */
    public com.google.protobuf.ByteString
        getSourceNodeIdBytes() {
      java.lang.Object ref = sourceNodeId_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        sourceNodeId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <code>string source_node_id = 11 [json_name = "sourceNodeId"];</code>
     * @param value The sourceNodeId to set.
     * @return This builder for chaining.
     */
    public Builder setSourceNodeId(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      sourceNodeId_ = value;
      bitField0_ |= 0x00000800;
      onChanged();
      return this;
    }
    /**
     * <code>string source_node_id = 11 [json_name = "sourceNodeId"];</code>
     * @return This builder for chaining.
     */
    public Builder clearSourceNodeId() {
      sourceNodeId_ = getDefaultInstance().getSourceNodeId();
      bitField0_ = (bitField0_ & ~0x00000800);
      onChanged();
      return this;
    }
    /**
     * <code>string source_node_id = 11 [json_name = "sourceNodeId"];</code>
     * @param value The bytes for sourceNodeId to set.
     * @return This builder for chaining.
     */
    public Builder setSourceNodeIdBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      sourceNodeId_ = value;
      bitField0_ |= 0x00000800;
      onChanged();
      return this;
    }

    private com.github.aptpod.proto.iscp2.v1.extensions.DownstreamMetadataExtensionFields extensionFields_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.github.aptpod.proto.iscp2.v1.extensions.DownstreamMetadataExtensionFields, com.github.aptpod.proto.iscp2.v1.extensions.DownstreamMetadataExtensionFields.Builder, com.github.aptpod.proto.iscp2.v1.extensions.DownstreamMetadataExtensionFieldsOrBuilder> extensionFieldsBuilder_;
    /**
     * <code>.iscp2.v1.extensions.DownstreamMetadataExtensionFields extension_fields = 12 [json_name = "extensionFields"];</code>
     * @return Whether the extensionFields field is set.
     */
    public boolean hasExtensionFields() {
      return ((bitField0_ & 0x00001000) != 0);
    }
    /**
     * <code>.iscp2.v1.extensions.DownstreamMetadataExtensionFields extension_fields = 12 [json_name = "extensionFields"];</code>
     * @return The extensionFields.
     */
    public com.github.aptpod.proto.iscp2.v1.extensions.DownstreamMetadataExtensionFields getExtensionFields() {
      if (extensionFieldsBuilder_ == null) {
        return extensionFields_ == null ? com.github.aptpod.proto.iscp2.v1.extensions.DownstreamMetadataExtensionFields.getDefaultInstance() : extensionFields_;
      } else {
        return extensionFieldsBuilder_.getMessage();
      }
    }
    /**
     * <code>.iscp2.v1.extensions.DownstreamMetadataExtensionFields extension_fields = 12 [json_name = "extensionFields"];</code>
     */
    public Builder setExtensionFields(com.github.aptpod.proto.iscp2.v1.extensions.DownstreamMetadataExtensionFields value) {
      if (extensionFieldsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        extensionFields_ = value;
      } else {
        extensionFieldsBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00001000;
      onChanged();
      return this;
    }
    /**
     * <code>.iscp2.v1.extensions.DownstreamMetadataExtensionFields extension_fields = 12 [json_name = "extensionFields"];</code>
     */
    public Builder setExtensionFields(
        com.github.aptpod.proto.iscp2.v1.extensions.DownstreamMetadataExtensionFields.Builder builderForValue) {
      if (extensionFieldsBuilder_ == null) {
        extensionFields_ = builderForValue.build();
      } else {
        extensionFieldsBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00001000;
      onChanged();
      return this;
    }
    /**
     * <code>.iscp2.v1.extensions.DownstreamMetadataExtensionFields extension_fields = 12 [json_name = "extensionFields"];</code>
     */
    public Builder mergeExtensionFields(com.github.aptpod.proto.iscp2.v1.extensions.DownstreamMetadataExtensionFields value) {
      if (extensionFieldsBuilder_ == null) {
        if (((bitField0_ & 0x00001000) != 0) &&
          extensionFields_ != null &&
          extensionFields_ != com.github.aptpod.proto.iscp2.v1.extensions.DownstreamMetadataExtensionFields.getDefaultInstance()) {
          getExtensionFieldsBuilder().mergeFrom(value);
        } else {
          extensionFields_ = value;
        }
      } else {
        extensionFieldsBuilder_.mergeFrom(value);
      }
      bitField0_ |= 0x00001000;
      onChanged();
      return this;
    }
    /**
     * <code>.iscp2.v1.extensions.DownstreamMetadataExtensionFields extension_fields = 12 [json_name = "extensionFields"];</code>
     */
    public Builder clearExtensionFields() {
      bitField0_ = (bitField0_ & ~0x00001000);
      extensionFields_ = null;
      if (extensionFieldsBuilder_ != null) {
        extensionFieldsBuilder_.dispose();
        extensionFieldsBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     * <code>.iscp2.v1.extensions.DownstreamMetadataExtensionFields extension_fields = 12 [json_name = "extensionFields"];</code>
     */
    public com.github.aptpod.proto.iscp2.v1.extensions.DownstreamMetadataExtensionFields.Builder getExtensionFieldsBuilder() {
      bitField0_ |= 0x00001000;
      onChanged();
      return getExtensionFieldsFieldBuilder().getBuilder();
    }
    /**
     * <code>.iscp2.v1.extensions.DownstreamMetadataExtensionFields extension_fields = 12 [json_name = "extensionFields"];</code>
     */
    public com.github.aptpod.proto.iscp2.v1.extensions.DownstreamMetadataExtensionFieldsOrBuilder getExtensionFieldsOrBuilder() {
      if (extensionFieldsBuilder_ != null) {
        return extensionFieldsBuilder_.getMessageOrBuilder();
      } else {
        return extensionFields_ == null ?
            com.github.aptpod.proto.iscp2.v1.extensions.DownstreamMetadataExtensionFields.getDefaultInstance() : extensionFields_;
      }
    }
    /**
     * <code>.iscp2.v1.extensions.DownstreamMetadataExtensionFields extension_fields = 12 [json_name = "extensionFields"];</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.github.aptpod.proto.iscp2.v1.extensions.DownstreamMetadataExtensionFields, com.github.aptpod.proto.iscp2.v1.extensions.DownstreamMetadataExtensionFields.Builder, com.github.aptpod.proto.iscp2.v1.extensions.DownstreamMetadataExtensionFieldsOrBuilder> 
        getExtensionFieldsFieldBuilder() {
      if (extensionFieldsBuilder_ == null) {
        extensionFieldsBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.github.aptpod.proto.iscp2.v1.extensions.DownstreamMetadataExtensionFields, com.github.aptpod.proto.iscp2.v1.extensions.DownstreamMetadataExtensionFields.Builder, com.github.aptpod.proto.iscp2.v1.extensions.DownstreamMetadataExtensionFieldsOrBuilder>(
                getExtensionFields(),
                getParentForChildren(),
                isClean());
        extensionFields_ = null;
      }
      return extensionFieldsBuilder_;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:iscp2.v1.DownstreamMetadata)
  }

  // @@protoc_insertion_point(class_scope:iscp2.v1.DownstreamMetadata)
  private static final com.github.aptpod.proto.iscp2.v1.DownstreamMetadata DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.github.aptpod.proto.iscp2.v1.DownstreamMetadata();
  }

  public static com.github.aptpod.proto.iscp2.v1.DownstreamMetadata getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<DownstreamMetadata>
      PARSER = new com.google.protobuf.AbstractParser<DownstreamMetadata>() {
    @java.lang.Override
    public DownstreamMetadata parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<DownstreamMetadata> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<DownstreamMetadata> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.github.aptpod.proto.iscp2.v1.DownstreamMetadata getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

