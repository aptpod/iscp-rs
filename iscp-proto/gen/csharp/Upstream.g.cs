// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: iscp2/v1/upstream.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Iscp2.V1 {

  /// <summary>Holder for reflection information generated from iscp2/v1/upstream.proto</summary>
  internal static partial class UpstreamReflection {

    #region Descriptor
    /// <summary>File descriptor for iscp2/v1/upstream.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static UpstreamReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Chdpc2NwMi92MS91cHN0cmVhbS5wcm90bxIIaXNjcDIudjEaFWlzY3AyL3Yx",
            "L2NvbW1vbi5wcm90bxoiaXNjcDIvdjEvZXh0ZW5zaW9ucy91cHN0cmVhbS5w",
            "cm90bxoXaXNjcDIvdjEvbWV0YWRhdGEucHJvdG8aGmlzY3AyL3YxL3Jlc3Vs",
            "dF9jb2RlLnByb3RvItECChNVcHN0cmVhbU9wZW5SZXF1ZXN0Eh0KCnJlcXVl",
            "c3RfaWQYASABKA1SCXJlcXVlc3RJZBIdCgpzZXNzaW9uX2lkGAIgASgJUglz",
            "ZXNzaW9uSWQSIQoMYWNrX2ludGVydmFsGAMgASgNUgthY2tJbnRlcnZhbBIn",
            "Cg9leHBpcnlfaW50ZXJ2YWwYBSABKA1SDmV4cGlyeUludGVydmFsEisKCGRh",
            "dGFfaWRzGAYgAygLMhAuaXNjcDIudjEuRGF0YUlEUgdkYXRhSWRzEh8KA3Fv",
            "cxgHIAEoDjINLmlzY3AyLnYxLlFvU1IDcW9zEmIKEGV4dGVuc2lvbl9maWVs",
            "ZHMYCCABKAsyNy5pc2NwMi52MS5leHRlbnNpb25zLlVwc3RyZWFtT3BlblJl",
            "cXVlc3RFeHRlbnNpb25GaWVsZHNSD2V4dGVuc2lvbkZpZWxkcyKtBAoUVXBz",
            "dHJlYW1PcGVuUmVzcG9uc2USHQoKcmVxdWVzdF9pZBgBIAEoDVIJcmVxdWVz",
            "dElkEiwKEmFzc2lnbmVkX3N0cmVhbV9pZBgCIAEoDFIQYXNzaWduZWRTdHJl",
            "YW1JZBI3Chhhc3NpZ25lZF9zdHJlYW1faWRfYWxpYXMYAyABKA1SFWFzc2ln",
            "bmVkU3RyZWFtSWRBbGlhcxJZCg9kYXRhX2lkX2FsaWFzZXMYBCADKAsyMS5p",
            "c2NwMi52MS5VcHN0cmVhbU9wZW5SZXNwb25zZS5EYXRhSWRBbGlhc2VzRW50",
            "cnlSDWRhdGFJZEFsaWFzZXMSHwoLc2VydmVyX3RpbWUYBSABKBJSCnNlcnZl",
            "clRpbWUSNQoLcmVzdWx0X2NvZGUYBiABKA4yFC5pc2NwMi52MS5SZXN1bHRD",
            "b2RlUgpyZXN1bHRDb2RlEiMKDXJlc3VsdF9zdHJpbmcYByABKAlSDHJlc3Vs",
            "dFN0cmluZxJjChBleHRlbnNpb25fZmllbGRzGAggASgLMjguaXNjcDIudjEu",
            "ZXh0ZW5zaW9ucy5VcHN0cmVhbU9wZW5SZXNwb25zZUV4dGVuc2lvbkZpZWxk",
            "c1IPZXh0ZW5zaW9uRmllbGRzGlIKEkRhdGFJZEFsaWFzZXNFbnRyeRIQCgNr",
            "ZXkYASABKA1SA2tleRImCgV2YWx1ZRgCIAEoCzIQLmlzY3AyLnYxLkRhdGFJ",
            "RFIFdmFsdWU6AjgBIrkBChVVcHN0cmVhbVJlc3VtZVJlcXVlc3QSHQoKcmVx",
            "dWVzdF9pZBgBIAEoDVIJcmVxdWVzdElkEhsKCXN0cmVhbV9pZBgCIAEoDFII",
            "c3RyZWFtSWQSZAoQZXh0ZW5zaW9uX2ZpZWxkcxgDIAEoCzI5LmlzY3AyLnYx",
            "LmV4dGVuc2lvbnMuVXBzdHJlYW1SZXN1bWVSZXF1ZXN0RXh0ZW5zaW9uRmll",
            "bGRzUg9leHRlbnNpb25GaWVsZHMiswIKFlVwc3RyZWFtUmVzdW1lUmVzcG9u",
            "c2USHQoKcmVxdWVzdF9pZBgBIAEoDVIJcmVxdWVzdElkEjcKGGFzc2lnbmVk",
            "X3N0cmVhbV9pZF9hbGlhcxgCIAEoDVIVYXNzaWduZWRTdHJlYW1JZEFsaWFz",
            "EjUKC3Jlc3VsdF9jb2RlGAMgASgOMhQuaXNjcDIudjEuUmVzdWx0Q29kZVIK",
            "cmVzdWx0Q29kZRIjCg1yZXN1bHRfc3RyaW5nGAQgASgJUgxyZXN1bHRTdHJp",
            "bmcSZQoQZXh0ZW5zaW9uX2ZpZWxkcxgFIAEoCzI6LmlzY3AyLnYxLmV4dGVu",
            "c2lvbnMuVXBzdHJlYW1SZXN1bWVSZXNwb25zZUV4dGVuc2lvbkZpZWxkc1IP",
            "ZXh0ZW5zaW9uRmllbGRzIpcCChRVcHN0cmVhbUNsb3NlUmVxdWVzdBIdCgpy",
            "ZXF1ZXN0X2lkGAEgASgNUglyZXF1ZXN0SWQSGwoJc3RyZWFtX2lkGAIgASgM",
            "UghzdHJlYW1JZBIqChF0b3RhbF9kYXRhX3BvaW50cxgDIAEoBFIPdG90YWxE",
            "YXRhUG9pbnRzEjIKFWZpbmFsX3NlcXVlbmNlX251bWJlchgEIAEoDVITZmlu",
            "YWxTZXF1ZW5jZU51bWJlchJjChBleHRlbnNpb25fZmllbGRzGAUgASgLMjgu",
            "aXNjcDIudjEuZXh0ZW5zaW9ucy5VcHN0cmVhbUNsb3NlUmVxdWVzdEV4dGVu",
            "c2lvbkZpZWxkc1IPZXh0ZW5zaW9uRmllbGRzIvgBChVVcHN0cmVhbUNsb3Nl",
            "UmVzcG9uc2USHQoKcmVxdWVzdF9pZBgBIAEoDVIJcmVxdWVzdElkEjUKC3Jl",
            "c3VsdF9jb2RlGAIgASgOMhQuaXNjcDIudjEuUmVzdWx0Q29kZVIKcmVzdWx0",
            "Q29kZRIjCg1yZXN1bHRfc3RyaW5nGAMgASgJUgxyZXN1bHRTdHJpbmcSZAoQ",
            "ZXh0ZW5zaW9uX2ZpZWxkcxgEIAEoCzI5LmlzY3AyLnYxLmV4dGVuc2lvbnMu",
            "VXBzdHJlYW1DbG9zZVJlc3BvbnNlRXh0ZW5zaW9uRmllbGRzUg9leHRlbnNp",
            "b25GaWVsZHMi/AEKDVVwc3RyZWFtQ2h1bmsSJgoPc3RyZWFtX2lkX2FsaWFz",
            "GAEgASgNUg1zdHJlYW1JZEFsaWFzEjgKDHN0cmVhbV9jaHVuaxgCIAEoCzIV",
            "LmlzY3AyLnYxLlN0cmVhbUNodW5rUgtzdHJlYW1DaHVuaxIrCghkYXRhX2lk",
            "cxgDIAMoCzIQLmlzY3AyLnYxLkRhdGFJRFIHZGF0YUlkcxJcChBleHRlbnNp",
            "b25fZmllbGRzGAQgASgLMjEuaXNjcDIudjEuZXh0ZW5zaW9ucy5VcHN0cmVh",
            "bUNodW5rRXh0ZW5zaW9uRmllbGRzUg9leHRlbnNpb25GaWVsZHMi/wIKEFVw",
            "c3RyZWFtQ2h1bmtBY2sSJgoPc3RyZWFtX2lkX2FsaWFzGAEgASgNUg1zdHJl",
            "YW1JZEFsaWFzEjcKB3Jlc3VsdHMYAiADKAsyHS5pc2NwMi52MS5VcHN0cmVh",
            "bUNodW5rUmVzdWx0UgdyZXN1bHRzElUKD2RhdGFfaWRfYWxpYXNlcxgDIAMo",
            "CzItLmlzY3AyLnYxLlVwc3RyZWFtQ2h1bmtBY2suRGF0YUlkQWxpYXNlc0Vu",
            "dHJ5Ug1kYXRhSWRBbGlhc2VzEl8KEGV4dGVuc2lvbl9maWVsZHMYBCABKAsy",
            "NC5pc2NwMi52MS5leHRlbnNpb25zLlVwc3RyZWFtQ2h1bmtBY2tFeHRlbnNp",
            "b25GaWVsZHNSD2V4dGVuc2lvbkZpZWxkcxpSChJEYXRhSWRBbGlhc2VzRW50",
            "cnkSEAoDa2V5GAEgASgNUgNrZXkSJgoFdmFsdWUYAiABKAsyEC5pc2NwMi52",
            "MS5EYXRhSURSBXZhbHVlOgI4ASLRAQoQVXBzdHJlYW1NZXRhZGF0YRIdCgpy",
            "ZXF1ZXN0X2lkGAEgASgNUglyZXF1ZXN0SWQSMQoJYmFzZV90aW1lGAIgASgL",
            "MhIuaXNjcDIudjEuQmFzZVRpbWVIAFIIYmFzZVRpbWUSXwoQZXh0ZW5zaW9u",
            "X2ZpZWxkcxgEIAEoCzI0LmlzY3AyLnYxLmV4dGVuc2lvbnMuVXBzdHJlYW1N",
            "ZXRhZGF0YUV4dGVuc2lvbkZpZWxkc1IPZXh0ZW5zaW9uRmllbGRzQgoKCG1l",
            "dGFkYXRhIvQBChNVcHN0cmVhbU1ldGFkYXRhQWNrEh0KCnJlcXVlc3RfaWQY",
            "ASABKA1SCXJlcXVlc3RJZBI1CgtyZXN1bHRfY29kZRgCIAEoDjIULmlzY3Ay",
            "LnYxLlJlc3VsdENvZGVSCnJlc3VsdENvZGUSIwoNcmVzdWx0X3N0cmluZxgD",
            "IAEoCVIMcmVzdWx0U3RyaW5nEmIKEGV4dGVuc2lvbl9maWVsZHMYBCABKAsy",
            "Ny5pc2NwMi52MS5leHRlbnNpb25zLlVwc3RyZWFtTWV0YWRhdGFBY2tFeHRl",
            "bnNpb25GaWVsZHNSD2V4dGVuc2lvbkZpZWxkcyL+AQoTVXBzdHJlYW1DaHVu",
            "a1Jlc3VsdBInCg9zZXF1ZW5jZV9udW1iZXIYASABKA1SDnNlcXVlbmNlTnVt",
            "YmVyEjUKC3Jlc3VsdF9jb2RlGAIgASgOMhQuaXNjcDIudjEuUmVzdWx0Q29k",
            "ZVIKcmVzdWx0Q29kZRIjCg1yZXN1bHRfc3RyaW5nGAMgASgJUgxyZXN1bHRT",
            "dHJpbmcSYgoQZXh0ZW5zaW9uX2ZpZWxkcxgEIAEoCzI3LmlzY3AyLnYxLmV4",
            "dGVuc2lvbnMuVXBzdHJlYW1DaHVua1Jlc3VsdEV4dGVuc2lvbkZpZWxkc1IP",
            "ZXh0ZW5zaW9uRmllbGRzQqgBCiBjb20uZ2l0aHViLmFwdHBvZC5wcm90by5p",
            "c2NwMi52MUINVXBzdHJlYW1Qcm90b1ABWjRnaXRodWIuY29tL2FwdHBvZC9p",
            "c2NwLXByb3RvL2dlbi9nby9pc2NwMi92MTtpc2NwMnYxogIDSVhYqgIISXNj",
            "cDIuVjHKAghJc2NwMlxWMeICFElzY3AyXFYxXEdQQk1ldGFkYXRh6gIJSXNj",
            "cDI6OlYxYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Iscp2.V1.CommonReflection.Descriptor, global::Iscp2.V1.Extensions.UpstreamReflection.Descriptor, global::Iscp2.V1.MetadataReflection.Descriptor, global::Iscp2.V1.ResultCodeReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Iscp2.V1.UpstreamOpenRequest), global::Iscp2.V1.UpstreamOpenRequest.Parser, new[]{ "RequestId", "SessionId", "AckInterval", "ExpiryInterval", "DataIds", "Qos", "ExtensionFields" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Iscp2.V1.UpstreamOpenResponse), global::Iscp2.V1.UpstreamOpenResponse.Parser, new[]{ "RequestId", "AssignedStreamId", "AssignedStreamIdAlias", "DataIdAliases", "ServerTime", "ResultCode", "ResultString", "ExtensionFields" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::Iscp2.V1.UpstreamResumeRequest), global::Iscp2.V1.UpstreamResumeRequest.Parser, new[]{ "RequestId", "StreamId", "ExtensionFields" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Iscp2.V1.UpstreamResumeResponse), global::Iscp2.V1.UpstreamResumeResponse.Parser, new[]{ "RequestId", "AssignedStreamIdAlias", "ResultCode", "ResultString", "ExtensionFields" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Iscp2.V1.UpstreamCloseRequest), global::Iscp2.V1.UpstreamCloseRequest.Parser, new[]{ "RequestId", "StreamId", "TotalDataPoints", "FinalSequenceNumber", "ExtensionFields" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Iscp2.V1.UpstreamCloseResponse), global::Iscp2.V1.UpstreamCloseResponse.Parser, new[]{ "RequestId", "ResultCode", "ResultString", "ExtensionFields" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Iscp2.V1.UpstreamChunk), global::Iscp2.V1.UpstreamChunk.Parser, new[]{ "StreamIdAlias", "StreamChunk", "DataIds", "ExtensionFields" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Iscp2.V1.UpstreamChunkAck), global::Iscp2.V1.UpstreamChunkAck.Parser, new[]{ "StreamIdAlias", "Results", "DataIdAliases", "ExtensionFields" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::Iscp2.V1.UpstreamMetadata), global::Iscp2.V1.UpstreamMetadata.Parser, new[]{ "RequestId", "BaseTime", "ExtensionFields" }, new[]{ "Metadata" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Iscp2.V1.UpstreamMetadataAck), global::Iscp2.V1.UpstreamMetadataAck.Parser, new[]{ "RequestId", "ResultCode", "ResultString", "ExtensionFields" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Iscp2.V1.UpstreamChunkResult), global::Iscp2.V1.UpstreamChunkResult.Parser, new[]{ "SequenceNumber", "ResultCode", "ResultString", "ExtensionFields" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  internal sealed partial class UpstreamOpenRequest : pb::IMessage<UpstreamOpenRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<UpstreamOpenRequest> _parser = new pb::MessageParser<UpstreamOpenRequest>(() => new UpstreamOpenRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<UpstreamOpenRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Iscp2.V1.UpstreamReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UpstreamOpenRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UpstreamOpenRequest(UpstreamOpenRequest other) : this() {
      requestId_ = other.requestId_;
      sessionId_ = other.sessionId_;
      ackInterval_ = other.ackInterval_;
      expiryInterval_ = other.expiryInterval_;
      dataIds_ = other.dataIds_.Clone();
      qos_ = other.qos_;
      extensionFields_ = other.extensionFields_ != null ? other.extensionFields_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UpstreamOpenRequest Clone() {
      return new UpstreamOpenRequest(this);
    }

    /// <summary>Field number for the "request_id" field.</summary>
    public const int RequestIdFieldNumber = 1;
    private uint requestId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint RequestId {
      get { return requestId_; }
      set {
        requestId_ = value;
      }
    }

    /// <summary>Field number for the "session_id" field.</summary>
    public const int SessionIdFieldNumber = 2;
    private string sessionId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string SessionId {
      get { return sessionId_; }
      set {
        sessionId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ack_interval" field.</summary>
    public const int AckIntervalFieldNumber = 3;
    private uint ackInterval_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint AckInterval {
      get { return ackInterval_; }
      set {
        ackInterval_ = value;
      }
    }

    /// <summary>Field number for the "expiry_interval" field.</summary>
    public const int ExpiryIntervalFieldNumber = 5;
    private uint expiryInterval_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint ExpiryInterval {
      get { return expiryInterval_; }
      set {
        expiryInterval_ = value;
      }
    }

    /// <summary>Field number for the "data_ids" field.</summary>
    public const int DataIdsFieldNumber = 6;
    private static readonly pb::FieldCodec<global::Iscp2.V1.DataID> _repeated_dataIds_codec
        = pb::FieldCodec.ForMessage(50, global::Iscp2.V1.DataID.Parser);
    private readonly pbc::RepeatedField<global::Iscp2.V1.DataID> dataIds_ = new pbc::RepeatedField<global::Iscp2.V1.DataID>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Iscp2.V1.DataID> DataIds {
      get { return dataIds_; }
    }

    /// <summary>Field number for the "qos" field.</summary>
    public const int QosFieldNumber = 7;
    private global::Iscp2.V1.QoS qos_ = global::Iscp2.V1.QoS.Unreliable;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Iscp2.V1.QoS Qos {
      get { return qos_; }
      set {
        qos_ = value;
      }
    }

    /// <summary>Field number for the "extension_fields" field.</summary>
    public const int ExtensionFieldsFieldNumber = 8;
    private global::Iscp2.V1.Extensions.UpstreamOpenRequestExtensionFields extensionFields_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Iscp2.V1.Extensions.UpstreamOpenRequestExtensionFields ExtensionFields {
      get { return extensionFields_; }
      set {
        extensionFields_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as UpstreamOpenRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(UpstreamOpenRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (RequestId != other.RequestId) return false;
      if (SessionId != other.SessionId) return false;
      if (AckInterval != other.AckInterval) return false;
      if (ExpiryInterval != other.ExpiryInterval) return false;
      if(!dataIds_.Equals(other.dataIds_)) return false;
      if (Qos != other.Qos) return false;
      if (!object.Equals(ExtensionFields, other.ExtensionFields)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (RequestId != 0) hash ^= RequestId.GetHashCode();
      if (SessionId.Length != 0) hash ^= SessionId.GetHashCode();
      if (AckInterval != 0) hash ^= AckInterval.GetHashCode();
      if (ExpiryInterval != 0) hash ^= ExpiryInterval.GetHashCode();
      hash ^= dataIds_.GetHashCode();
      if (Qos != global::Iscp2.V1.QoS.Unreliable) hash ^= Qos.GetHashCode();
      if (extensionFields_ != null) hash ^= ExtensionFields.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (RequestId != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(RequestId);
      }
      if (SessionId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(SessionId);
      }
      if (AckInterval != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(AckInterval);
      }
      if (ExpiryInterval != 0) {
        output.WriteRawTag(40);
        output.WriteUInt32(ExpiryInterval);
      }
      dataIds_.WriteTo(output, _repeated_dataIds_codec);
      if (Qos != global::Iscp2.V1.QoS.Unreliable) {
        output.WriteRawTag(56);
        output.WriteEnum((int) Qos);
      }
      if (extensionFields_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(ExtensionFields);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (RequestId != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(RequestId);
      }
      if (SessionId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(SessionId);
      }
      if (AckInterval != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(AckInterval);
      }
      if (ExpiryInterval != 0) {
        output.WriteRawTag(40);
        output.WriteUInt32(ExpiryInterval);
      }
      dataIds_.WriteTo(ref output, _repeated_dataIds_codec);
      if (Qos != global::Iscp2.V1.QoS.Unreliable) {
        output.WriteRawTag(56);
        output.WriteEnum((int) Qos);
      }
      if (extensionFields_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(ExtensionFields);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (RequestId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(RequestId);
      }
      if (SessionId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SessionId);
      }
      if (AckInterval != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(AckInterval);
      }
      if (ExpiryInterval != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ExpiryInterval);
      }
      size += dataIds_.CalculateSize(_repeated_dataIds_codec);
      if (Qos != global::Iscp2.V1.QoS.Unreliable) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Qos);
      }
      if (extensionFields_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ExtensionFields);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(UpstreamOpenRequest other) {
      if (other == null) {
        return;
      }
      if (other.RequestId != 0) {
        RequestId = other.RequestId;
      }
      if (other.SessionId.Length != 0) {
        SessionId = other.SessionId;
      }
      if (other.AckInterval != 0) {
        AckInterval = other.AckInterval;
      }
      if (other.ExpiryInterval != 0) {
        ExpiryInterval = other.ExpiryInterval;
      }
      dataIds_.Add(other.dataIds_);
      if (other.Qos != global::Iscp2.V1.QoS.Unreliable) {
        Qos = other.Qos;
      }
      if (other.extensionFields_ != null) {
        if (extensionFields_ == null) {
          ExtensionFields = new global::Iscp2.V1.Extensions.UpstreamOpenRequestExtensionFields();
        }
        ExtensionFields.MergeFrom(other.ExtensionFields);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            RequestId = input.ReadUInt32();
            break;
          }
          case 18: {
            SessionId = input.ReadString();
            break;
          }
          case 24: {
            AckInterval = input.ReadUInt32();
            break;
          }
          case 40: {
            ExpiryInterval = input.ReadUInt32();
            break;
          }
          case 50: {
            dataIds_.AddEntriesFrom(input, _repeated_dataIds_codec);
            break;
          }
          case 56: {
            Qos = (global::Iscp2.V1.QoS) input.ReadEnum();
            break;
          }
          case 66: {
            if (extensionFields_ == null) {
              ExtensionFields = new global::Iscp2.V1.Extensions.UpstreamOpenRequestExtensionFields();
            }
            input.ReadMessage(ExtensionFields);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            RequestId = input.ReadUInt32();
            break;
          }
          case 18: {
            SessionId = input.ReadString();
            break;
          }
          case 24: {
            AckInterval = input.ReadUInt32();
            break;
          }
          case 40: {
            ExpiryInterval = input.ReadUInt32();
            break;
          }
          case 50: {
            dataIds_.AddEntriesFrom(ref input, _repeated_dataIds_codec);
            break;
          }
          case 56: {
            Qos = (global::Iscp2.V1.QoS) input.ReadEnum();
            break;
          }
          case 66: {
            if (extensionFields_ == null) {
              ExtensionFields = new global::Iscp2.V1.Extensions.UpstreamOpenRequestExtensionFields();
            }
            input.ReadMessage(ExtensionFields);
            break;
          }
        }
      }
    }
    #endif

  }

  internal sealed partial class UpstreamOpenResponse : pb::IMessage<UpstreamOpenResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<UpstreamOpenResponse> _parser = new pb::MessageParser<UpstreamOpenResponse>(() => new UpstreamOpenResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<UpstreamOpenResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Iscp2.V1.UpstreamReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UpstreamOpenResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UpstreamOpenResponse(UpstreamOpenResponse other) : this() {
      requestId_ = other.requestId_;
      assignedStreamId_ = other.assignedStreamId_;
      assignedStreamIdAlias_ = other.assignedStreamIdAlias_;
      dataIdAliases_ = other.dataIdAliases_.Clone();
      serverTime_ = other.serverTime_;
      resultCode_ = other.resultCode_;
      resultString_ = other.resultString_;
      extensionFields_ = other.extensionFields_ != null ? other.extensionFields_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UpstreamOpenResponse Clone() {
      return new UpstreamOpenResponse(this);
    }

    /// <summary>Field number for the "request_id" field.</summary>
    public const int RequestIdFieldNumber = 1;
    private uint requestId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint RequestId {
      get { return requestId_; }
      set {
        requestId_ = value;
      }
    }

    /// <summary>Field number for the "assigned_stream_id" field.</summary>
    public const int AssignedStreamIdFieldNumber = 2;
    private pb::ByteString assignedStreamId_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pb::ByteString AssignedStreamId {
      get { return assignedStreamId_; }
      set {
        assignedStreamId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "assigned_stream_id_alias" field.</summary>
    public const int AssignedStreamIdAliasFieldNumber = 3;
    private uint assignedStreamIdAlias_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint AssignedStreamIdAlias {
      get { return assignedStreamIdAlias_; }
      set {
        assignedStreamIdAlias_ = value;
      }
    }

    /// <summary>Field number for the "data_id_aliases" field.</summary>
    public const int DataIdAliasesFieldNumber = 4;
    private static readonly pbc::MapField<uint, global::Iscp2.V1.DataID>.Codec _map_dataIdAliases_codec
        = new pbc::MapField<uint, global::Iscp2.V1.DataID>.Codec(pb::FieldCodec.ForUInt32(8, 0), pb::FieldCodec.ForMessage(18, global::Iscp2.V1.DataID.Parser), 34);
    private readonly pbc::MapField<uint, global::Iscp2.V1.DataID> dataIdAliases_ = new pbc::MapField<uint, global::Iscp2.V1.DataID>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::MapField<uint, global::Iscp2.V1.DataID> DataIdAliases {
      get { return dataIdAliases_; }
    }

    /// <summary>Field number for the "server_time" field.</summary>
    public const int ServerTimeFieldNumber = 5;
    private long serverTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long ServerTime {
      get { return serverTime_; }
      set {
        serverTime_ = value;
      }
    }

    /// <summary>Field number for the "result_code" field.</summary>
    public const int ResultCodeFieldNumber = 6;
    private global::Iscp2.V1.ResultCode resultCode_ = global::Iscp2.V1.ResultCode.Succeeded;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Iscp2.V1.ResultCode ResultCode {
      get { return resultCode_; }
      set {
        resultCode_ = value;
      }
    }

    /// <summary>Field number for the "result_string" field.</summary>
    public const int ResultStringFieldNumber = 7;
    private string resultString_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ResultString {
      get { return resultString_; }
      set {
        resultString_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "extension_fields" field.</summary>
    public const int ExtensionFieldsFieldNumber = 8;
    private global::Iscp2.V1.Extensions.UpstreamOpenResponseExtensionFields extensionFields_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Iscp2.V1.Extensions.UpstreamOpenResponseExtensionFields ExtensionFields {
      get { return extensionFields_; }
      set {
        extensionFields_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as UpstreamOpenResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(UpstreamOpenResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (RequestId != other.RequestId) return false;
      if (AssignedStreamId != other.AssignedStreamId) return false;
      if (AssignedStreamIdAlias != other.AssignedStreamIdAlias) return false;
      if (!DataIdAliases.Equals(other.DataIdAliases)) return false;
      if (ServerTime != other.ServerTime) return false;
      if (ResultCode != other.ResultCode) return false;
      if (ResultString != other.ResultString) return false;
      if (!object.Equals(ExtensionFields, other.ExtensionFields)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (RequestId != 0) hash ^= RequestId.GetHashCode();
      if (AssignedStreamId.Length != 0) hash ^= AssignedStreamId.GetHashCode();
      if (AssignedStreamIdAlias != 0) hash ^= AssignedStreamIdAlias.GetHashCode();
      hash ^= DataIdAliases.GetHashCode();
      if (ServerTime != 0L) hash ^= ServerTime.GetHashCode();
      if (ResultCode != global::Iscp2.V1.ResultCode.Succeeded) hash ^= ResultCode.GetHashCode();
      if (ResultString.Length != 0) hash ^= ResultString.GetHashCode();
      if (extensionFields_ != null) hash ^= ExtensionFields.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (RequestId != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(RequestId);
      }
      if (AssignedStreamId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteBytes(AssignedStreamId);
      }
      if (AssignedStreamIdAlias != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(AssignedStreamIdAlias);
      }
      dataIdAliases_.WriteTo(output, _map_dataIdAliases_codec);
      if (ServerTime != 0L) {
        output.WriteRawTag(40);
        output.WriteSInt64(ServerTime);
      }
      if (ResultCode != global::Iscp2.V1.ResultCode.Succeeded) {
        output.WriteRawTag(48);
        output.WriteEnum((int) ResultCode);
      }
      if (ResultString.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(ResultString);
      }
      if (extensionFields_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(ExtensionFields);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (RequestId != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(RequestId);
      }
      if (AssignedStreamId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteBytes(AssignedStreamId);
      }
      if (AssignedStreamIdAlias != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(AssignedStreamIdAlias);
      }
      dataIdAliases_.WriteTo(ref output, _map_dataIdAliases_codec);
      if (ServerTime != 0L) {
        output.WriteRawTag(40);
        output.WriteSInt64(ServerTime);
      }
      if (ResultCode != global::Iscp2.V1.ResultCode.Succeeded) {
        output.WriteRawTag(48);
        output.WriteEnum((int) ResultCode);
      }
      if (ResultString.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(ResultString);
      }
      if (extensionFields_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(ExtensionFields);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (RequestId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(RequestId);
      }
      if (AssignedStreamId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(AssignedStreamId);
      }
      if (AssignedStreamIdAlias != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(AssignedStreamIdAlias);
      }
      size += dataIdAliases_.CalculateSize(_map_dataIdAliases_codec);
      if (ServerTime != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeSInt64Size(ServerTime);
      }
      if (ResultCode != global::Iscp2.V1.ResultCode.Succeeded) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ResultCode);
      }
      if (ResultString.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ResultString);
      }
      if (extensionFields_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ExtensionFields);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(UpstreamOpenResponse other) {
      if (other == null) {
        return;
      }
      if (other.RequestId != 0) {
        RequestId = other.RequestId;
      }
      if (other.AssignedStreamId.Length != 0) {
        AssignedStreamId = other.AssignedStreamId;
      }
      if (other.AssignedStreamIdAlias != 0) {
        AssignedStreamIdAlias = other.AssignedStreamIdAlias;
      }
      dataIdAliases_.MergeFrom(other.dataIdAliases_);
      if (other.ServerTime != 0L) {
        ServerTime = other.ServerTime;
      }
      if (other.ResultCode != global::Iscp2.V1.ResultCode.Succeeded) {
        ResultCode = other.ResultCode;
      }
      if (other.ResultString.Length != 0) {
        ResultString = other.ResultString;
      }
      if (other.extensionFields_ != null) {
        if (extensionFields_ == null) {
          ExtensionFields = new global::Iscp2.V1.Extensions.UpstreamOpenResponseExtensionFields();
        }
        ExtensionFields.MergeFrom(other.ExtensionFields);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            RequestId = input.ReadUInt32();
            break;
          }
          case 18: {
            AssignedStreamId = input.ReadBytes();
            break;
          }
          case 24: {
            AssignedStreamIdAlias = input.ReadUInt32();
            break;
          }
          case 34: {
            dataIdAliases_.AddEntriesFrom(input, _map_dataIdAliases_codec);
            break;
          }
          case 40: {
            ServerTime = input.ReadSInt64();
            break;
          }
          case 48: {
            ResultCode = (global::Iscp2.V1.ResultCode) input.ReadEnum();
            break;
          }
          case 58: {
            ResultString = input.ReadString();
            break;
          }
          case 66: {
            if (extensionFields_ == null) {
              ExtensionFields = new global::Iscp2.V1.Extensions.UpstreamOpenResponseExtensionFields();
            }
            input.ReadMessage(ExtensionFields);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            RequestId = input.ReadUInt32();
            break;
          }
          case 18: {
            AssignedStreamId = input.ReadBytes();
            break;
          }
          case 24: {
            AssignedStreamIdAlias = input.ReadUInt32();
            break;
          }
          case 34: {
            dataIdAliases_.AddEntriesFrom(ref input, _map_dataIdAliases_codec);
            break;
          }
          case 40: {
            ServerTime = input.ReadSInt64();
            break;
          }
          case 48: {
            ResultCode = (global::Iscp2.V1.ResultCode) input.ReadEnum();
            break;
          }
          case 58: {
            ResultString = input.ReadString();
            break;
          }
          case 66: {
            if (extensionFields_ == null) {
              ExtensionFields = new global::Iscp2.V1.Extensions.UpstreamOpenResponseExtensionFields();
            }
            input.ReadMessage(ExtensionFields);
            break;
          }
        }
      }
    }
    #endif

  }

  internal sealed partial class UpstreamResumeRequest : pb::IMessage<UpstreamResumeRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<UpstreamResumeRequest> _parser = new pb::MessageParser<UpstreamResumeRequest>(() => new UpstreamResumeRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<UpstreamResumeRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Iscp2.V1.UpstreamReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UpstreamResumeRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UpstreamResumeRequest(UpstreamResumeRequest other) : this() {
      requestId_ = other.requestId_;
      streamId_ = other.streamId_;
      extensionFields_ = other.extensionFields_ != null ? other.extensionFields_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UpstreamResumeRequest Clone() {
      return new UpstreamResumeRequest(this);
    }

    /// <summary>Field number for the "request_id" field.</summary>
    public const int RequestIdFieldNumber = 1;
    private uint requestId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint RequestId {
      get { return requestId_; }
      set {
        requestId_ = value;
      }
    }

    /// <summary>Field number for the "stream_id" field.</summary>
    public const int StreamIdFieldNumber = 2;
    private pb::ByteString streamId_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pb::ByteString StreamId {
      get { return streamId_; }
      set {
        streamId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "extension_fields" field.</summary>
    public const int ExtensionFieldsFieldNumber = 3;
    private global::Iscp2.V1.Extensions.UpstreamResumeRequestExtensionFields extensionFields_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Iscp2.V1.Extensions.UpstreamResumeRequestExtensionFields ExtensionFields {
      get { return extensionFields_; }
      set {
        extensionFields_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as UpstreamResumeRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(UpstreamResumeRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (RequestId != other.RequestId) return false;
      if (StreamId != other.StreamId) return false;
      if (!object.Equals(ExtensionFields, other.ExtensionFields)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (RequestId != 0) hash ^= RequestId.GetHashCode();
      if (StreamId.Length != 0) hash ^= StreamId.GetHashCode();
      if (extensionFields_ != null) hash ^= ExtensionFields.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (RequestId != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(RequestId);
      }
      if (StreamId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteBytes(StreamId);
      }
      if (extensionFields_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(ExtensionFields);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (RequestId != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(RequestId);
      }
      if (StreamId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteBytes(StreamId);
      }
      if (extensionFields_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(ExtensionFields);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (RequestId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(RequestId);
      }
      if (StreamId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(StreamId);
      }
      if (extensionFields_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ExtensionFields);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(UpstreamResumeRequest other) {
      if (other == null) {
        return;
      }
      if (other.RequestId != 0) {
        RequestId = other.RequestId;
      }
      if (other.StreamId.Length != 0) {
        StreamId = other.StreamId;
      }
      if (other.extensionFields_ != null) {
        if (extensionFields_ == null) {
          ExtensionFields = new global::Iscp2.V1.Extensions.UpstreamResumeRequestExtensionFields();
        }
        ExtensionFields.MergeFrom(other.ExtensionFields);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            RequestId = input.ReadUInt32();
            break;
          }
          case 18: {
            StreamId = input.ReadBytes();
            break;
          }
          case 26: {
            if (extensionFields_ == null) {
              ExtensionFields = new global::Iscp2.V1.Extensions.UpstreamResumeRequestExtensionFields();
            }
            input.ReadMessage(ExtensionFields);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            RequestId = input.ReadUInt32();
            break;
          }
          case 18: {
            StreamId = input.ReadBytes();
            break;
          }
          case 26: {
            if (extensionFields_ == null) {
              ExtensionFields = new global::Iscp2.V1.Extensions.UpstreamResumeRequestExtensionFields();
            }
            input.ReadMessage(ExtensionFields);
            break;
          }
        }
      }
    }
    #endif

  }

  internal sealed partial class UpstreamResumeResponse : pb::IMessage<UpstreamResumeResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<UpstreamResumeResponse> _parser = new pb::MessageParser<UpstreamResumeResponse>(() => new UpstreamResumeResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<UpstreamResumeResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Iscp2.V1.UpstreamReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UpstreamResumeResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UpstreamResumeResponse(UpstreamResumeResponse other) : this() {
      requestId_ = other.requestId_;
      assignedStreamIdAlias_ = other.assignedStreamIdAlias_;
      resultCode_ = other.resultCode_;
      resultString_ = other.resultString_;
      extensionFields_ = other.extensionFields_ != null ? other.extensionFields_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UpstreamResumeResponse Clone() {
      return new UpstreamResumeResponse(this);
    }

    /// <summary>Field number for the "request_id" field.</summary>
    public const int RequestIdFieldNumber = 1;
    private uint requestId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint RequestId {
      get { return requestId_; }
      set {
        requestId_ = value;
      }
    }

    /// <summary>Field number for the "assigned_stream_id_alias" field.</summary>
    public const int AssignedStreamIdAliasFieldNumber = 2;
    private uint assignedStreamIdAlias_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint AssignedStreamIdAlias {
      get { return assignedStreamIdAlias_; }
      set {
        assignedStreamIdAlias_ = value;
      }
    }

    /// <summary>Field number for the "result_code" field.</summary>
    public const int ResultCodeFieldNumber = 3;
    private global::Iscp2.V1.ResultCode resultCode_ = global::Iscp2.V1.ResultCode.Succeeded;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Iscp2.V1.ResultCode ResultCode {
      get { return resultCode_; }
      set {
        resultCode_ = value;
      }
    }

    /// <summary>Field number for the "result_string" field.</summary>
    public const int ResultStringFieldNumber = 4;
    private string resultString_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ResultString {
      get { return resultString_; }
      set {
        resultString_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "extension_fields" field.</summary>
    public const int ExtensionFieldsFieldNumber = 5;
    private global::Iscp2.V1.Extensions.UpstreamResumeResponseExtensionFields extensionFields_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Iscp2.V1.Extensions.UpstreamResumeResponseExtensionFields ExtensionFields {
      get { return extensionFields_; }
      set {
        extensionFields_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as UpstreamResumeResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(UpstreamResumeResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (RequestId != other.RequestId) return false;
      if (AssignedStreamIdAlias != other.AssignedStreamIdAlias) return false;
      if (ResultCode != other.ResultCode) return false;
      if (ResultString != other.ResultString) return false;
      if (!object.Equals(ExtensionFields, other.ExtensionFields)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (RequestId != 0) hash ^= RequestId.GetHashCode();
      if (AssignedStreamIdAlias != 0) hash ^= AssignedStreamIdAlias.GetHashCode();
      if (ResultCode != global::Iscp2.V1.ResultCode.Succeeded) hash ^= ResultCode.GetHashCode();
      if (ResultString.Length != 0) hash ^= ResultString.GetHashCode();
      if (extensionFields_ != null) hash ^= ExtensionFields.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (RequestId != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(RequestId);
      }
      if (AssignedStreamIdAlias != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(AssignedStreamIdAlias);
      }
      if (ResultCode != global::Iscp2.V1.ResultCode.Succeeded) {
        output.WriteRawTag(24);
        output.WriteEnum((int) ResultCode);
      }
      if (ResultString.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(ResultString);
      }
      if (extensionFields_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(ExtensionFields);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (RequestId != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(RequestId);
      }
      if (AssignedStreamIdAlias != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(AssignedStreamIdAlias);
      }
      if (ResultCode != global::Iscp2.V1.ResultCode.Succeeded) {
        output.WriteRawTag(24);
        output.WriteEnum((int) ResultCode);
      }
      if (ResultString.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(ResultString);
      }
      if (extensionFields_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(ExtensionFields);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (RequestId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(RequestId);
      }
      if (AssignedStreamIdAlias != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(AssignedStreamIdAlias);
      }
      if (ResultCode != global::Iscp2.V1.ResultCode.Succeeded) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ResultCode);
      }
      if (ResultString.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ResultString);
      }
      if (extensionFields_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ExtensionFields);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(UpstreamResumeResponse other) {
      if (other == null) {
        return;
      }
      if (other.RequestId != 0) {
        RequestId = other.RequestId;
      }
      if (other.AssignedStreamIdAlias != 0) {
        AssignedStreamIdAlias = other.AssignedStreamIdAlias;
      }
      if (other.ResultCode != global::Iscp2.V1.ResultCode.Succeeded) {
        ResultCode = other.ResultCode;
      }
      if (other.ResultString.Length != 0) {
        ResultString = other.ResultString;
      }
      if (other.extensionFields_ != null) {
        if (extensionFields_ == null) {
          ExtensionFields = new global::Iscp2.V1.Extensions.UpstreamResumeResponseExtensionFields();
        }
        ExtensionFields.MergeFrom(other.ExtensionFields);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            RequestId = input.ReadUInt32();
            break;
          }
          case 16: {
            AssignedStreamIdAlias = input.ReadUInt32();
            break;
          }
          case 24: {
            ResultCode = (global::Iscp2.V1.ResultCode) input.ReadEnum();
            break;
          }
          case 34: {
            ResultString = input.ReadString();
            break;
          }
          case 42: {
            if (extensionFields_ == null) {
              ExtensionFields = new global::Iscp2.V1.Extensions.UpstreamResumeResponseExtensionFields();
            }
            input.ReadMessage(ExtensionFields);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            RequestId = input.ReadUInt32();
            break;
          }
          case 16: {
            AssignedStreamIdAlias = input.ReadUInt32();
            break;
          }
          case 24: {
            ResultCode = (global::Iscp2.V1.ResultCode) input.ReadEnum();
            break;
          }
          case 34: {
            ResultString = input.ReadString();
            break;
          }
          case 42: {
            if (extensionFields_ == null) {
              ExtensionFields = new global::Iscp2.V1.Extensions.UpstreamResumeResponseExtensionFields();
            }
            input.ReadMessage(ExtensionFields);
            break;
          }
        }
      }
    }
    #endif

  }

  internal sealed partial class UpstreamCloseRequest : pb::IMessage<UpstreamCloseRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<UpstreamCloseRequest> _parser = new pb::MessageParser<UpstreamCloseRequest>(() => new UpstreamCloseRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<UpstreamCloseRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Iscp2.V1.UpstreamReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UpstreamCloseRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UpstreamCloseRequest(UpstreamCloseRequest other) : this() {
      requestId_ = other.requestId_;
      streamId_ = other.streamId_;
      totalDataPoints_ = other.totalDataPoints_;
      finalSequenceNumber_ = other.finalSequenceNumber_;
      extensionFields_ = other.extensionFields_ != null ? other.extensionFields_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UpstreamCloseRequest Clone() {
      return new UpstreamCloseRequest(this);
    }

    /// <summary>Field number for the "request_id" field.</summary>
    public const int RequestIdFieldNumber = 1;
    private uint requestId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint RequestId {
      get { return requestId_; }
      set {
        requestId_ = value;
      }
    }

    /// <summary>Field number for the "stream_id" field.</summary>
    public const int StreamIdFieldNumber = 2;
    private pb::ByteString streamId_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pb::ByteString StreamId {
      get { return streamId_; }
      set {
        streamId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "total_data_points" field.</summary>
    public const int TotalDataPointsFieldNumber = 3;
    private ulong totalDataPoints_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong TotalDataPoints {
      get { return totalDataPoints_; }
      set {
        totalDataPoints_ = value;
      }
    }

    /// <summary>Field number for the "final_sequence_number" field.</summary>
    public const int FinalSequenceNumberFieldNumber = 4;
    private uint finalSequenceNumber_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint FinalSequenceNumber {
      get { return finalSequenceNumber_; }
      set {
        finalSequenceNumber_ = value;
      }
    }

    /// <summary>Field number for the "extension_fields" field.</summary>
    public const int ExtensionFieldsFieldNumber = 5;
    private global::Iscp2.V1.Extensions.UpstreamCloseRequestExtensionFields extensionFields_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Iscp2.V1.Extensions.UpstreamCloseRequestExtensionFields ExtensionFields {
      get { return extensionFields_; }
      set {
        extensionFields_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as UpstreamCloseRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(UpstreamCloseRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (RequestId != other.RequestId) return false;
      if (StreamId != other.StreamId) return false;
      if (TotalDataPoints != other.TotalDataPoints) return false;
      if (FinalSequenceNumber != other.FinalSequenceNumber) return false;
      if (!object.Equals(ExtensionFields, other.ExtensionFields)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (RequestId != 0) hash ^= RequestId.GetHashCode();
      if (StreamId.Length != 0) hash ^= StreamId.GetHashCode();
      if (TotalDataPoints != 0UL) hash ^= TotalDataPoints.GetHashCode();
      if (FinalSequenceNumber != 0) hash ^= FinalSequenceNumber.GetHashCode();
      if (extensionFields_ != null) hash ^= ExtensionFields.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (RequestId != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(RequestId);
      }
      if (StreamId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteBytes(StreamId);
      }
      if (TotalDataPoints != 0UL) {
        output.WriteRawTag(24);
        output.WriteUInt64(TotalDataPoints);
      }
      if (FinalSequenceNumber != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(FinalSequenceNumber);
      }
      if (extensionFields_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(ExtensionFields);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (RequestId != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(RequestId);
      }
      if (StreamId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteBytes(StreamId);
      }
      if (TotalDataPoints != 0UL) {
        output.WriteRawTag(24);
        output.WriteUInt64(TotalDataPoints);
      }
      if (FinalSequenceNumber != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(FinalSequenceNumber);
      }
      if (extensionFields_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(ExtensionFields);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (RequestId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(RequestId);
      }
      if (StreamId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(StreamId);
      }
      if (TotalDataPoints != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(TotalDataPoints);
      }
      if (FinalSequenceNumber != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(FinalSequenceNumber);
      }
      if (extensionFields_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ExtensionFields);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(UpstreamCloseRequest other) {
      if (other == null) {
        return;
      }
      if (other.RequestId != 0) {
        RequestId = other.RequestId;
      }
      if (other.StreamId.Length != 0) {
        StreamId = other.StreamId;
      }
      if (other.TotalDataPoints != 0UL) {
        TotalDataPoints = other.TotalDataPoints;
      }
      if (other.FinalSequenceNumber != 0) {
        FinalSequenceNumber = other.FinalSequenceNumber;
      }
      if (other.extensionFields_ != null) {
        if (extensionFields_ == null) {
          ExtensionFields = new global::Iscp2.V1.Extensions.UpstreamCloseRequestExtensionFields();
        }
        ExtensionFields.MergeFrom(other.ExtensionFields);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            RequestId = input.ReadUInt32();
            break;
          }
          case 18: {
            StreamId = input.ReadBytes();
            break;
          }
          case 24: {
            TotalDataPoints = input.ReadUInt64();
            break;
          }
          case 32: {
            FinalSequenceNumber = input.ReadUInt32();
            break;
          }
          case 42: {
            if (extensionFields_ == null) {
              ExtensionFields = new global::Iscp2.V1.Extensions.UpstreamCloseRequestExtensionFields();
            }
            input.ReadMessage(ExtensionFields);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            RequestId = input.ReadUInt32();
            break;
          }
          case 18: {
            StreamId = input.ReadBytes();
            break;
          }
          case 24: {
            TotalDataPoints = input.ReadUInt64();
            break;
          }
          case 32: {
            FinalSequenceNumber = input.ReadUInt32();
            break;
          }
          case 42: {
            if (extensionFields_ == null) {
              ExtensionFields = new global::Iscp2.V1.Extensions.UpstreamCloseRequestExtensionFields();
            }
            input.ReadMessage(ExtensionFields);
            break;
          }
        }
      }
    }
    #endif

  }

  internal sealed partial class UpstreamCloseResponse : pb::IMessage<UpstreamCloseResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<UpstreamCloseResponse> _parser = new pb::MessageParser<UpstreamCloseResponse>(() => new UpstreamCloseResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<UpstreamCloseResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Iscp2.V1.UpstreamReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UpstreamCloseResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UpstreamCloseResponse(UpstreamCloseResponse other) : this() {
      requestId_ = other.requestId_;
      resultCode_ = other.resultCode_;
      resultString_ = other.resultString_;
      extensionFields_ = other.extensionFields_ != null ? other.extensionFields_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UpstreamCloseResponse Clone() {
      return new UpstreamCloseResponse(this);
    }

    /// <summary>Field number for the "request_id" field.</summary>
    public const int RequestIdFieldNumber = 1;
    private uint requestId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint RequestId {
      get { return requestId_; }
      set {
        requestId_ = value;
      }
    }

    /// <summary>Field number for the "result_code" field.</summary>
    public const int ResultCodeFieldNumber = 2;
    private global::Iscp2.V1.ResultCode resultCode_ = global::Iscp2.V1.ResultCode.Succeeded;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Iscp2.V1.ResultCode ResultCode {
      get { return resultCode_; }
      set {
        resultCode_ = value;
      }
    }

    /// <summary>Field number for the "result_string" field.</summary>
    public const int ResultStringFieldNumber = 3;
    private string resultString_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ResultString {
      get { return resultString_; }
      set {
        resultString_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "extension_fields" field.</summary>
    public const int ExtensionFieldsFieldNumber = 4;
    private global::Iscp2.V1.Extensions.UpstreamCloseResponseExtensionFields extensionFields_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Iscp2.V1.Extensions.UpstreamCloseResponseExtensionFields ExtensionFields {
      get { return extensionFields_; }
      set {
        extensionFields_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as UpstreamCloseResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(UpstreamCloseResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (RequestId != other.RequestId) return false;
      if (ResultCode != other.ResultCode) return false;
      if (ResultString != other.ResultString) return false;
      if (!object.Equals(ExtensionFields, other.ExtensionFields)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (RequestId != 0) hash ^= RequestId.GetHashCode();
      if (ResultCode != global::Iscp2.V1.ResultCode.Succeeded) hash ^= ResultCode.GetHashCode();
      if (ResultString.Length != 0) hash ^= ResultString.GetHashCode();
      if (extensionFields_ != null) hash ^= ExtensionFields.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (RequestId != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(RequestId);
      }
      if (ResultCode != global::Iscp2.V1.ResultCode.Succeeded) {
        output.WriteRawTag(16);
        output.WriteEnum((int) ResultCode);
      }
      if (ResultString.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(ResultString);
      }
      if (extensionFields_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(ExtensionFields);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (RequestId != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(RequestId);
      }
      if (ResultCode != global::Iscp2.V1.ResultCode.Succeeded) {
        output.WriteRawTag(16);
        output.WriteEnum((int) ResultCode);
      }
      if (ResultString.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(ResultString);
      }
      if (extensionFields_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(ExtensionFields);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (RequestId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(RequestId);
      }
      if (ResultCode != global::Iscp2.V1.ResultCode.Succeeded) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ResultCode);
      }
      if (ResultString.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ResultString);
      }
      if (extensionFields_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ExtensionFields);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(UpstreamCloseResponse other) {
      if (other == null) {
        return;
      }
      if (other.RequestId != 0) {
        RequestId = other.RequestId;
      }
      if (other.ResultCode != global::Iscp2.V1.ResultCode.Succeeded) {
        ResultCode = other.ResultCode;
      }
      if (other.ResultString.Length != 0) {
        ResultString = other.ResultString;
      }
      if (other.extensionFields_ != null) {
        if (extensionFields_ == null) {
          ExtensionFields = new global::Iscp2.V1.Extensions.UpstreamCloseResponseExtensionFields();
        }
        ExtensionFields.MergeFrom(other.ExtensionFields);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            RequestId = input.ReadUInt32();
            break;
          }
          case 16: {
            ResultCode = (global::Iscp2.V1.ResultCode) input.ReadEnum();
            break;
          }
          case 26: {
            ResultString = input.ReadString();
            break;
          }
          case 34: {
            if (extensionFields_ == null) {
              ExtensionFields = new global::Iscp2.V1.Extensions.UpstreamCloseResponseExtensionFields();
            }
            input.ReadMessage(ExtensionFields);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            RequestId = input.ReadUInt32();
            break;
          }
          case 16: {
            ResultCode = (global::Iscp2.V1.ResultCode) input.ReadEnum();
            break;
          }
          case 26: {
            ResultString = input.ReadString();
            break;
          }
          case 34: {
            if (extensionFields_ == null) {
              ExtensionFields = new global::Iscp2.V1.Extensions.UpstreamCloseResponseExtensionFields();
            }
            input.ReadMessage(ExtensionFields);
            break;
          }
        }
      }
    }
    #endif

  }

  internal sealed partial class UpstreamChunk : pb::IMessage<UpstreamChunk>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<UpstreamChunk> _parser = new pb::MessageParser<UpstreamChunk>(() => new UpstreamChunk());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<UpstreamChunk> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Iscp2.V1.UpstreamReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UpstreamChunk() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UpstreamChunk(UpstreamChunk other) : this() {
      streamIdAlias_ = other.streamIdAlias_;
      streamChunk_ = other.streamChunk_ != null ? other.streamChunk_.Clone() : null;
      dataIds_ = other.dataIds_.Clone();
      extensionFields_ = other.extensionFields_ != null ? other.extensionFields_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UpstreamChunk Clone() {
      return new UpstreamChunk(this);
    }

    /// <summary>Field number for the "stream_id_alias" field.</summary>
    public const int StreamIdAliasFieldNumber = 1;
    private uint streamIdAlias_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint StreamIdAlias {
      get { return streamIdAlias_; }
      set {
        streamIdAlias_ = value;
      }
    }

    /// <summary>Field number for the "stream_chunk" field.</summary>
    public const int StreamChunkFieldNumber = 2;
    private global::Iscp2.V1.StreamChunk streamChunk_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Iscp2.V1.StreamChunk StreamChunk {
      get { return streamChunk_; }
      set {
        streamChunk_ = value;
      }
    }

    /// <summary>Field number for the "data_ids" field.</summary>
    public const int DataIdsFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Iscp2.V1.DataID> _repeated_dataIds_codec
        = pb::FieldCodec.ForMessage(26, global::Iscp2.V1.DataID.Parser);
    private readonly pbc::RepeatedField<global::Iscp2.V1.DataID> dataIds_ = new pbc::RepeatedField<global::Iscp2.V1.DataID>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Iscp2.V1.DataID> DataIds {
      get { return dataIds_; }
    }

    /// <summary>Field number for the "extension_fields" field.</summary>
    public const int ExtensionFieldsFieldNumber = 4;
    private global::Iscp2.V1.Extensions.UpstreamChunkExtensionFields extensionFields_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Iscp2.V1.Extensions.UpstreamChunkExtensionFields ExtensionFields {
      get { return extensionFields_; }
      set {
        extensionFields_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as UpstreamChunk);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(UpstreamChunk other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (StreamIdAlias != other.StreamIdAlias) return false;
      if (!object.Equals(StreamChunk, other.StreamChunk)) return false;
      if(!dataIds_.Equals(other.dataIds_)) return false;
      if (!object.Equals(ExtensionFields, other.ExtensionFields)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (StreamIdAlias != 0) hash ^= StreamIdAlias.GetHashCode();
      if (streamChunk_ != null) hash ^= StreamChunk.GetHashCode();
      hash ^= dataIds_.GetHashCode();
      if (extensionFields_ != null) hash ^= ExtensionFields.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (StreamIdAlias != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(StreamIdAlias);
      }
      if (streamChunk_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(StreamChunk);
      }
      dataIds_.WriteTo(output, _repeated_dataIds_codec);
      if (extensionFields_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(ExtensionFields);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (StreamIdAlias != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(StreamIdAlias);
      }
      if (streamChunk_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(StreamChunk);
      }
      dataIds_.WriteTo(ref output, _repeated_dataIds_codec);
      if (extensionFields_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(ExtensionFields);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (StreamIdAlias != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(StreamIdAlias);
      }
      if (streamChunk_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(StreamChunk);
      }
      size += dataIds_.CalculateSize(_repeated_dataIds_codec);
      if (extensionFields_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ExtensionFields);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(UpstreamChunk other) {
      if (other == null) {
        return;
      }
      if (other.StreamIdAlias != 0) {
        StreamIdAlias = other.StreamIdAlias;
      }
      if (other.streamChunk_ != null) {
        if (streamChunk_ == null) {
          StreamChunk = new global::Iscp2.V1.StreamChunk();
        }
        StreamChunk.MergeFrom(other.StreamChunk);
      }
      dataIds_.Add(other.dataIds_);
      if (other.extensionFields_ != null) {
        if (extensionFields_ == null) {
          ExtensionFields = new global::Iscp2.V1.Extensions.UpstreamChunkExtensionFields();
        }
        ExtensionFields.MergeFrom(other.ExtensionFields);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            StreamIdAlias = input.ReadUInt32();
            break;
          }
          case 18: {
            if (streamChunk_ == null) {
              StreamChunk = new global::Iscp2.V1.StreamChunk();
            }
            input.ReadMessage(StreamChunk);
            break;
          }
          case 26: {
            dataIds_.AddEntriesFrom(input, _repeated_dataIds_codec);
            break;
          }
          case 34: {
            if (extensionFields_ == null) {
              ExtensionFields = new global::Iscp2.V1.Extensions.UpstreamChunkExtensionFields();
            }
            input.ReadMessage(ExtensionFields);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            StreamIdAlias = input.ReadUInt32();
            break;
          }
          case 18: {
            if (streamChunk_ == null) {
              StreamChunk = new global::Iscp2.V1.StreamChunk();
            }
            input.ReadMessage(StreamChunk);
            break;
          }
          case 26: {
            dataIds_.AddEntriesFrom(ref input, _repeated_dataIds_codec);
            break;
          }
          case 34: {
            if (extensionFields_ == null) {
              ExtensionFields = new global::Iscp2.V1.Extensions.UpstreamChunkExtensionFields();
            }
            input.ReadMessage(ExtensionFields);
            break;
          }
        }
      }
    }
    #endif

  }

  internal sealed partial class UpstreamChunkAck : pb::IMessage<UpstreamChunkAck>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<UpstreamChunkAck> _parser = new pb::MessageParser<UpstreamChunkAck>(() => new UpstreamChunkAck());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<UpstreamChunkAck> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Iscp2.V1.UpstreamReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UpstreamChunkAck() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UpstreamChunkAck(UpstreamChunkAck other) : this() {
      streamIdAlias_ = other.streamIdAlias_;
      results_ = other.results_.Clone();
      dataIdAliases_ = other.dataIdAliases_.Clone();
      extensionFields_ = other.extensionFields_ != null ? other.extensionFields_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UpstreamChunkAck Clone() {
      return new UpstreamChunkAck(this);
    }

    /// <summary>Field number for the "stream_id_alias" field.</summary>
    public const int StreamIdAliasFieldNumber = 1;
    private uint streamIdAlias_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint StreamIdAlias {
      get { return streamIdAlias_; }
      set {
        streamIdAlias_ = value;
      }
    }

    /// <summary>Field number for the "results" field.</summary>
    public const int ResultsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Iscp2.V1.UpstreamChunkResult> _repeated_results_codec
        = pb::FieldCodec.ForMessage(18, global::Iscp2.V1.UpstreamChunkResult.Parser);
    private readonly pbc::RepeatedField<global::Iscp2.V1.UpstreamChunkResult> results_ = new pbc::RepeatedField<global::Iscp2.V1.UpstreamChunkResult>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Iscp2.V1.UpstreamChunkResult> Results {
      get { return results_; }
    }

    /// <summary>Field number for the "data_id_aliases" field.</summary>
    public const int DataIdAliasesFieldNumber = 3;
    private static readonly pbc::MapField<uint, global::Iscp2.V1.DataID>.Codec _map_dataIdAliases_codec
        = new pbc::MapField<uint, global::Iscp2.V1.DataID>.Codec(pb::FieldCodec.ForUInt32(8, 0), pb::FieldCodec.ForMessage(18, global::Iscp2.V1.DataID.Parser), 26);
    private readonly pbc::MapField<uint, global::Iscp2.V1.DataID> dataIdAliases_ = new pbc::MapField<uint, global::Iscp2.V1.DataID>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::MapField<uint, global::Iscp2.V1.DataID> DataIdAliases {
      get { return dataIdAliases_; }
    }

    /// <summary>Field number for the "extension_fields" field.</summary>
    public const int ExtensionFieldsFieldNumber = 4;
    private global::Iscp2.V1.Extensions.UpstreamChunkAckExtensionFields extensionFields_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Iscp2.V1.Extensions.UpstreamChunkAckExtensionFields ExtensionFields {
      get { return extensionFields_; }
      set {
        extensionFields_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as UpstreamChunkAck);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(UpstreamChunkAck other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (StreamIdAlias != other.StreamIdAlias) return false;
      if(!results_.Equals(other.results_)) return false;
      if (!DataIdAliases.Equals(other.DataIdAliases)) return false;
      if (!object.Equals(ExtensionFields, other.ExtensionFields)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (StreamIdAlias != 0) hash ^= StreamIdAlias.GetHashCode();
      hash ^= results_.GetHashCode();
      hash ^= DataIdAliases.GetHashCode();
      if (extensionFields_ != null) hash ^= ExtensionFields.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (StreamIdAlias != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(StreamIdAlias);
      }
      results_.WriteTo(output, _repeated_results_codec);
      dataIdAliases_.WriteTo(output, _map_dataIdAliases_codec);
      if (extensionFields_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(ExtensionFields);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (StreamIdAlias != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(StreamIdAlias);
      }
      results_.WriteTo(ref output, _repeated_results_codec);
      dataIdAliases_.WriteTo(ref output, _map_dataIdAliases_codec);
      if (extensionFields_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(ExtensionFields);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (StreamIdAlias != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(StreamIdAlias);
      }
      size += results_.CalculateSize(_repeated_results_codec);
      size += dataIdAliases_.CalculateSize(_map_dataIdAliases_codec);
      if (extensionFields_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ExtensionFields);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(UpstreamChunkAck other) {
      if (other == null) {
        return;
      }
      if (other.StreamIdAlias != 0) {
        StreamIdAlias = other.StreamIdAlias;
      }
      results_.Add(other.results_);
      dataIdAliases_.MergeFrom(other.dataIdAliases_);
      if (other.extensionFields_ != null) {
        if (extensionFields_ == null) {
          ExtensionFields = new global::Iscp2.V1.Extensions.UpstreamChunkAckExtensionFields();
        }
        ExtensionFields.MergeFrom(other.ExtensionFields);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            StreamIdAlias = input.ReadUInt32();
            break;
          }
          case 18: {
            results_.AddEntriesFrom(input, _repeated_results_codec);
            break;
          }
          case 26: {
            dataIdAliases_.AddEntriesFrom(input, _map_dataIdAliases_codec);
            break;
          }
          case 34: {
            if (extensionFields_ == null) {
              ExtensionFields = new global::Iscp2.V1.Extensions.UpstreamChunkAckExtensionFields();
            }
            input.ReadMessage(ExtensionFields);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            StreamIdAlias = input.ReadUInt32();
            break;
          }
          case 18: {
            results_.AddEntriesFrom(ref input, _repeated_results_codec);
            break;
          }
          case 26: {
            dataIdAliases_.AddEntriesFrom(ref input, _map_dataIdAliases_codec);
            break;
          }
          case 34: {
            if (extensionFields_ == null) {
              ExtensionFields = new global::Iscp2.V1.Extensions.UpstreamChunkAckExtensionFields();
            }
            input.ReadMessage(ExtensionFields);
            break;
          }
        }
      }
    }
    #endif

  }

  internal sealed partial class UpstreamMetadata : pb::IMessage<UpstreamMetadata>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<UpstreamMetadata> _parser = new pb::MessageParser<UpstreamMetadata>(() => new UpstreamMetadata());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<UpstreamMetadata> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Iscp2.V1.UpstreamReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UpstreamMetadata() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UpstreamMetadata(UpstreamMetadata other) : this() {
      requestId_ = other.requestId_;
      extensionFields_ = other.extensionFields_ != null ? other.extensionFields_.Clone() : null;
      switch (other.MetadataCase) {
        case MetadataOneofCase.BaseTime:
          BaseTime = other.BaseTime.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UpstreamMetadata Clone() {
      return new UpstreamMetadata(this);
    }

    /// <summary>Field number for the "request_id" field.</summary>
    public const int RequestIdFieldNumber = 1;
    private uint requestId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint RequestId {
      get { return requestId_; }
      set {
        requestId_ = value;
      }
    }

    /// <summary>Field number for the "base_time" field.</summary>
    public const int BaseTimeFieldNumber = 2;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Iscp2.V1.BaseTime BaseTime {
      get { return metadataCase_ == MetadataOneofCase.BaseTime ? (global::Iscp2.V1.BaseTime) metadata_ : null; }
      set {
        metadata_ = value;
        metadataCase_ = value == null ? MetadataOneofCase.None : MetadataOneofCase.BaseTime;
      }
    }

    /// <summary>Field number for the "extension_fields" field.</summary>
    public const int ExtensionFieldsFieldNumber = 4;
    private global::Iscp2.V1.Extensions.UpstreamMetadataExtensionFields extensionFields_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Iscp2.V1.Extensions.UpstreamMetadataExtensionFields ExtensionFields {
      get { return extensionFields_; }
      set {
        extensionFields_ = value;
      }
    }

    private object metadata_;
    /// <summary>Enum of possible cases for the "metadata" oneof.</summary>
    public enum MetadataOneofCase {
      None = 0,
      BaseTime = 2,
    }
    private MetadataOneofCase metadataCase_ = MetadataOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MetadataOneofCase MetadataCase {
      get { return metadataCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearMetadata() {
      metadataCase_ = MetadataOneofCase.None;
      metadata_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as UpstreamMetadata);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(UpstreamMetadata other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (RequestId != other.RequestId) return false;
      if (!object.Equals(BaseTime, other.BaseTime)) return false;
      if (!object.Equals(ExtensionFields, other.ExtensionFields)) return false;
      if (MetadataCase != other.MetadataCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (RequestId != 0) hash ^= RequestId.GetHashCode();
      if (metadataCase_ == MetadataOneofCase.BaseTime) hash ^= BaseTime.GetHashCode();
      if (extensionFields_ != null) hash ^= ExtensionFields.GetHashCode();
      hash ^= (int) metadataCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (RequestId != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(RequestId);
      }
      if (metadataCase_ == MetadataOneofCase.BaseTime) {
        output.WriteRawTag(18);
        output.WriteMessage(BaseTime);
      }
      if (extensionFields_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(ExtensionFields);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (RequestId != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(RequestId);
      }
      if (metadataCase_ == MetadataOneofCase.BaseTime) {
        output.WriteRawTag(18);
        output.WriteMessage(BaseTime);
      }
      if (extensionFields_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(ExtensionFields);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (RequestId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(RequestId);
      }
      if (metadataCase_ == MetadataOneofCase.BaseTime) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(BaseTime);
      }
      if (extensionFields_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ExtensionFields);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(UpstreamMetadata other) {
      if (other == null) {
        return;
      }
      if (other.RequestId != 0) {
        RequestId = other.RequestId;
      }
      if (other.extensionFields_ != null) {
        if (extensionFields_ == null) {
          ExtensionFields = new global::Iscp2.V1.Extensions.UpstreamMetadataExtensionFields();
        }
        ExtensionFields.MergeFrom(other.ExtensionFields);
      }
      switch (other.MetadataCase) {
        case MetadataOneofCase.BaseTime:
          if (BaseTime == null) {
            BaseTime = new global::Iscp2.V1.BaseTime();
          }
          BaseTime.MergeFrom(other.BaseTime);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            RequestId = input.ReadUInt32();
            break;
          }
          case 18: {
            global::Iscp2.V1.BaseTime subBuilder = new global::Iscp2.V1.BaseTime();
            if (metadataCase_ == MetadataOneofCase.BaseTime) {
              subBuilder.MergeFrom(BaseTime);
            }
            input.ReadMessage(subBuilder);
            BaseTime = subBuilder;
            break;
          }
          case 34: {
            if (extensionFields_ == null) {
              ExtensionFields = new global::Iscp2.V1.Extensions.UpstreamMetadataExtensionFields();
            }
            input.ReadMessage(ExtensionFields);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            RequestId = input.ReadUInt32();
            break;
          }
          case 18: {
            global::Iscp2.V1.BaseTime subBuilder = new global::Iscp2.V1.BaseTime();
            if (metadataCase_ == MetadataOneofCase.BaseTime) {
              subBuilder.MergeFrom(BaseTime);
            }
            input.ReadMessage(subBuilder);
            BaseTime = subBuilder;
            break;
          }
          case 34: {
            if (extensionFields_ == null) {
              ExtensionFields = new global::Iscp2.V1.Extensions.UpstreamMetadataExtensionFields();
            }
            input.ReadMessage(ExtensionFields);
            break;
          }
        }
      }
    }
    #endif

  }

  internal sealed partial class UpstreamMetadataAck : pb::IMessage<UpstreamMetadataAck>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<UpstreamMetadataAck> _parser = new pb::MessageParser<UpstreamMetadataAck>(() => new UpstreamMetadataAck());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<UpstreamMetadataAck> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Iscp2.V1.UpstreamReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UpstreamMetadataAck() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UpstreamMetadataAck(UpstreamMetadataAck other) : this() {
      requestId_ = other.requestId_;
      resultCode_ = other.resultCode_;
      resultString_ = other.resultString_;
      extensionFields_ = other.extensionFields_ != null ? other.extensionFields_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UpstreamMetadataAck Clone() {
      return new UpstreamMetadataAck(this);
    }

    /// <summary>Field number for the "request_id" field.</summary>
    public const int RequestIdFieldNumber = 1;
    private uint requestId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint RequestId {
      get { return requestId_; }
      set {
        requestId_ = value;
      }
    }

    /// <summary>Field number for the "result_code" field.</summary>
    public const int ResultCodeFieldNumber = 2;
    private global::Iscp2.V1.ResultCode resultCode_ = global::Iscp2.V1.ResultCode.Succeeded;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Iscp2.V1.ResultCode ResultCode {
      get { return resultCode_; }
      set {
        resultCode_ = value;
      }
    }

    /// <summary>Field number for the "result_string" field.</summary>
    public const int ResultStringFieldNumber = 3;
    private string resultString_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ResultString {
      get { return resultString_; }
      set {
        resultString_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "extension_fields" field.</summary>
    public const int ExtensionFieldsFieldNumber = 4;
    private global::Iscp2.V1.Extensions.UpstreamMetadataAckExtensionFields extensionFields_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Iscp2.V1.Extensions.UpstreamMetadataAckExtensionFields ExtensionFields {
      get { return extensionFields_; }
      set {
        extensionFields_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as UpstreamMetadataAck);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(UpstreamMetadataAck other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (RequestId != other.RequestId) return false;
      if (ResultCode != other.ResultCode) return false;
      if (ResultString != other.ResultString) return false;
      if (!object.Equals(ExtensionFields, other.ExtensionFields)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (RequestId != 0) hash ^= RequestId.GetHashCode();
      if (ResultCode != global::Iscp2.V1.ResultCode.Succeeded) hash ^= ResultCode.GetHashCode();
      if (ResultString.Length != 0) hash ^= ResultString.GetHashCode();
      if (extensionFields_ != null) hash ^= ExtensionFields.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (RequestId != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(RequestId);
      }
      if (ResultCode != global::Iscp2.V1.ResultCode.Succeeded) {
        output.WriteRawTag(16);
        output.WriteEnum((int) ResultCode);
      }
      if (ResultString.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(ResultString);
      }
      if (extensionFields_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(ExtensionFields);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (RequestId != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(RequestId);
      }
      if (ResultCode != global::Iscp2.V1.ResultCode.Succeeded) {
        output.WriteRawTag(16);
        output.WriteEnum((int) ResultCode);
      }
      if (ResultString.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(ResultString);
      }
      if (extensionFields_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(ExtensionFields);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (RequestId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(RequestId);
      }
      if (ResultCode != global::Iscp2.V1.ResultCode.Succeeded) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ResultCode);
      }
      if (ResultString.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ResultString);
      }
      if (extensionFields_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ExtensionFields);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(UpstreamMetadataAck other) {
      if (other == null) {
        return;
      }
      if (other.RequestId != 0) {
        RequestId = other.RequestId;
      }
      if (other.ResultCode != global::Iscp2.V1.ResultCode.Succeeded) {
        ResultCode = other.ResultCode;
      }
      if (other.ResultString.Length != 0) {
        ResultString = other.ResultString;
      }
      if (other.extensionFields_ != null) {
        if (extensionFields_ == null) {
          ExtensionFields = new global::Iscp2.V1.Extensions.UpstreamMetadataAckExtensionFields();
        }
        ExtensionFields.MergeFrom(other.ExtensionFields);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            RequestId = input.ReadUInt32();
            break;
          }
          case 16: {
            ResultCode = (global::Iscp2.V1.ResultCode) input.ReadEnum();
            break;
          }
          case 26: {
            ResultString = input.ReadString();
            break;
          }
          case 34: {
            if (extensionFields_ == null) {
              ExtensionFields = new global::Iscp2.V1.Extensions.UpstreamMetadataAckExtensionFields();
            }
            input.ReadMessage(ExtensionFields);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            RequestId = input.ReadUInt32();
            break;
          }
          case 16: {
            ResultCode = (global::Iscp2.V1.ResultCode) input.ReadEnum();
            break;
          }
          case 26: {
            ResultString = input.ReadString();
            break;
          }
          case 34: {
            if (extensionFields_ == null) {
              ExtensionFields = new global::Iscp2.V1.Extensions.UpstreamMetadataAckExtensionFields();
            }
            input.ReadMessage(ExtensionFields);
            break;
          }
        }
      }
    }
    #endif

  }

  internal sealed partial class UpstreamChunkResult : pb::IMessage<UpstreamChunkResult>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<UpstreamChunkResult> _parser = new pb::MessageParser<UpstreamChunkResult>(() => new UpstreamChunkResult());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<UpstreamChunkResult> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Iscp2.V1.UpstreamReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UpstreamChunkResult() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UpstreamChunkResult(UpstreamChunkResult other) : this() {
      sequenceNumber_ = other.sequenceNumber_;
      resultCode_ = other.resultCode_;
      resultString_ = other.resultString_;
      extensionFields_ = other.extensionFields_ != null ? other.extensionFields_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UpstreamChunkResult Clone() {
      return new UpstreamChunkResult(this);
    }

    /// <summary>Field number for the "sequence_number" field.</summary>
    public const int SequenceNumberFieldNumber = 1;
    private uint sequenceNumber_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint SequenceNumber {
      get { return sequenceNumber_; }
      set {
        sequenceNumber_ = value;
      }
    }

    /// <summary>Field number for the "result_code" field.</summary>
    public const int ResultCodeFieldNumber = 2;
    private global::Iscp2.V1.ResultCode resultCode_ = global::Iscp2.V1.ResultCode.Succeeded;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Iscp2.V1.ResultCode ResultCode {
      get { return resultCode_; }
      set {
        resultCode_ = value;
      }
    }

    /// <summary>Field number for the "result_string" field.</summary>
    public const int ResultStringFieldNumber = 3;
    private string resultString_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ResultString {
      get { return resultString_; }
      set {
        resultString_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "extension_fields" field.</summary>
    public const int ExtensionFieldsFieldNumber = 4;
    private global::Iscp2.V1.Extensions.UpstreamChunkResultExtensionFields extensionFields_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Iscp2.V1.Extensions.UpstreamChunkResultExtensionFields ExtensionFields {
      get { return extensionFields_; }
      set {
        extensionFields_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as UpstreamChunkResult);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(UpstreamChunkResult other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (SequenceNumber != other.SequenceNumber) return false;
      if (ResultCode != other.ResultCode) return false;
      if (ResultString != other.ResultString) return false;
      if (!object.Equals(ExtensionFields, other.ExtensionFields)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (SequenceNumber != 0) hash ^= SequenceNumber.GetHashCode();
      if (ResultCode != global::Iscp2.V1.ResultCode.Succeeded) hash ^= ResultCode.GetHashCode();
      if (ResultString.Length != 0) hash ^= ResultString.GetHashCode();
      if (extensionFields_ != null) hash ^= ExtensionFields.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (SequenceNumber != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(SequenceNumber);
      }
      if (ResultCode != global::Iscp2.V1.ResultCode.Succeeded) {
        output.WriteRawTag(16);
        output.WriteEnum((int) ResultCode);
      }
      if (ResultString.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(ResultString);
      }
      if (extensionFields_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(ExtensionFields);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (SequenceNumber != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(SequenceNumber);
      }
      if (ResultCode != global::Iscp2.V1.ResultCode.Succeeded) {
        output.WriteRawTag(16);
        output.WriteEnum((int) ResultCode);
      }
      if (ResultString.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(ResultString);
      }
      if (extensionFields_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(ExtensionFields);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (SequenceNumber != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(SequenceNumber);
      }
      if (ResultCode != global::Iscp2.V1.ResultCode.Succeeded) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ResultCode);
      }
      if (ResultString.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ResultString);
      }
      if (extensionFields_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ExtensionFields);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(UpstreamChunkResult other) {
      if (other == null) {
        return;
      }
      if (other.SequenceNumber != 0) {
        SequenceNumber = other.SequenceNumber;
      }
      if (other.ResultCode != global::Iscp2.V1.ResultCode.Succeeded) {
        ResultCode = other.ResultCode;
      }
      if (other.ResultString.Length != 0) {
        ResultString = other.ResultString;
      }
      if (other.extensionFields_ != null) {
        if (extensionFields_ == null) {
          ExtensionFields = new global::Iscp2.V1.Extensions.UpstreamChunkResultExtensionFields();
        }
        ExtensionFields.MergeFrom(other.ExtensionFields);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            SequenceNumber = input.ReadUInt32();
            break;
          }
          case 16: {
            ResultCode = (global::Iscp2.V1.ResultCode) input.ReadEnum();
            break;
          }
          case 26: {
            ResultString = input.ReadString();
            break;
          }
          case 34: {
            if (extensionFields_ == null) {
              ExtensionFields = new global::Iscp2.V1.Extensions.UpstreamChunkResultExtensionFields();
            }
            input.ReadMessage(ExtensionFields);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            SequenceNumber = input.ReadUInt32();
            break;
          }
          case 16: {
            ResultCode = (global::Iscp2.V1.ResultCode) input.ReadEnum();
            break;
          }
          case 26: {
            ResultString = input.ReadString();
            break;
          }
          case 34: {
            if (extensionFields_ == null) {
              ExtensionFields = new global::Iscp2.V1.Extensions.UpstreamChunkResultExtensionFields();
            }
            input.ReadMessage(ExtensionFields);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
