// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: iscp2/v1/downstream.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Iscp2.V1 {

  /// <summary>Holder for reflection information generated from iscp2/v1/downstream.proto</summary>
  internal static partial class DownstreamReflection {

    #region Descriptor
    /// <summary>File descriptor for iscp2/v1/downstream.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static DownstreamReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Chlpc2NwMi92MS9kb3duc3RyZWFtLnByb3RvEghpc2NwMi52MRoVaXNjcDIv",
            "djEvY29tbW9uLnByb3RvGiRpc2NwMi92MS9leHRlbnNpb25zL2Rvd25zdHJl",
            "YW0ucHJvdG8aF2lzY3AyL3YxL21ldGFkYXRhLnByb3RvGhppc2NwMi92MS9y",
            "ZXN1bHRfY29kZS5wcm90byLCBAoVRG93bnN0cmVhbU9wZW5SZXF1ZXN0Eh0K",
            "CnJlcXVlc3RfaWQYASABKA1SCXJlcXVlc3RJZBI1ChdkZXNpcmVkX3N0cmVh",
            "bV9pZF9hbGlhcxgCIAEoDVIUZGVzaXJlZFN0cmVhbUlkQWxpYXMSSQoSZG93",
            "bnN0cmVhbV9maWx0ZXJzGAMgAygLMhouaXNjcDIudjEuRG93bnN0cmVhbUZp",
            "bHRlclIRZG93bnN0cmVhbUZpbHRlcnMSJwoPZXhwaXJ5X2ludGVydmFsGAQg",
            "ASgNUg5leHBpcnlJbnRlcnZhbBJaCg9kYXRhX2lkX2FsaWFzZXMYBSADKAsy",
            "Mi5pc2NwMi52MS5Eb3duc3RyZWFtT3BlblJlcXVlc3QuRGF0YUlkQWxpYXNl",
            "c0VudHJ5Ug1kYXRhSWRBbGlhc2VzEh8KA3FvcxgGIAEoDjINLmlzY3AyLnYx",
            "LlFvU1IDcW9zEmQKEGV4dGVuc2lvbl9maWVsZHMYByABKAsyOS5pc2NwMi52",
            "MS5leHRlbnNpb25zLkRvd25zdHJlYW1PcGVuUmVxdWVzdEV4dGVuc2lvbkZp",
            "ZWxkc1IPZXh0ZW5zaW9uRmllbGRzEigKEG9taXRfZW1wdHlfY2h1bmsYCCAB",
            "KAhSDm9taXRFbXB0eUNodW5rGlIKEkRhdGFJZEFsaWFzZXNFbnRyeRIQCgNr",
            "ZXkYASABKA1SA2tleRImCgV2YWx1ZRgCIAEoCzIQLmlzY3AyLnYxLkRhdGFJ",
            "RFIFdmFsdWU6AjgBIskCChZEb3duc3RyZWFtT3BlblJlc3BvbnNlEh0KCnJl",
            "cXVlc3RfaWQYASABKA1SCXJlcXVlc3RJZBIsChJhc3NpZ25lZF9zdHJlYW1f",
            "aWQYAiABKAxSEGFzc2lnbmVkU3RyZWFtSWQSHwoLc2VydmVyX3RpbWUYAyAB",
            "KBJSCnNlcnZlclRpbWUSNQoLcmVzdWx0X2NvZGUYBCABKA4yFC5pc2NwMi52",
            "MS5SZXN1bHRDb2RlUgpyZXN1bHRDb2RlEiMKDXJlc3VsdF9zdHJpbmcYBSAB",
            "KAlSDHJlc3VsdFN0cmluZxJlChBleHRlbnNpb25fZmllbGRzGAYgASgLMjou",
            "aXNjcDIudjEuZXh0ZW5zaW9ucy5Eb3duc3RyZWFtT3BlblJlc3BvbnNlRXh0",
            "ZW5zaW9uRmllbGRzUg9leHRlbnNpb25GaWVsZHMi9AEKF0Rvd25zdHJlYW1S",
            "ZXN1bWVSZXF1ZXN0Eh0KCnJlcXVlc3RfaWQYASABKA1SCXJlcXVlc3RJZBIb",
            "CglzdHJlYW1faWQYAiABKAxSCHN0cmVhbUlkEjUKF2Rlc2lyZWRfc3RyZWFt",
            "X2lkX2FsaWFzGAMgASgNUhRkZXNpcmVkU3RyZWFtSWRBbGlhcxJmChBleHRl",
            "bnNpb25fZmllbGRzGAQgASgLMjsuaXNjcDIudjEuZXh0ZW5zaW9ucy5Eb3du",
            "c3RyZWFtUmVzdW1lUmVxdWVzdEV4dGVuc2lvbkZpZWxkc1IPZXh0ZW5zaW9u",
            "RmllbGRzIv4BChhEb3duc3RyZWFtUmVzdW1lUmVzcG9uc2USHQoKcmVxdWVz",
            "dF9pZBgBIAEoDVIJcmVxdWVzdElkEjUKC3Jlc3VsdF9jb2RlGAIgASgOMhQu",
            "aXNjcDIudjEuUmVzdWx0Q29kZVIKcmVzdWx0Q29kZRIjCg1yZXN1bHRfc3Ry",
            "aW5nGAMgASgJUgxyZXN1bHRTdHJpbmcSZwoQZXh0ZW5zaW9uX2ZpZWxkcxgE",
            "IAEoCzI8LmlzY3AyLnYxLmV4dGVuc2lvbnMuRG93bnN0cmVhbVJlc3VtZVJl",
            "c3BvbnNlRXh0ZW5zaW9uRmllbGRzUg9leHRlbnNpb25GaWVsZHMiuwEKFkRv",
            "d25zdHJlYW1DbG9zZVJlcXVlc3QSHQoKcmVxdWVzdF9pZBgBIAEoDVIJcmVx",
            "dWVzdElkEhsKCXN0cmVhbV9pZBgCIAEoDFIIc3RyZWFtSWQSZQoQZXh0ZW5z",
            "aW9uX2ZpZWxkcxgDIAEoCzI6LmlzY3AyLnYxLmV4dGVuc2lvbnMuRG93bnN0",
            "cmVhbUNsb3NlUmVxdWVzdEV4dGVuc2lvbkZpZWxkc1IPZXh0ZW5zaW9uRmll",
            "bGRzIvwBChdEb3duc3RyZWFtQ2xvc2VSZXNwb25zZRIdCgpyZXF1ZXN0X2lk",
            "GAEgASgNUglyZXF1ZXN0SWQSNQoLcmVzdWx0X2NvZGUYAiABKA4yFC5pc2Nw",
            "Mi52MS5SZXN1bHRDb2RlUgpyZXN1bHRDb2RlEiMKDXJlc3VsdF9zdHJpbmcY",
            "AyABKAlSDHJlc3VsdFN0cmluZxJmChBleHRlbnNpb25fZmllbGRzGAQgASgL",
            "MjsuaXNjcDIudjEuZXh0ZW5zaW9ucy5Eb3duc3RyZWFtQ2xvc2VSZXNwb25z",
            "ZUV4dGVuc2lvbkZpZWxkc1IPZXh0ZW5zaW9uRmllbGRzItACCg9Eb3duc3Ry",
            "ZWFtQ2h1bmsSJgoPc3RyZWFtX2lkX2FsaWFzGAEgASgNUg1zdHJlYW1JZEFs",
            "aWFzEj0KDXVwc3RyZWFtX2luZm8YAiABKAsyFi5pc2NwMi52MS5VcHN0cmVh",
            "bUluZm9IAFIMdXBzdHJlYW1JbmZvEicKDnVwc3RyZWFtX2FsaWFzGAMgASgN",
            "SABSDXVwc3RyZWFtQWxpYXMSOAoMc3RyZWFtX2NodW5rGAQgASgLMhUuaXNj",
            "cDIudjEuU3RyZWFtQ2h1bmtSC3N0cmVhbUNodW5rEl4KEGV4dGVuc2lvbl9m",
            "aWVsZHMYBSABKAsyMy5pc2NwMi52MS5leHRlbnNpb25zLkRvd25zdHJlYW1D",
            "aHVua0V4dGVuc2lvbkZpZWxkc1IPZXh0ZW5zaW9uRmllbGRzQhMKEXVwc3Ry",
            "ZWFtX29yX2FsaWFzItgEChJEb3duc3RyZWFtQ2h1bmtBY2sSJgoPc3RyZWFt",
            "X2lkX2FsaWFzGAEgASgNUg1zdHJlYW1JZEFsaWFzEhUKBmFja19pZBgCIAEo",
            "DVIFYWNrSWQSOQoHcmVzdWx0cxgDIAMoCzIfLmlzY3AyLnYxLkRvd25zdHJl",
            "YW1DaHVua1Jlc3VsdFIHcmVzdWx0cxJcChB1cHN0cmVhbV9hbGlhc2VzGAQg",
            "AygLMjEuaXNjcDIudjEuRG93bnN0cmVhbUNodW5rQWNrLlVwc3RyZWFtQWxp",
            "YXNlc0VudHJ5Ug91cHN0cmVhbUFsaWFzZXMSVwoPZGF0YV9pZF9hbGlhc2Vz",
            "GAUgAygLMi8uaXNjcDIudjEuRG93bnN0cmVhbUNodW5rQWNrLkRhdGFJZEFs",
            "aWFzZXNFbnRyeVINZGF0YUlkQWxpYXNlcxJhChBleHRlbnNpb25fZmllbGRz",
            "GAYgASgLMjYuaXNjcDIudjEuZXh0ZW5zaW9ucy5Eb3duc3RyZWFtQ2h1bmtB",
            "Y2tFeHRlbnNpb25GaWVsZHNSD2V4dGVuc2lvbkZpZWxkcxpaChRVcHN0cmVh",
            "bUFsaWFzZXNFbnRyeRIQCgNrZXkYASABKA1SA2tleRIsCgV2YWx1ZRgCIAEo",
            "CzIWLmlzY3AyLnYxLlVwc3RyZWFtSW5mb1IFdmFsdWU6AjgBGlIKEkRhdGFJ",
            "ZEFsaWFzZXNFbnRyeRIQCgNrZXkYASABKA1SA2tleRImCgV2YWx1ZRgCIAEo",
            "CzIQLmlzY3AyLnYxLkRhdGFJRFIFdmFsdWU6AjgBIqICChpEb3duc3RyZWFt",
            "Q2h1bmtBY2tDb21wbGV0ZRImCg9zdHJlYW1faWRfYWxpYXMYASABKA1SDXN0",
            "cmVhbUlkQWxpYXMSFQoGYWNrX2lkGAIgASgNUgVhY2tJZBI1CgtyZXN1bHRf",
            "Y29kZRgDIAEoDjIULmlzY3AyLnYxLlJlc3VsdENvZGVSCnJlc3VsdENvZGUS",
            "IwoNcmVzdWx0X3N0cmluZxgEIAEoCVIMcmVzdWx0U3RyaW5nEmkKEGV4dGVu",
            "c2lvbl9maWVsZHMYBSABKAsyPi5pc2NwMi52MS5leHRlbnNpb25zLkRvd25z",
            "dHJlYW1DaHVua0Fja0NvbXBsZXRlRXh0ZW5zaW9uRmllbGRzUg9leHRlbnNp",
            "b25GaWVsZHMiowcKEkRvd25zdHJlYW1NZXRhZGF0YRIdCgpyZXF1ZXN0X2lk",
            "GAEgASgNUglyZXF1ZXN0SWQSJgoPc3RyZWFtX2lkX2FsaWFzGA0gASgNUg1z",
            "dHJlYW1JZEFsaWFzEjEKCWJhc2VfdGltZRgCIAEoCzISLmlzY3AyLnYxLkJh",
            "c2VUaW1lSABSCGJhc2VUaW1lEj0KDXVwc3RyZWFtX29wZW4YAyABKAsyFi5p",
            "c2NwMi52MS5VcHN0cmVhbU9wZW5IAFIMdXBzdHJlYW1PcGVuElkKF3Vwc3Ry",
            "ZWFtX2Fibm9ybWFsX2Nsb3NlGAQgASgLMh8uaXNjcDIudjEuVXBzdHJlYW1B",
            "Ym5vcm1hbENsb3NlSABSFXVwc3RyZWFtQWJub3JtYWxDbG9zZRJDCg91cHN0",
            "cmVhbV9yZXN1bWUYBSABKAsyGC5pc2NwMi52MS5VcHN0cmVhbVJlc3VtZUgA",
            "Ug51cHN0cmVhbVJlc3VtZRJTChV1cHN0cmVhbV9ub3JtYWxfY2xvc2UYBiAB",
            "KAsyHS5pc2NwMi52MS5VcHN0cmVhbU5vcm1hbENsb3NlSABSE3Vwc3RyZWFt",
            "Tm9ybWFsQ2xvc2USQwoPZG93bnN0cmVhbV9vcGVuGAcgASgLMhguaXNjcDIu",
            "djEuRG93bnN0cmVhbU9wZW5IAFIOZG93bnN0cmVhbU9wZW4SXwoZZG93bnN0",
            "cmVhbV9hYm5vcm1hbF9jbG9zZRgIIAEoCzIhLmlzY3AyLnYxLkRvd25zdHJl",
            "YW1BYm5vcm1hbENsb3NlSABSF2Rvd25zdHJlYW1BYm5vcm1hbENsb3NlEkkK",
            "EWRvd25zdHJlYW1fcmVzdW1lGAkgASgLMhouaXNjcDIudjEuRG93bnN0cmVh",
            "bVJlc3VtZUgAUhBkb3duc3RyZWFtUmVzdW1lElkKF2Rvd25zdHJlYW1fbm9y",
            "bWFsX2Nsb3NlGAogASgLMh8uaXNjcDIudjEuRG93bnN0cmVhbU5vcm1hbENs",
            "b3NlSABSFWRvd25zdHJlYW1Ob3JtYWxDbG9zZRIkCg5zb3VyY2Vfbm9kZV9p",
            "ZBgLIAEoCVIMc291cmNlTm9kZUlkEmEKEGV4dGVuc2lvbl9maWVsZHMYDCAB",
            "KAsyNi5pc2NwMi52MS5leHRlbnNpb25zLkRvd25zdHJlYW1NZXRhZGF0YUV4",
            "dGVuc2lvbkZpZWxkc1IPZXh0ZW5zaW9uRmllbGRzQgoKCG1ldGFkYXRhIvgB",
            "ChVEb3duc3RyZWFtTWV0YWRhdGFBY2sSHQoKcmVxdWVzdF9pZBgBIAEoDVIJ",
            "cmVxdWVzdElkEjUKC3Jlc3VsdF9jb2RlGAIgASgOMhQuaXNjcDIudjEuUmVz",
            "dWx0Q29kZVIKcmVzdWx0Q29kZRIjCg1yZXN1bHRfc3RyaW5nGAMgASgJUgxy",
            "ZXN1bHRTdHJpbmcSZAoQZXh0ZW5zaW9uX2ZpZWxkcxgEIAEoCzI5LmlzY3Ay",
            "LnYxLmV4dGVuc2lvbnMuRG93bnN0cmVhbU1ldGFkYXRhQWNrRXh0ZW5zaW9u",
            "RmllbGRzUg9leHRlbnNpb25GaWVsZHMicAoMVXBzdHJlYW1JbmZvEh0KCnNl",
            "c3Npb25faWQYASABKAlSCXNlc3Npb25JZBIbCglzdHJlYW1faWQYAiABKAxS",
            "CHN0cmVhbUlkEiQKDnNvdXJjZV9ub2RlX2lkGAMgASgJUgxzb3VyY2VOb2Rl",
            "SWQiywIKFURvd25zdHJlYW1DaHVua1Jlc3VsdBIxChVzdHJlYW1faWRfb2Zf",
            "dXBzdHJlYW0YASABKAxSEnN0cmVhbUlkT2ZVcHN0cmVhbRI9ChtzZXF1ZW5j",
            "ZV9udW1iZXJfaW5fdXBzdHJlYW0YAiABKA1SGHNlcXVlbmNlTnVtYmVySW5V",
            "cHN0cmVhbRI1CgtyZXN1bHRfY29kZRgDIAEoDjIULmlzY3AyLnYxLlJlc3Vs",
            "dENvZGVSCnJlc3VsdENvZGUSIwoNcmVzdWx0X3N0cmluZxgEIAEoCVIMcmVz",
            "dWx0U3RyaW5nEmQKEGV4dGVuc2lvbl9maWVsZHMYBSABKAsyOS5pc2NwMi52",
            "MS5leHRlbnNpb25zLkRvd25zdHJlYW1DaHVua1Jlc3VsdEV4dGVuc2lvbkZp",
            "ZWxkc1IPZXh0ZW5zaW9uRmllbGRzQqoBCiBjb20uZ2l0aHViLmFwdHBvZC5w",
            "cm90by5pc2NwMi52MUIPRG93bnN0cmVhbVByb3RvUAFaNGdpdGh1Yi5jb20v",
            "YXB0cG9kL2lzY3AtcHJvdG8vZ2VuL2dvL2lzY3AyL3YxO2lzY3AydjGiAgNJ",
            "WFiqAghJc2NwMi5WMcoCCElzY3AyXFYx4gIUSXNjcDJcVjFcR1BCTWV0YWRh",
            "dGHqAglJc2NwMjo6VjFiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Iscp2.V1.CommonReflection.Descriptor, global::Iscp2.V1.Extensions.DownstreamReflection.Descriptor, global::Iscp2.V1.MetadataReflection.Descriptor, global::Iscp2.V1.ResultCodeReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Iscp2.V1.DownstreamOpenRequest), global::Iscp2.V1.DownstreamOpenRequest.Parser, new[]{ "RequestId", "DesiredStreamIdAlias", "DownstreamFilters", "ExpiryInterval", "DataIdAliases", "Qos", "ExtensionFields", "OmitEmptyChunk" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::Iscp2.V1.DownstreamOpenResponse), global::Iscp2.V1.DownstreamOpenResponse.Parser, new[]{ "RequestId", "AssignedStreamId", "ServerTime", "ResultCode", "ResultString", "ExtensionFields" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Iscp2.V1.DownstreamResumeRequest), global::Iscp2.V1.DownstreamResumeRequest.Parser, new[]{ "RequestId", "StreamId", "DesiredStreamIdAlias", "ExtensionFields" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Iscp2.V1.DownstreamResumeResponse), global::Iscp2.V1.DownstreamResumeResponse.Parser, new[]{ "RequestId", "ResultCode", "ResultString", "ExtensionFields" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Iscp2.V1.DownstreamCloseRequest), global::Iscp2.V1.DownstreamCloseRequest.Parser, new[]{ "RequestId", "StreamId", "ExtensionFields" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Iscp2.V1.DownstreamCloseResponse), global::Iscp2.V1.DownstreamCloseResponse.Parser, new[]{ "RequestId", "ResultCode", "ResultString", "ExtensionFields" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Iscp2.V1.DownstreamChunk), global::Iscp2.V1.DownstreamChunk.Parser, new[]{ "StreamIdAlias", "UpstreamInfo", "UpstreamAlias", "StreamChunk", "ExtensionFields" }, new[]{ "UpstreamOrAlias" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Iscp2.V1.DownstreamChunkAck), global::Iscp2.V1.DownstreamChunkAck.Parser, new[]{ "StreamIdAlias", "AckId", "Results", "UpstreamAliases", "DataIdAliases", "ExtensionFields" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::Iscp2.V1.DownstreamChunkAckComplete), global::Iscp2.V1.DownstreamChunkAckComplete.Parser, new[]{ "StreamIdAlias", "AckId", "ResultCode", "ResultString", "ExtensionFields" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Iscp2.V1.DownstreamMetadata), global::Iscp2.V1.DownstreamMetadata.Parser, new[]{ "RequestId", "StreamIdAlias", "BaseTime", "UpstreamOpen", "UpstreamAbnormalClose", "UpstreamResume", "UpstreamNormalClose", "DownstreamOpen", "DownstreamAbnormalClose", "DownstreamResume", "DownstreamNormalClose", "SourceNodeId", "ExtensionFields" }, new[]{ "Metadata" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Iscp2.V1.DownstreamMetadataAck), global::Iscp2.V1.DownstreamMetadataAck.Parser, new[]{ "RequestId", "ResultCode", "ResultString", "ExtensionFields" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Iscp2.V1.UpstreamInfo), global::Iscp2.V1.UpstreamInfo.Parser, new[]{ "SessionId", "StreamId", "SourceNodeId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Iscp2.V1.DownstreamChunkResult), global::Iscp2.V1.DownstreamChunkResult.Parser, new[]{ "StreamIdOfUpstream", "SequenceNumberInUpstream", "ResultCode", "ResultString", "ExtensionFields" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  internal sealed partial class DownstreamOpenRequest : pb::IMessage<DownstreamOpenRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DownstreamOpenRequest> _parser = new pb::MessageParser<DownstreamOpenRequest>(() => new DownstreamOpenRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<DownstreamOpenRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Iscp2.V1.DownstreamReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DownstreamOpenRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DownstreamOpenRequest(DownstreamOpenRequest other) : this() {
      requestId_ = other.requestId_;
      desiredStreamIdAlias_ = other.desiredStreamIdAlias_;
      downstreamFilters_ = other.downstreamFilters_.Clone();
      expiryInterval_ = other.expiryInterval_;
      dataIdAliases_ = other.dataIdAliases_.Clone();
      qos_ = other.qos_;
      extensionFields_ = other.extensionFields_ != null ? other.extensionFields_.Clone() : null;
      omitEmptyChunk_ = other.omitEmptyChunk_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DownstreamOpenRequest Clone() {
      return new DownstreamOpenRequest(this);
    }

    /// <summary>Field number for the "request_id" field.</summary>
    public const int RequestIdFieldNumber = 1;
    private uint requestId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint RequestId {
      get { return requestId_; }
      set {
        requestId_ = value;
      }
    }

    /// <summary>Field number for the "desired_stream_id_alias" field.</summary>
    public const int DesiredStreamIdAliasFieldNumber = 2;
    private uint desiredStreamIdAlias_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint DesiredStreamIdAlias {
      get { return desiredStreamIdAlias_; }
      set {
        desiredStreamIdAlias_ = value;
      }
    }

    /// <summary>Field number for the "downstream_filters" field.</summary>
    public const int DownstreamFiltersFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Iscp2.V1.DownstreamFilter> _repeated_downstreamFilters_codec
        = pb::FieldCodec.ForMessage(26, global::Iscp2.V1.DownstreamFilter.Parser);
    private readonly pbc::RepeatedField<global::Iscp2.V1.DownstreamFilter> downstreamFilters_ = new pbc::RepeatedField<global::Iscp2.V1.DownstreamFilter>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Iscp2.V1.DownstreamFilter> DownstreamFilters {
      get { return downstreamFilters_; }
    }

    /// <summary>Field number for the "expiry_interval" field.</summary>
    public const int ExpiryIntervalFieldNumber = 4;
    private uint expiryInterval_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint ExpiryInterval {
      get { return expiryInterval_; }
      set {
        expiryInterval_ = value;
      }
    }

    /// <summary>Field number for the "data_id_aliases" field.</summary>
    public const int DataIdAliasesFieldNumber = 5;
    private static readonly pbc::MapField<uint, global::Iscp2.V1.DataID>.Codec _map_dataIdAliases_codec
        = new pbc::MapField<uint, global::Iscp2.V1.DataID>.Codec(pb::FieldCodec.ForUInt32(8, 0), pb::FieldCodec.ForMessage(18, global::Iscp2.V1.DataID.Parser), 42);
    private readonly pbc::MapField<uint, global::Iscp2.V1.DataID> dataIdAliases_ = new pbc::MapField<uint, global::Iscp2.V1.DataID>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::MapField<uint, global::Iscp2.V1.DataID> DataIdAliases {
      get { return dataIdAliases_; }
    }

    /// <summary>Field number for the "qos" field.</summary>
    public const int QosFieldNumber = 6;
    private global::Iscp2.V1.QoS qos_ = global::Iscp2.V1.QoS.Unreliable;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Iscp2.V1.QoS Qos {
      get { return qos_; }
      set {
        qos_ = value;
      }
    }

    /// <summary>Field number for the "extension_fields" field.</summary>
    public const int ExtensionFieldsFieldNumber = 7;
    private global::Iscp2.V1.Extensions.DownstreamOpenRequestExtensionFields extensionFields_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Iscp2.V1.Extensions.DownstreamOpenRequestExtensionFields ExtensionFields {
      get { return extensionFields_; }
      set {
        extensionFields_ = value;
      }
    }

    /// <summary>Field number for the "omit_empty_chunk" field.</summary>
    public const int OmitEmptyChunkFieldNumber = 8;
    private bool omitEmptyChunk_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool OmitEmptyChunk {
      get { return omitEmptyChunk_; }
      set {
        omitEmptyChunk_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as DownstreamOpenRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(DownstreamOpenRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (RequestId != other.RequestId) return false;
      if (DesiredStreamIdAlias != other.DesiredStreamIdAlias) return false;
      if(!downstreamFilters_.Equals(other.downstreamFilters_)) return false;
      if (ExpiryInterval != other.ExpiryInterval) return false;
      if (!DataIdAliases.Equals(other.DataIdAliases)) return false;
      if (Qos != other.Qos) return false;
      if (!object.Equals(ExtensionFields, other.ExtensionFields)) return false;
      if (OmitEmptyChunk != other.OmitEmptyChunk) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (RequestId != 0) hash ^= RequestId.GetHashCode();
      if (DesiredStreamIdAlias != 0) hash ^= DesiredStreamIdAlias.GetHashCode();
      hash ^= downstreamFilters_.GetHashCode();
      if (ExpiryInterval != 0) hash ^= ExpiryInterval.GetHashCode();
      hash ^= DataIdAliases.GetHashCode();
      if (Qos != global::Iscp2.V1.QoS.Unreliable) hash ^= Qos.GetHashCode();
      if (extensionFields_ != null) hash ^= ExtensionFields.GetHashCode();
      if (OmitEmptyChunk != false) hash ^= OmitEmptyChunk.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (RequestId != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(RequestId);
      }
      if (DesiredStreamIdAlias != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(DesiredStreamIdAlias);
      }
      downstreamFilters_.WriteTo(output, _repeated_downstreamFilters_codec);
      if (ExpiryInterval != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(ExpiryInterval);
      }
      dataIdAliases_.WriteTo(output, _map_dataIdAliases_codec);
      if (Qos != global::Iscp2.V1.QoS.Unreliable) {
        output.WriteRawTag(48);
        output.WriteEnum((int) Qos);
      }
      if (extensionFields_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(ExtensionFields);
      }
      if (OmitEmptyChunk != false) {
        output.WriteRawTag(64);
        output.WriteBool(OmitEmptyChunk);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (RequestId != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(RequestId);
      }
      if (DesiredStreamIdAlias != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(DesiredStreamIdAlias);
      }
      downstreamFilters_.WriteTo(ref output, _repeated_downstreamFilters_codec);
      if (ExpiryInterval != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(ExpiryInterval);
      }
      dataIdAliases_.WriteTo(ref output, _map_dataIdAliases_codec);
      if (Qos != global::Iscp2.V1.QoS.Unreliable) {
        output.WriteRawTag(48);
        output.WriteEnum((int) Qos);
      }
      if (extensionFields_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(ExtensionFields);
      }
      if (OmitEmptyChunk != false) {
        output.WriteRawTag(64);
        output.WriteBool(OmitEmptyChunk);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (RequestId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(RequestId);
      }
      if (DesiredStreamIdAlias != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(DesiredStreamIdAlias);
      }
      size += downstreamFilters_.CalculateSize(_repeated_downstreamFilters_codec);
      if (ExpiryInterval != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ExpiryInterval);
      }
      size += dataIdAliases_.CalculateSize(_map_dataIdAliases_codec);
      if (Qos != global::Iscp2.V1.QoS.Unreliable) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Qos);
      }
      if (extensionFields_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ExtensionFields);
      }
      if (OmitEmptyChunk != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(DownstreamOpenRequest other) {
      if (other == null) {
        return;
      }
      if (other.RequestId != 0) {
        RequestId = other.RequestId;
      }
      if (other.DesiredStreamIdAlias != 0) {
        DesiredStreamIdAlias = other.DesiredStreamIdAlias;
      }
      downstreamFilters_.Add(other.downstreamFilters_);
      if (other.ExpiryInterval != 0) {
        ExpiryInterval = other.ExpiryInterval;
      }
      dataIdAliases_.MergeFrom(other.dataIdAliases_);
      if (other.Qos != global::Iscp2.V1.QoS.Unreliable) {
        Qos = other.Qos;
      }
      if (other.extensionFields_ != null) {
        if (extensionFields_ == null) {
          ExtensionFields = new global::Iscp2.V1.Extensions.DownstreamOpenRequestExtensionFields();
        }
        ExtensionFields.MergeFrom(other.ExtensionFields);
      }
      if (other.OmitEmptyChunk != false) {
        OmitEmptyChunk = other.OmitEmptyChunk;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            RequestId = input.ReadUInt32();
            break;
          }
          case 16: {
            DesiredStreamIdAlias = input.ReadUInt32();
            break;
          }
          case 26: {
            downstreamFilters_.AddEntriesFrom(input, _repeated_downstreamFilters_codec);
            break;
          }
          case 32: {
            ExpiryInterval = input.ReadUInt32();
            break;
          }
          case 42: {
            dataIdAliases_.AddEntriesFrom(input, _map_dataIdAliases_codec);
            break;
          }
          case 48: {
            Qos = (global::Iscp2.V1.QoS) input.ReadEnum();
            break;
          }
          case 58: {
            if (extensionFields_ == null) {
              ExtensionFields = new global::Iscp2.V1.Extensions.DownstreamOpenRequestExtensionFields();
            }
            input.ReadMessage(ExtensionFields);
            break;
          }
          case 64: {
            OmitEmptyChunk = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            RequestId = input.ReadUInt32();
            break;
          }
          case 16: {
            DesiredStreamIdAlias = input.ReadUInt32();
            break;
          }
          case 26: {
            downstreamFilters_.AddEntriesFrom(ref input, _repeated_downstreamFilters_codec);
            break;
          }
          case 32: {
            ExpiryInterval = input.ReadUInt32();
            break;
          }
          case 42: {
            dataIdAliases_.AddEntriesFrom(ref input, _map_dataIdAliases_codec);
            break;
          }
          case 48: {
            Qos = (global::Iscp2.V1.QoS) input.ReadEnum();
            break;
          }
          case 58: {
            if (extensionFields_ == null) {
              ExtensionFields = new global::Iscp2.V1.Extensions.DownstreamOpenRequestExtensionFields();
            }
            input.ReadMessage(ExtensionFields);
            break;
          }
          case 64: {
            OmitEmptyChunk = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  internal sealed partial class DownstreamOpenResponse : pb::IMessage<DownstreamOpenResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DownstreamOpenResponse> _parser = new pb::MessageParser<DownstreamOpenResponse>(() => new DownstreamOpenResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<DownstreamOpenResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Iscp2.V1.DownstreamReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DownstreamOpenResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DownstreamOpenResponse(DownstreamOpenResponse other) : this() {
      requestId_ = other.requestId_;
      assignedStreamId_ = other.assignedStreamId_;
      serverTime_ = other.serverTime_;
      resultCode_ = other.resultCode_;
      resultString_ = other.resultString_;
      extensionFields_ = other.extensionFields_ != null ? other.extensionFields_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DownstreamOpenResponse Clone() {
      return new DownstreamOpenResponse(this);
    }

    /// <summary>Field number for the "request_id" field.</summary>
    public const int RequestIdFieldNumber = 1;
    private uint requestId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint RequestId {
      get { return requestId_; }
      set {
        requestId_ = value;
      }
    }

    /// <summary>Field number for the "assigned_stream_id" field.</summary>
    public const int AssignedStreamIdFieldNumber = 2;
    private pb::ByteString assignedStreamId_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pb::ByteString AssignedStreamId {
      get { return assignedStreamId_; }
      set {
        assignedStreamId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "server_time" field.</summary>
    public const int ServerTimeFieldNumber = 3;
    private long serverTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long ServerTime {
      get { return serverTime_; }
      set {
        serverTime_ = value;
      }
    }

    /// <summary>Field number for the "result_code" field.</summary>
    public const int ResultCodeFieldNumber = 4;
    private global::Iscp2.V1.ResultCode resultCode_ = global::Iscp2.V1.ResultCode.Succeeded;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Iscp2.V1.ResultCode ResultCode {
      get { return resultCode_; }
      set {
        resultCode_ = value;
      }
    }

    /// <summary>Field number for the "result_string" field.</summary>
    public const int ResultStringFieldNumber = 5;
    private string resultString_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ResultString {
      get { return resultString_; }
      set {
        resultString_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "extension_fields" field.</summary>
    public const int ExtensionFieldsFieldNumber = 6;
    private global::Iscp2.V1.Extensions.DownstreamOpenResponseExtensionFields extensionFields_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Iscp2.V1.Extensions.DownstreamOpenResponseExtensionFields ExtensionFields {
      get { return extensionFields_; }
      set {
        extensionFields_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as DownstreamOpenResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(DownstreamOpenResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (RequestId != other.RequestId) return false;
      if (AssignedStreamId != other.AssignedStreamId) return false;
      if (ServerTime != other.ServerTime) return false;
      if (ResultCode != other.ResultCode) return false;
      if (ResultString != other.ResultString) return false;
      if (!object.Equals(ExtensionFields, other.ExtensionFields)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (RequestId != 0) hash ^= RequestId.GetHashCode();
      if (AssignedStreamId.Length != 0) hash ^= AssignedStreamId.GetHashCode();
      if (ServerTime != 0L) hash ^= ServerTime.GetHashCode();
      if (ResultCode != global::Iscp2.V1.ResultCode.Succeeded) hash ^= ResultCode.GetHashCode();
      if (ResultString.Length != 0) hash ^= ResultString.GetHashCode();
      if (extensionFields_ != null) hash ^= ExtensionFields.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (RequestId != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(RequestId);
      }
      if (AssignedStreamId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteBytes(AssignedStreamId);
      }
      if (ServerTime != 0L) {
        output.WriteRawTag(24);
        output.WriteSInt64(ServerTime);
      }
      if (ResultCode != global::Iscp2.V1.ResultCode.Succeeded) {
        output.WriteRawTag(32);
        output.WriteEnum((int) ResultCode);
      }
      if (ResultString.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(ResultString);
      }
      if (extensionFields_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(ExtensionFields);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (RequestId != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(RequestId);
      }
      if (AssignedStreamId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteBytes(AssignedStreamId);
      }
      if (ServerTime != 0L) {
        output.WriteRawTag(24);
        output.WriteSInt64(ServerTime);
      }
      if (ResultCode != global::Iscp2.V1.ResultCode.Succeeded) {
        output.WriteRawTag(32);
        output.WriteEnum((int) ResultCode);
      }
      if (ResultString.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(ResultString);
      }
      if (extensionFields_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(ExtensionFields);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (RequestId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(RequestId);
      }
      if (AssignedStreamId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(AssignedStreamId);
      }
      if (ServerTime != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeSInt64Size(ServerTime);
      }
      if (ResultCode != global::Iscp2.V1.ResultCode.Succeeded) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ResultCode);
      }
      if (ResultString.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ResultString);
      }
      if (extensionFields_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ExtensionFields);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(DownstreamOpenResponse other) {
      if (other == null) {
        return;
      }
      if (other.RequestId != 0) {
        RequestId = other.RequestId;
      }
      if (other.AssignedStreamId.Length != 0) {
        AssignedStreamId = other.AssignedStreamId;
      }
      if (other.ServerTime != 0L) {
        ServerTime = other.ServerTime;
      }
      if (other.ResultCode != global::Iscp2.V1.ResultCode.Succeeded) {
        ResultCode = other.ResultCode;
      }
      if (other.ResultString.Length != 0) {
        ResultString = other.ResultString;
      }
      if (other.extensionFields_ != null) {
        if (extensionFields_ == null) {
          ExtensionFields = new global::Iscp2.V1.Extensions.DownstreamOpenResponseExtensionFields();
        }
        ExtensionFields.MergeFrom(other.ExtensionFields);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            RequestId = input.ReadUInt32();
            break;
          }
          case 18: {
            AssignedStreamId = input.ReadBytes();
            break;
          }
          case 24: {
            ServerTime = input.ReadSInt64();
            break;
          }
          case 32: {
            ResultCode = (global::Iscp2.V1.ResultCode) input.ReadEnum();
            break;
          }
          case 42: {
            ResultString = input.ReadString();
            break;
          }
          case 50: {
            if (extensionFields_ == null) {
              ExtensionFields = new global::Iscp2.V1.Extensions.DownstreamOpenResponseExtensionFields();
            }
            input.ReadMessage(ExtensionFields);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            RequestId = input.ReadUInt32();
            break;
          }
          case 18: {
            AssignedStreamId = input.ReadBytes();
            break;
          }
          case 24: {
            ServerTime = input.ReadSInt64();
            break;
          }
          case 32: {
            ResultCode = (global::Iscp2.V1.ResultCode) input.ReadEnum();
            break;
          }
          case 42: {
            ResultString = input.ReadString();
            break;
          }
          case 50: {
            if (extensionFields_ == null) {
              ExtensionFields = new global::Iscp2.V1.Extensions.DownstreamOpenResponseExtensionFields();
            }
            input.ReadMessage(ExtensionFields);
            break;
          }
        }
      }
    }
    #endif

  }

  internal sealed partial class DownstreamResumeRequest : pb::IMessage<DownstreamResumeRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DownstreamResumeRequest> _parser = new pb::MessageParser<DownstreamResumeRequest>(() => new DownstreamResumeRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<DownstreamResumeRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Iscp2.V1.DownstreamReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DownstreamResumeRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DownstreamResumeRequest(DownstreamResumeRequest other) : this() {
      requestId_ = other.requestId_;
      streamId_ = other.streamId_;
      desiredStreamIdAlias_ = other.desiredStreamIdAlias_;
      extensionFields_ = other.extensionFields_ != null ? other.extensionFields_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DownstreamResumeRequest Clone() {
      return new DownstreamResumeRequest(this);
    }

    /// <summary>Field number for the "request_id" field.</summary>
    public const int RequestIdFieldNumber = 1;
    private uint requestId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint RequestId {
      get { return requestId_; }
      set {
        requestId_ = value;
      }
    }

    /// <summary>Field number for the "stream_id" field.</summary>
    public const int StreamIdFieldNumber = 2;
    private pb::ByteString streamId_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pb::ByteString StreamId {
      get { return streamId_; }
      set {
        streamId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "desired_stream_id_alias" field.</summary>
    public const int DesiredStreamIdAliasFieldNumber = 3;
    private uint desiredStreamIdAlias_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint DesiredStreamIdAlias {
      get { return desiredStreamIdAlias_; }
      set {
        desiredStreamIdAlias_ = value;
      }
    }

    /// <summary>Field number for the "extension_fields" field.</summary>
    public const int ExtensionFieldsFieldNumber = 4;
    private global::Iscp2.V1.Extensions.DownstreamResumeRequestExtensionFields extensionFields_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Iscp2.V1.Extensions.DownstreamResumeRequestExtensionFields ExtensionFields {
      get { return extensionFields_; }
      set {
        extensionFields_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as DownstreamResumeRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(DownstreamResumeRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (RequestId != other.RequestId) return false;
      if (StreamId != other.StreamId) return false;
      if (DesiredStreamIdAlias != other.DesiredStreamIdAlias) return false;
      if (!object.Equals(ExtensionFields, other.ExtensionFields)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (RequestId != 0) hash ^= RequestId.GetHashCode();
      if (StreamId.Length != 0) hash ^= StreamId.GetHashCode();
      if (DesiredStreamIdAlias != 0) hash ^= DesiredStreamIdAlias.GetHashCode();
      if (extensionFields_ != null) hash ^= ExtensionFields.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (RequestId != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(RequestId);
      }
      if (StreamId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteBytes(StreamId);
      }
      if (DesiredStreamIdAlias != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(DesiredStreamIdAlias);
      }
      if (extensionFields_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(ExtensionFields);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (RequestId != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(RequestId);
      }
      if (StreamId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteBytes(StreamId);
      }
      if (DesiredStreamIdAlias != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(DesiredStreamIdAlias);
      }
      if (extensionFields_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(ExtensionFields);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (RequestId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(RequestId);
      }
      if (StreamId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(StreamId);
      }
      if (DesiredStreamIdAlias != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(DesiredStreamIdAlias);
      }
      if (extensionFields_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ExtensionFields);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(DownstreamResumeRequest other) {
      if (other == null) {
        return;
      }
      if (other.RequestId != 0) {
        RequestId = other.RequestId;
      }
      if (other.StreamId.Length != 0) {
        StreamId = other.StreamId;
      }
      if (other.DesiredStreamIdAlias != 0) {
        DesiredStreamIdAlias = other.DesiredStreamIdAlias;
      }
      if (other.extensionFields_ != null) {
        if (extensionFields_ == null) {
          ExtensionFields = new global::Iscp2.V1.Extensions.DownstreamResumeRequestExtensionFields();
        }
        ExtensionFields.MergeFrom(other.ExtensionFields);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            RequestId = input.ReadUInt32();
            break;
          }
          case 18: {
            StreamId = input.ReadBytes();
            break;
          }
          case 24: {
            DesiredStreamIdAlias = input.ReadUInt32();
            break;
          }
          case 34: {
            if (extensionFields_ == null) {
              ExtensionFields = new global::Iscp2.V1.Extensions.DownstreamResumeRequestExtensionFields();
            }
            input.ReadMessage(ExtensionFields);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            RequestId = input.ReadUInt32();
            break;
          }
          case 18: {
            StreamId = input.ReadBytes();
            break;
          }
          case 24: {
            DesiredStreamIdAlias = input.ReadUInt32();
            break;
          }
          case 34: {
            if (extensionFields_ == null) {
              ExtensionFields = new global::Iscp2.V1.Extensions.DownstreamResumeRequestExtensionFields();
            }
            input.ReadMessage(ExtensionFields);
            break;
          }
        }
      }
    }
    #endif

  }

  internal sealed partial class DownstreamResumeResponse : pb::IMessage<DownstreamResumeResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DownstreamResumeResponse> _parser = new pb::MessageParser<DownstreamResumeResponse>(() => new DownstreamResumeResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<DownstreamResumeResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Iscp2.V1.DownstreamReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DownstreamResumeResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DownstreamResumeResponse(DownstreamResumeResponse other) : this() {
      requestId_ = other.requestId_;
      resultCode_ = other.resultCode_;
      resultString_ = other.resultString_;
      extensionFields_ = other.extensionFields_ != null ? other.extensionFields_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DownstreamResumeResponse Clone() {
      return new DownstreamResumeResponse(this);
    }

    /// <summary>Field number for the "request_id" field.</summary>
    public const int RequestIdFieldNumber = 1;
    private uint requestId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint RequestId {
      get { return requestId_; }
      set {
        requestId_ = value;
      }
    }

    /// <summary>Field number for the "result_code" field.</summary>
    public const int ResultCodeFieldNumber = 2;
    private global::Iscp2.V1.ResultCode resultCode_ = global::Iscp2.V1.ResultCode.Succeeded;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Iscp2.V1.ResultCode ResultCode {
      get { return resultCode_; }
      set {
        resultCode_ = value;
      }
    }

    /// <summary>Field number for the "result_string" field.</summary>
    public const int ResultStringFieldNumber = 3;
    private string resultString_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ResultString {
      get { return resultString_; }
      set {
        resultString_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "extension_fields" field.</summary>
    public const int ExtensionFieldsFieldNumber = 4;
    private global::Iscp2.V1.Extensions.DownstreamResumeResponseExtensionFields extensionFields_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Iscp2.V1.Extensions.DownstreamResumeResponseExtensionFields ExtensionFields {
      get { return extensionFields_; }
      set {
        extensionFields_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as DownstreamResumeResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(DownstreamResumeResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (RequestId != other.RequestId) return false;
      if (ResultCode != other.ResultCode) return false;
      if (ResultString != other.ResultString) return false;
      if (!object.Equals(ExtensionFields, other.ExtensionFields)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (RequestId != 0) hash ^= RequestId.GetHashCode();
      if (ResultCode != global::Iscp2.V1.ResultCode.Succeeded) hash ^= ResultCode.GetHashCode();
      if (ResultString.Length != 0) hash ^= ResultString.GetHashCode();
      if (extensionFields_ != null) hash ^= ExtensionFields.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (RequestId != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(RequestId);
      }
      if (ResultCode != global::Iscp2.V1.ResultCode.Succeeded) {
        output.WriteRawTag(16);
        output.WriteEnum((int) ResultCode);
      }
      if (ResultString.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(ResultString);
      }
      if (extensionFields_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(ExtensionFields);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (RequestId != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(RequestId);
      }
      if (ResultCode != global::Iscp2.V1.ResultCode.Succeeded) {
        output.WriteRawTag(16);
        output.WriteEnum((int) ResultCode);
      }
      if (ResultString.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(ResultString);
      }
      if (extensionFields_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(ExtensionFields);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (RequestId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(RequestId);
      }
      if (ResultCode != global::Iscp2.V1.ResultCode.Succeeded) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ResultCode);
      }
      if (ResultString.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ResultString);
      }
      if (extensionFields_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ExtensionFields);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(DownstreamResumeResponse other) {
      if (other == null) {
        return;
      }
      if (other.RequestId != 0) {
        RequestId = other.RequestId;
      }
      if (other.ResultCode != global::Iscp2.V1.ResultCode.Succeeded) {
        ResultCode = other.ResultCode;
      }
      if (other.ResultString.Length != 0) {
        ResultString = other.ResultString;
      }
      if (other.extensionFields_ != null) {
        if (extensionFields_ == null) {
          ExtensionFields = new global::Iscp2.V1.Extensions.DownstreamResumeResponseExtensionFields();
        }
        ExtensionFields.MergeFrom(other.ExtensionFields);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            RequestId = input.ReadUInt32();
            break;
          }
          case 16: {
            ResultCode = (global::Iscp2.V1.ResultCode) input.ReadEnum();
            break;
          }
          case 26: {
            ResultString = input.ReadString();
            break;
          }
          case 34: {
            if (extensionFields_ == null) {
              ExtensionFields = new global::Iscp2.V1.Extensions.DownstreamResumeResponseExtensionFields();
            }
            input.ReadMessage(ExtensionFields);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            RequestId = input.ReadUInt32();
            break;
          }
          case 16: {
            ResultCode = (global::Iscp2.V1.ResultCode) input.ReadEnum();
            break;
          }
          case 26: {
            ResultString = input.ReadString();
            break;
          }
          case 34: {
            if (extensionFields_ == null) {
              ExtensionFields = new global::Iscp2.V1.Extensions.DownstreamResumeResponseExtensionFields();
            }
            input.ReadMessage(ExtensionFields);
            break;
          }
        }
      }
    }
    #endif

  }

  internal sealed partial class DownstreamCloseRequest : pb::IMessage<DownstreamCloseRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DownstreamCloseRequest> _parser = new pb::MessageParser<DownstreamCloseRequest>(() => new DownstreamCloseRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<DownstreamCloseRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Iscp2.V1.DownstreamReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DownstreamCloseRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DownstreamCloseRequest(DownstreamCloseRequest other) : this() {
      requestId_ = other.requestId_;
      streamId_ = other.streamId_;
      extensionFields_ = other.extensionFields_ != null ? other.extensionFields_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DownstreamCloseRequest Clone() {
      return new DownstreamCloseRequest(this);
    }

    /// <summary>Field number for the "request_id" field.</summary>
    public const int RequestIdFieldNumber = 1;
    private uint requestId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint RequestId {
      get { return requestId_; }
      set {
        requestId_ = value;
      }
    }

    /// <summary>Field number for the "stream_id" field.</summary>
    public const int StreamIdFieldNumber = 2;
    private pb::ByteString streamId_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pb::ByteString StreamId {
      get { return streamId_; }
      set {
        streamId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "extension_fields" field.</summary>
    public const int ExtensionFieldsFieldNumber = 3;
    private global::Iscp2.V1.Extensions.DownstreamCloseRequestExtensionFields extensionFields_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Iscp2.V1.Extensions.DownstreamCloseRequestExtensionFields ExtensionFields {
      get { return extensionFields_; }
      set {
        extensionFields_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as DownstreamCloseRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(DownstreamCloseRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (RequestId != other.RequestId) return false;
      if (StreamId != other.StreamId) return false;
      if (!object.Equals(ExtensionFields, other.ExtensionFields)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (RequestId != 0) hash ^= RequestId.GetHashCode();
      if (StreamId.Length != 0) hash ^= StreamId.GetHashCode();
      if (extensionFields_ != null) hash ^= ExtensionFields.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (RequestId != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(RequestId);
      }
      if (StreamId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteBytes(StreamId);
      }
      if (extensionFields_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(ExtensionFields);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (RequestId != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(RequestId);
      }
      if (StreamId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteBytes(StreamId);
      }
      if (extensionFields_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(ExtensionFields);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (RequestId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(RequestId);
      }
      if (StreamId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(StreamId);
      }
      if (extensionFields_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ExtensionFields);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(DownstreamCloseRequest other) {
      if (other == null) {
        return;
      }
      if (other.RequestId != 0) {
        RequestId = other.RequestId;
      }
      if (other.StreamId.Length != 0) {
        StreamId = other.StreamId;
      }
      if (other.extensionFields_ != null) {
        if (extensionFields_ == null) {
          ExtensionFields = new global::Iscp2.V1.Extensions.DownstreamCloseRequestExtensionFields();
        }
        ExtensionFields.MergeFrom(other.ExtensionFields);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            RequestId = input.ReadUInt32();
            break;
          }
          case 18: {
            StreamId = input.ReadBytes();
            break;
          }
          case 26: {
            if (extensionFields_ == null) {
              ExtensionFields = new global::Iscp2.V1.Extensions.DownstreamCloseRequestExtensionFields();
            }
            input.ReadMessage(ExtensionFields);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            RequestId = input.ReadUInt32();
            break;
          }
          case 18: {
            StreamId = input.ReadBytes();
            break;
          }
          case 26: {
            if (extensionFields_ == null) {
              ExtensionFields = new global::Iscp2.V1.Extensions.DownstreamCloseRequestExtensionFields();
            }
            input.ReadMessage(ExtensionFields);
            break;
          }
        }
      }
    }
    #endif

  }

  internal sealed partial class DownstreamCloseResponse : pb::IMessage<DownstreamCloseResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DownstreamCloseResponse> _parser = new pb::MessageParser<DownstreamCloseResponse>(() => new DownstreamCloseResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<DownstreamCloseResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Iscp2.V1.DownstreamReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DownstreamCloseResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DownstreamCloseResponse(DownstreamCloseResponse other) : this() {
      requestId_ = other.requestId_;
      resultCode_ = other.resultCode_;
      resultString_ = other.resultString_;
      extensionFields_ = other.extensionFields_ != null ? other.extensionFields_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DownstreamCloseResponse Clone() {
      return new DownstreamCloseResponse(this);
    }

    /// <summary>Field number for the "request_id" field.</summary>
    public const int RequestIdFieldNumber = 1;
    private uint requestId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint RequestId {
      get { return requestId_; }
      set {
        requestId_ = value;
      }
    }

    /// <summary>Field number for the "result_code" field.</summary>
    public const int ResultCodeFieldNumber = 2;
    private global::Iscp2.V1.ResultCode resultCode_ = global::Iscp2.V1.ResultCode.Succeeded;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Iscp2.V1.ResultCode ResultCode {
      get { return resultCode_; }
      set {
        resultCode_ = value;
      }
    }

    /// <summary>Field number for the "result_string" field.</summary>
    public const int ResultStringFieldNumber = 3;
    private string resultString_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ResultString {
      get { return resultString_; }
      set {
        resultString_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "extension_fields" field.</summary>
    public const int ExtensionFieldsFieldNumber = 4;
    private global::Iscp2.V1.Extensions.DownstreamCloseResponseExtensionFields extensionFields_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Iscp2.V1.Extensions.DownstreamCloseResponseExtensionFields ExtensionFields {
      get { return extensionFields_; }
      set {
        extensionFields_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as DownstreamCloseResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(DownstreamCloseResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (RequestId != other.RequestId) return false;
      if (ResultCode != other.ResultCode) return false;
      if (ResultString != other.ResultString) return false;
      if (!object.Equals(ExtensionFields, other.ExtensionFields)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (RequestId != 0) hash ^= RequestId.GetHashCode();
      if (ResultCode != global::Iscp2.V1.ResultCode.Succeeded) hash ^= ResultCode.GetHashCode();
      if (ResultString.Length != 0) hash ^= ResultString.GetHashCode();
      if (extensionFields_ != null) hash ^= ExtensionFields.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (RequestId != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(RequestId);
      }
      if (ResultCode != global::Iscp2.V1.ResultCode.Succeeded) {
        output.WriteRawTag(16);
        output.WriteEnum((int) ResultCode);
      }
      if (ResultString.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(ResultString);
      }
      if (extensionFields_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(ExtensionFields);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (RequestId != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(RequestId);
      }
      if (ResultCode != global::Iscp2.V1.ResultCode.Succeeded) {
        output.WriteRawTag(16);
        output.WriteEnum((int) ResultCode);
      }
      if (ResultString.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(ResultString);
      }
      if (extensionFields_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(ExtensionFields);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (RequestId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(RequestId);
      }
      if (ResultCode != global::Iscp2.V1.ResultCode.Succeeded) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ResultCode);
      }
      if (ResultString.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ResultString);
      }
      if (extensionFields_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ExtensionFields);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(DownstreamCloseResponse other) {
      if (other == null) {
        return;
      }
      if (other.RequestId != 0) {
        RequestId = other.RequestId;
      }
      if (other.ResultCode != global::Iscp2.V1.ResultCode.Succeeded) {
        ResultCode = other.ResultCode;
      }
      if (other.ResultString.Length != 0) {
        ResultString = other.ResultString;
      }
      if (other.extensionFields_ != null) {
        if (extensionFields_ == null) {
          ExtensionFields = new global::Iscp2.V1.Extensions.DownstreamCloseResponseExtensionFields();
        }
        ExtensionFields.MergeFrom(other.ExtensionFields);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            RequestId = input.ReadUInt32();
            break;
          }
          case 16: {
            ResultCode = (global::Iscp2.V1.ResultCode) input.ReadEnum();
            break;
          }
          case 26: {
            ResultString = input.ReadString();
            break;
          }
          case 34: {
            if (extensionFields_ == null) {
              ExtensionFields = new global::Iscp2.V1.Extensions.DownstreamCloseResponseExtensionFields();
            }
            input.ReadMessage(ExtensionFields);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            RequestId = input.ReadUInt32();
            break;
          }
          case 16: {
            ResultCode = (global::Iscp2.V1.ResultCode) input.ReadEnum();
            break;
          }
          case 26: {
            ResultString = input.ReadString();
            break;
          }
          case 34: {
            if (extensionFields_ == null) {
              ExtensionFields = new global::Iscp2.V1.Extensions.DownstreamCloseResponseExtensionFields();
            }
            input.ReadMessage(ExtensionFields);
            break;
          }
        }
      }
    }
    #endif

  }

  internal sealed partial class DownstreamChunk : pb::IMessage<DownstreamChunk>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DownstreamChunk> _parser = new pb::MessageParser<DownstreamChunk>(() => new DownstreamChunk());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<DownstreamChunk> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Iscp2.V1.DownstreamReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DownstreamChunk() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DownstreamChunk(DownstreamChunk other) : this() {
      streamIdAlias_ = other.streamIdAlias_;
      streamChunk_ = other.streamChunk_ != null ? other.streamChunk_.Clone() : null;
      extensionFields_ = other.extensionFields_ != null ? other.extensionFields_.Clone() : null;
      switch (other.UpstreamOrAliasCase) {
        case UpstreamOrAliasOneofCase.UpstreamInfo:
          UpstreamInfo = other.UpstreamInfo.Clone();
          break;
        case UpstreamOrAliasOneofCase.UpstreamAlias:
          UpstreamAlias = other.UpstreamAlias;
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DownstreamChunk Clone() {
      return new DownstreamChunk(this);
    }

    /// <summary>Field number for the "stream_id_alias" field.</summary>
    public const int StreamIdAliasFieldNumber = 1;
    private uint streamIdAlias_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint StreamIdAlias {
      get { return streamIdAlias_; }
      set {
        streamIdAlias_ = value;
      }
    }

    /// <summary>Field number for the "upstream_info" field.</summary>
    public const int UpstreamInfoFieldNumber = 2;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Iscp2.V1.UpstreamInfo UpstreamInfo {
      get { return upstreamOrAliasCase_ == UpstreamOrAliasOneofCase.UpstreamInfo ? (global::Iscp2.V1.UpstreamInfo) upstreamOrAlias_ : null; }
      set {
        upstreamOrAlias_ = value;
        upstreamOrAliasCase_ = value == null ? UpstreamOrAliasOneofCase.None : UpstreamOrAliasOneofCase.UpstreamInfo;
      }
    }

    /// <summary>Field number for the "upstream_alias" field.</summary>
    public const int UpstreamAliasFieldNumber = 3;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint UpstreamAlias {
      get { return HasUpstreamAlias ? (uint) upstreamOrAlias_ : 0; }
      set {
        upstreamOrAlias_ = value;
        upstreamOrAliasCase_ = UpstreamOrAliasOneofCase.UpstreamAlias;
      }
    }
    /// <summary>Gets whether the "upstream_alias" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasUpstreamAlias {
      get { return upstreamOrAliasCase_ == UpstreamOrAliasOneofCase.UpstreamAlias; }
    }
    /// <summary> Clears the value of the oneof if it's currently set to "upstream_alias" </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearUpstreamAlias() {
      if (HasUpstreamAlias) {
        ClearUpstreamOrAlias();
      }
    }

    /// <summary>Field number for the "stream_chunk" field.</summary>
    public const int StreamChunkFieldNumber = 4;
    private global::Iscp2.V1.StreamChunk streamChunk_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Iscp2.V1.StreamChunk StreamChunk {
      get { return streamChunk_; }
      set {
        streamChunk_ = value;
      }
    }

    /// <summary>Field number for the "extension_fields" field.</summary>
    public const int ExtensionFieldsFieldNumber = 5;
    private global::Iscp2.V1.Extensions.DownstreamChunkExtensionFields extensionFields_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Iscp2.V1.Extensions.DownstreamChunkExtensionFields ExtensionFields {
      get { return extensionFields_; }
      set {
        extensionFields_ = value;
      }
    }

    private object upstreamOrAlias_;
    /// <summary>Enum of possible cases for the "upstream_or_alias" oneof.</summary>
    public enum UpstreamOrAliasOneofCase {
      None = 0,
      UpstreamInfo = 2,
      UpstreamAlias = 3,
    }
    private UpstreamOrAliasOneofCase upstreamOrAliasCase_ = UpstreamOrAliasOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UpstreamOrAliasOneofCase UpstreamOrAliasCase {
      get { return upstreamOrAliasCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearUpstreamOrAlias() {
      upstreamOrAliasCase_ = UpstreamOrAliasOneofCase.None;
      upstreamOrAlias_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as DownstreamChunk);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(DownstreamChunk other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (StreamIdAlias != other.StreamIdAlias) return false;
      if (!object.Equals(UpstreamInfo, other.UpstreamInfo)) return false;
      if (UpstreamAlias != other.UpstreamAlias) return false;
      if (!object.Equals(StreamChunk, other.StreamChunk)) return false;
      if (!object.Equals(ExtensionFields, other.ExtensionFields)) return false;
      if (UpstreamOrAliasCase != other.UpstreamOrAliasCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (StreamIdAlias != 0) hash ^= StreamIdAlias.GetHashCode();
      if (upstreamOrAliasCase_ == UpstreamOrAliasOneofCase.UpstreamInfo) hash ^= UpstreamInfo.GetHashCode();
      if (HasUpstreamAlias) hash ^= UpstreamAlias.GetHashCode();
      if (streamChunk_ != null) hash ^= StreamChunk.GetHashCode();
      if (extensionFields_ != null) hash ^= ExtensionFields.GetHashCode();
      hash ^= (int) upstreamOrAliasCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (StreamIdAlias != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(StreamIdAlias);
      }
      if (upstreamOrAliasCase_ == UpstreamOrAliasOneofCase.UpstreamInfo) {
        output.WriteRawTag(18);
        output.WriteMessage(UpstreamInfo);
      }
      if (HasUpstreamAlias) {
        output.WriteRawTag(24);
        output.WriteUInt32(UpstreamAlias);
      }
      if (streamChunk_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(StreamChunk);
      }
      if (extensionFields_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(ExtensionFields);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (StreamIdAlias != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(StreamIdAlias);
      }
      if (upstreamOrAliasCase_ == UpstreamOrAliasOneofCase.UpstreamInfo) {
        output.WriteRawTag(18);
        output.WriteMessage(UpstreamInfo);
      }
      if (HasUpstreamAlias) {
        output.WriteRawTag(24);
        output.WriteUInt32(UpstreamAlias);
      }
      if (streamChunk_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(StreamChunk);
      }
      if (extensionFields_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(ExtensionFields);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (StreamIdAlias != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(StreamIdAlias);
      }
      if (upstreamOrAliasCase_ == UpstreamOrAliasOneofCase.UpstreamInfo) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UpstreamInfo);
      }
      if (HasUpstreamAlias) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(UpstreamAlias);
      }
      if (streamChunk_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(StreamChunk);
      }
      if (extensionFields_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ExtensionFields);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(DownstreamChunk other) {
      if (other == null) {
        return;
      }
      if (other.StreamIdAlias != 0) {
        StreamIdAlias = other.StreamIdAlias;
      }
      if (other.streamChunk_ != null) {
        if (streamChunk_ == null) {
          StreamChunk = new global::Iscp2.V1.StreamChunk();
        }
        StreamChunk.MergeFrom(other.StreamChunk);
      }
      if (other.extensionFields_ != null) {
        if (extensionFields_ == null) {
          ExtensionFields = new global::Iscp2.V1.Extensions.DownstreamChunkExtensionFields();
        }
        ExtensionFields.MergeFrom(other.ExtensionFields);
      }
      switch (other.UpstreamOrAliasCase) {
        case UpstreamOrAliasOneofCase.UpstreamInfo:
          if (UpstreamInfo == null) {
            UpstreamInfo = new global::Iscp2.V1.UpstreamInfo();
          }
          UpstreamInfo.MergeFrom(other.UpstreamInfo);
          break;
        case UpstreamOrAliasOneofCase.UpstreamAlias:
          UpstreamAlias = other.UpstreamAlias;
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            StreamIdAlias = input.ReadUInt32();
            break;
          }
          case 18: {
            global::Iscp2.V1.UpstreamInfo subBuilder = new global::Iscp2.V1.UpstreamInfo();
            if (upstreamOrAliasCase_ == UpstreamOrAliasOneofCase.UpstreamInfo) {
              subBuilder.MergeFrom(UpstreamInfo);
            }
            input.ReadMessage(subBuilder);
            UpstreamInfo = subBuilder;
            break;
          }
          case 24: {
            UpstreamAlias = input.ReadUInt32();
            break;
          }
          case 34: {
            if (streamChunk_ == null) {
              StreamChunk = new global::Iscp2.V1.StreamChunk();
            }
            input.ReadMessage(StreamChunk);
            break;
          }
          case 42: {
            if (extensionFields_ == null) {
              ExtensionFields = new global::Iscp2.V1.Extensions.DownstreamChunkExtensionFields();
            }
            input.ReadMessage(ExtensionFields);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            StreamIdAlias = input.ReadUInt32();
            break;
          }
          case 18: {
            global::Iscp2.V1.UpstreamInfo subBuilder = new global::Iscp2.V1.UpstreamInfo();
            if (upstreamOrAliasCase_ == UpstreamOrAliasOneofCase.UpstreamInfo) {
              subBuilder.MergeFrom(UpstreamInfo);
            }
            input.ReadMessage(subBuilder);
            UpstreamInfo = subBuilder;
            break;
          }
          case 24: {
            UpstreamAlias = input.ReadUInt32();
            break;
          }
          case 34: {
            if (streamChunk_ == null) {
              StreamChunk = new global::Iscp2.V1.StreamChunk();
            }
            input.ReadMessage(StreamChunk);
            break;
          }
          case 42: {
            if (extensionFields_ == null) {
              ExtensionFields = new global::Iscp2.V1.Extensions.DownstreamChunkExtensionFields();
            }
            input.ReadMessage(ExtensionFields);
            break;
          }
        }
      }
    }
    #endif

  }

  internal sealed partial class DownstreamChunkAck : pb::IMessage<DownstreamChunkAck>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DownstreamChunkAck> _parser = new pb::MessageParser<DownstreamChunkAck>(() => new DownstreamChunkAck());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<DownstreamChunkAck> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Iscp2.V1.DownstreamReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DownstreamChunkAck() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DownstreamChunkAck(DownstreamChunkAck other) : this() {
      streamIdAlias_ = other.streamIdAlias_;
      ackId_ = other.ackId_;
      results_ = other.results_.Clone();
      upstreamAliases_ = other.upstreamAliases_.Clone();
      dataIdAliases_ = other.dataIdAliases_.Clone();
      extensionFields_ = other.extensionFields_ != null ? other.extensionFields_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DownstreamChunkAck Clone() {
      return new DownstreamChunkAck(this);
    }

    /// <summary>Field number for the "stream_id_alias" field.</summary>
    public const int StreamIdAliasFieldNumber = 1;
    private uint streamIdAlias_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint StreamIdAlias {
      get { return streamIdAlias_; }
      set {
        streamIdAlias_ = value;
      }
    }

    /// <summary>Field number for the "ack_id" field.</summary>
    public const int AckIdFieldNumber = 2;
    private uint ackId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint AckId {
      get { return ackId_; }
      set {
        ackId_ = value;
      }
    }

    /// <summary>Field number for the "results" field.</summary>
    public const int ResultsFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Iscp2.V1.DownstreamChunkResult> _repeated_results_codec
        = pb::FieldCodec.ForMessage(26, global::Iscp2.V1.DownstreamChunkResult.Parser);
    private readonly pbc::RepeatedField<global::Iscp2.V1.DownstreamChunkResult> results_ = new pbc::RepeatedField<global::Iscp2.V1.DownstreamChunkResult>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Iscp2.V1.DownstreamChunkResult> Results {
      get { return results_; }
    }

    /// <summary>Field number for the "upstream_aliases" field.</summary>
    public const int UpstreamAliasesFieldNumber = 4;
    private static readonly pbc::MapField<uint, global::Iscp2.V1.UpstreamInfo>.Codec _map_upstreamAliases_codec
        = new pbc::MapField<uint, global::Iscp2.V1.UpstreamInfo>.Codec(pb::FieldCodec.ForUInt32(8, 0), pb::FieldCodec.ForMessage(18, global::Iscp2.V1.UpstreamInfo.Parser), 34);
    private readonly pbc::MapField<uint, global::Iscp2.V1.UpstreamInfo> upstreamAliases_ = new pbc::MapField<uint, global::Iscp2.V1.UpstreamInfo>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::MapField<uint, global::Iscp2.V1.UpstreamInfo> UpstreamAliases {
      get { return upstreamAliases_; }
    }

    /// <summary>Field number for the "data_id_aliases" field.</summary>
    public const int DataIdAliasesFieldNumber = 5;
    private static readonly pbc::MapField<uint, global::Iscp2.V1.DataID>.Codec _map_dataIdAliases_codec
        = new pbc::MapField<uint, global::Iscp2.V1.DataID>.Codec(pb::FieldCodec.ForUInt32(8, 0), pb::FieldCodec.ForMessage(18, global::Iscp2.V1.DataID.Parser), 42);
    private readonly pbc::MapField<uint, global::Iscp2.V1.DataID> dataIdAliases_ = new pbc::MapField<uint, global::Iscp2.V1.DataID>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::MapField<uint, global::Iscp2.V1.DataID> DataIdAliases {
      get { return dataIdAliases_; }
    }

    /// <summary>Field number for the "extension_fields" field.</summary>
    public const int ExtensionFieldsFieldNumber = 6;
    private global::Iscp2.V1.Extensions.DownstreamChunkAckExtensionFields extensionFields_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Iscp2.V1.Extensions.DownstreamChunkAckExtensionFields ExtensionFields {
      get { return extensionFields_; }
      set {
        extensionFields_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as DownstreamChunkAck);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(DownstreamChunkAck other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (StreamIdAlias != other.StreamIdAlias) return false;
      if (AckId != other.AckId) return false;
      if(!results_.Equals(other.results_)) return false;
      if (!UpstreamAliases.Equals(other.UpstreamAliases)) return false;
      if (!DataIdAliases.Equals(other.DataIdAliases)) return false;
      if (!object.Equals(ExtensionFields, other.ExtensionFields)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (StreamIdAlias != 0) hash ^= StreamIdAlias.GetHashCode();
      if (AckId != 0) hash ^= AckId.GetHashCode();
      hash ^= results_.GetHashCode();
      hash ^= UpstreamAliases.GetHashCode();
      hash ^= DataIdAliases.GetHashCode();
      if (extensionFields_ != null) hash ^= ExtensionFields.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (StreamIdAlias != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(StreamIdAlias);
      }
      if (AckId != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(AckId);
      }
      results_.WriteTo(output, _repeated_results_codec);
      upstreamAliases_.WriteTo(output, _map_upstreamAliases_codec);
      dataIdAliases_.WriteTo(output, _map_dataIdAliases_codec);
      if (extensionFields_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(ExtensionFields);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (StreamIdAlias != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(StreamIdAlias);
      }
      if (AckId != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(AckId);
      }
      results_.WriteTo(ref output, _repeated_results_codec);
      upstreamAliases_.WriteTo(ref output, _map_upstreamAliases_codec);
      dataIdAliases_.WriteTo(ref output, _map_dataIdAliases_codec);
      if (extensionFields_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(ExtensionFields);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (StreamIdAlias != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(StreamIdAlias);
      }
      if (AckId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(AckId);
      }
      size += results_.CalculateSize(_repeated_results_codec);
      size += upstreamAliases_.CalculateSize(_map_upstreamAliases_codec);
      size += dataIdAliases_.CalculateSize(_map_dataIdAliases_codec);
      if (extensionFields_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ExtensionFields);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(DownstreamChunkAck other) {
      if (other == null) {
        return;
      }
      if (other.StreamIdAlias != 0) {
        StreamIdAlias = other.StreamIdAlias;
      }
      if (other.AckId != 0) {
        AckId = other.AckId;
      }
      results_.Add(other.results_);
      upstreamAliases_.MergeFrom(other.upstreamAliases_);
      dataIdAliases_.MergeFrom(other.dataIdAliases_);
      if (other.extensionFields_ != null) {
        if (extensionFields_ == null) {
          ExtensionFields = new global::Iscp2.V1.Extensions.DownstreamChunkAckExtensionFields();
        }
        ExtensionFields.MergeFrom(other.ExtensionFields);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            StreamIdAlias = input.ReadUInt32();
            break;
          }
          case 16: {
            AckId = input.ReadUInt32();
            break;
          }
          case 26: {
            results_.AddEntriesFrom(input, _repeated_results_codec);
            break;
          }
          case 34: {
            upstreamAliases_.AddEntriesFrom(input, _map_upstreamAliases_codec);
            break;
          }
          case 42: {
            dataIdAliases_.AddEntriesFrom(input, _map_dataIdAliases_codec);
            break;
          }
          case 50: {
            if (extensionFields_ == null) {
              ExtensionFields = new global::Iscp2.V1.Extensions.DownstreamChunkAckExtensionFields();
            }
            input.ReadMessage(ExtensionFields);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            StreamIdAlias = input.ReadUInt32();
            break;
          }
          case 16: {
            AckId = input.ReadUInt32();
            break;
          }
          case 26: {
            results_.AddEntriesFrom(ref input, _repeated_results_codec);
            break;
          }
          case 34: {
            upstreamAliases_.AddEntriesFrom(ref input, _map_upstreamAliases_codec);
            break;
          }
          case 42: {
            dataIdAliases_.AddEntriesFrom(ref input, _map_dataIdAliases_codec);
            break;
          }
          case 50: {
            if (extensionFields_ == null) {
              ExtensionFields = new global::Iscp2.V1.Extensions.DownstreamChunkAckExtensionFields();
            }
            input.ReadMessage(ExtensionFields);
            break;
          }
        }
      }
    }
    #endif

  }

  internal sealed partial class DownstreamChunkAckComplete : pb::IMessage<DownstreamChunkAckComplete>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DownstreamChunkAckComplete> _parser = new pb::MessageParser<DownstreamChunkAckComplete>(() => new DownstreamChunkAckComplete());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<DownstreamChunkAckComplete> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Iscp2.V1.DownstreamReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DownstreamChunkAckComplete() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DownstreamChunkAckComplete(DownstreamChunkAckComplete other) : this() {
      streamIdAlias_ = other.streamIdAlias_;
      ackId_ = other.ackId_;
      resultCode_ = other.resultCode_;
      resultString_ = other.resultString_;
      extensionFields_ = other.extensionFields_ != null ? other.extensionFields_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DownstreamChunkAckComplete Clone() {
      return new DownstreamChunkAckComplete(this);
    }

    /// <summary>Field number for the "stream_id_alias" field.</summary>
    public const int StreamIdAliasFieldNumber = 1;
    private uint streamIdAlias_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint StreamIdAlias {
      get { return streamIdAlias_; }
      set {
        streamIdAlias_ = value;
      }
    }

    /// <summary>Field number for the "ack_id" field.</summary>
    public const int AckIdFieldNumber = 2;
    private uint ackId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint AckId {
      get { return ackId_; }
      set {
        ackId_ = value;
      }
    }

    /// <summary>Field number for the "result_code" field.</summary>
    public const int ResultCodeFieldNumber = 3;
    private global::Iscp2.V1.ResultCode resultCode_ = global::Iscp2.V1.ResultCode.Succeeded;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Iscp2.V1.ResultCode ResultCode {
      get { return resultCode_; }
      set {
        resultCode_ = value;
      }
    }

    /// <summary>Field number for the "result_string" field.</summary>
    public const int ResultStringFieldNumber = 4;
    private string resultString_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ResultString {
      get { return resultString_; }
      set {
        resultString_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "extension_fields" field.</summary>
    public const int ExtensionFieldsFieldNumber = 5;
    private global::Iscp2.V1.Extensions.DownstreamChunkAckCompleteExtensionFields extensionFields_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Iscp2.V1.Extensions.DownstreamChunkAckCompleteExtensionFields ExtensionFields {
      get { return extensionFields_; }
      set {
        extensionFields_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as DownstreamChunkAckComplete);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(DownstreamChunkAckComplete other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (StreamIdAlias != other.StreamIdAlias) return false;
      if (AckId != other.AckId) return false;
      if (ResultCode != other.ResultCode) return false;
      if (ResultString != other.ResultString) return false;
      if (!object.Equals(ExtensionFields, other.ExtensionFields)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (StreamIdAlias != 0) hash ^= StreamIdAlias.GetHashCode();
      if (AckId != 0) hash ^= AckId.GetHashCode();
      if (ResultCode != global::Iscp2.V1.ResultCode.Succeeded) hash ^= ResultCode.GetHashCode();
      if (ResultString.Length != 0) hash ^= ResultString.GetHashCode();
      if (extensionFields_ != null) hash ^= ExtensionFields.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (StreamIdAlias != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(StreamIdAlias);
      }
      if (AckId != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(AckId);
      }
      if (ResultCode != global::Iscp2.V1.ResultCode.Succeeded) {
        output.WriteRawTag(24);
        output.WriteEnum((int) ResultCode);
      }
      if (ResultString.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(ResultString);
      }
      if (extensionFields_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(ExtensionFields);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (StreamIdAlias != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(StreamIdAlias);
      }
      if (AckId != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(AckId);
      }
      if (ResultCode != global::Iscp2.V1.ResultCode.Succeeded) {
        output.WriteRawTag(24);
        output.WriteEnum((int) ResultCode);
      }
      if (ResultString.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(ResultString);
      }
      if (extensionFields_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(ExtensionFields);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (StreamIdAlias != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(StreamIdAlias);
      }
      if (AckId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(AckId);
      }
      if (ResultCode != global::Iscp2.V1.ResultCode.Succeeded) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ResultCode);
      }
      if (ResultString.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ResultString);
      }
      if (extensionFields_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ExtensionFields);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(DownstreamChunkAckComplete other) {
      if (other == null) {
        return;
      }
      if (other.StreamIdAlias != 0) {
        StreamIdAlias = other.StreamIdAlias;
      }
      if (other.AckId != 0) {
        AckId = other.AckId;
      }
      if (other.ResultCode != global::Iscp2.V1.ResultCode.Succeeded) {
        ResultCode = other.ResultCode;
      }
      if (other.ResultString.Length != 0) {
        ResultString = other.ResultString;
      }
      if (other.extensionFields_ != null) {
        if (extensionFields_ == null) {
          ExtensionFields = new global::Iscp2.V1.Extensions.DownstreamChunkAckCompleteExtensionFields();
        }
        ExtensionFields.MergeFrom(other.ExtensionFields);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            StreamIdAlias = input.ReadUInt32();
            break;
          }
          case 16: {
            AckId = input.ReadUInt32();
            break;
          }
          case 24: {
            ResultCode = (global::Iscp2.V1.ResultCode) input.ReadEnum();
            break;
          }
          case 34: {
            ResultString = input.ReadString();
            break;
          }
          case 42: {
            if (extensionFields_ == null) {
              ExtensionFields = new global::Iscp2.V1.Extensions.DownstreamChunkAckCompleteExtensionFields();
            }
            input.ReadMessage(ExtensionFields);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            StreamIdAlias = input.ReadUInt32();
            break;
          }
          case 16: {
            AckId = input.ReadUInt32();
            break;
          }
          case 24: {
            ResultCode = (global::Iscp2.V1.ResultCode) input.ReadEnum();
            break;
          }
          case 34: {
            ResultString = input.ReadString();
            break;
          }
          case 42: {
            if (extensionFields_ == null) {
              ExtensionFields = new global::Iscp2.V1.Extensions.DownstreamChunkAckCompleteExtensionFields();
            }
            input.ReadMessage(ExtensionFields);
            break;
          }
        }
      }
    }
    #endif

  }

  internal sealed partial class DownstreamMetadata : pb::IMessage<DownstreamMetadata>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DownstreamMetadata> _parser = new pb::MessageParser<DownstreamMetadata>(() => new DownstreamMetadata());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<DownstreamMetadata> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Iscp2.V1.DownstreamReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DownstreamMetadata() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DownstreamMetadata(DownstreamMetadata other) : this() {
      requestId_ = other.requestId_;
      streamIdAlias_ = other.streamIdAlias_;
      sourceNodeId_ = other.sourceNodeId_;
      extensionFields_ = other.extensionFields_ != null ? other.extensionFields_.Clone() : null;
      switch (other.MetadataCase) {
        case MetadataOneofCase.BaseTime:
          BaseTime = other.BaseTime.Clone();
          break;
        case MetadataOneofCase.UpstreamOpen:
          UpstreamOpen = other.UpstreamOpen.Clone();
          break;
        case MetadataOneofCase.UpstreamAbnormalClose:
          UpstreamAbnormalClose = other.UpstreamAbnormalClose.Clone();
          break;
        case MetadataOneofCase.UpstreamResume:
          UpstreamResume = other.UpstreamResume.Clone();
          break;
        case MetadataOneofCase.UpstreamNormalClose:
          UpstreamNormalClose = other.UpstreamNormalClose.Clone();
          break;
        case MetadataOneofCase.DownstreamOpen:
          DownstreamOpen = other.DownstreamOpen.Clone();
          break;
        case MetadataOneofCase.DownstreamAbnormalClose:
          DownstreamAbnormalClose = other.DownstreamAbnormalClose.Clone();
          break;
        case MetadataOneofCase.DownstreamResume:
          DownstreamResume = other.DownstreamResume.Clone();
          break;
        case MetadataOneofCase.DownstreamNormalClose:
          DownstreamNormalClose = other.DownstreamNormalClose.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DownstreamMetadata Clone() {
      return new DownstreamMetadata(this);
    }

    /// <summary>Field number for the "request_id" field.</summary>
    public const int RequestIdFieldNumber = 1;
    private uint requestId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint RequestId {
      get { return requestId_; }
      set {
        requestId_ = value;
      }
    }

    /// <summary>Field number for the "stream_id_alias" field.</summary>
    public const int StreamIdAliasFieldNumber = 13;
    private uint streamIdAlias_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint StreamIdAlias {
      get { return streamIdAlias_; }
      set {
        streamIdAlias_ = value;
      }
    }

    /// <summary>Field number for the "base_time" field.</summary>
    public const int BaseTimeFieldNumber = 2;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Iscp2.V1.BaseTime BaseTime {
      get { return metadataCase_ == MetadataOneofCase.BaseTime ? (global::Iscp2.V1.BaseTime) metadata_ : null; }
      set {
        metadata_ = value;
        metadataCase_ = value == null ? MetadataOneofCase.None : MetadataOneofCase.BaseTime;
      }
    }

    /// <summary>Field number for the "upstream_open" field.</summary>
    public const int UpstreamOpenFieldNumber = 3;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Iscp2.V1.UpstreamOpen UpstreamOpen {
      get { return metadataCase_ == MetadataOneofCase.UpstreamOpen ? (global::Iscp2.V1.UpstreamOpen) metadata_ : null; }
      set {
        metadata_ = value;
        metadataCase_ = value == null ? MetadataOneofCase.None : MetadataOneofCase.UpstreamOpen;
      }
    }

    /// <summary>Field number for the "upstream_abnormal_close" field.</summary>
    public const int UpstreamAbnormalCloseFieldNumber = 4;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Iscp2.V1.UpstreamAbnormalClose UpstreamAbnormalClose {
      get { return metadataCase_ == MetadataOneofCase.UpstreamAbnormalClose ? (global::Iscp2.V1.UpstreamAbnormalClose) metadata_ : null; }
      set {
        metadata_ = value;
        metadataCase_ = value == null ? MetadataOneofCase.None : MetadataOneofCase.UpstreamAbnormalClose;
      }
    }

    /// <summary>Field number for the "upstream_resume" field.</summary>
    public const int UpstreamResumeFieldNumber = 5;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Iscp2.V1.UpstreamResume UpstreamResume {
      get { return metadataCase_ == MetadataOneofCase.UpstreamResume ? (global::Iscp2.V1.UpstreamResume) metadata_ : null; }
      set {
        metadata_ = value;
        metadataCase_ = value == null ? MetadataOneofCase.None : MetadataOneofCase.UpstreamResume;
      }
    }

    /// <summary>Field number for the "upstream_normal_close" field.</summary>
    public const int UpstreamNormalCloseFieldNumber = 6;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Iscp2.V1.UpstreamNormalClose UpstreamNormalClose {
      get { return metadataCase_ == MetadataOneofCase.UpstreamNormalClose ? (global::Iscp2.V1.UpstreamNormalClose) metadata_ : null; }
      set {
        metadata_ = value;
        metadataCase_ = value == null ? MetadataOneofCase.None : MetadataOneofCase.UpstreamNormalClose;
      }
    }

    /// <summary>Field number for the "downstream_open" field.</summary>
    public const int DownstreamOpenFieldNumber = 7;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Iscp2.V1.DownstreamOpen DownstreamOpen {
      get { return metadataCase_ == MetadataOneofCase.DownstreamOpen ? (global::Iscp2.V1.DownstreamOpen) metadata_ : null; }
      set {
        metadata_ = value;
        metadataCase_ = value == null ? MetadataOneofCase.None : MetadataOneofCase.DownstreamOpen;
      }
    }

    /// <summary>Field number for the "downstream_abnormal_close" field.</summary>
    public const int DownstreamAbnormalCloseFieldNumber = 8;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Iscp2.V1.DownstreamAbnormalClose DownstreamAbnormalClose {
      get { return metadataCase_ == MetadataOneofCase.DownstreamAbnormalClose ? (global::Iscp2.V1.DownstreamAbnormalClose) metadata_ : null; }
      set {
        metadata_ = value;
        metadataCase_ = value == null ? MetadataOneofCase.None : MetadataOneofCase.DownstreamAbnormalClose;
      }
    }

    /// <summary>Field number for the "downstream_resume" field.</summary>
    public const int DownstreamResumeFieldNumber = 9;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Iscp2.V1.DownstreamResume DownstreamResume {
      get { return metadataCase_ == MetadataOneofCase.DownstreamResume ? (global::Iscp2.V1.DownstreamResume) metadata_ : null; }
      set {
        metadata_ = value;
        metadataCase_ = value == null ? MetadataOneofCase.None : MetadataOneofCase.DownstreamResume;
      }
    }

    /// <summary>Field number for the "downstream_normal_close" field.</summary>
    public const int DownstreamNormalCloseFieldNumber = 10;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Iscp2.V1.DownstreamNormalClose DownstreamNormalClose {
      get { return metadataCase_ == MetadataOneofCase.DownstreamNormalClose ? (global::Iscp2.V1.DownstreamNormalClose) metadata_ : null; }
      set {
        metadata_ = value;
        metadataCase_ = value == null ? MetadataOneofCase.None : MetadataOneofCase.DownstreamNormalClose;
      }
    }

    /// <summary>Field number for the "source_node_id" field.</summary>
    public const int SourceNodeIdFieldNumber = 11;
    private string sourceNodeId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string SourceNodeId {
      get { return sourceNodeId_; }
      set {
        sourceNodeId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "extension_fields" field.</summary>
    public const int ExtensionFieldsFieldNumber = 12;
    private global::Iscp2.V1.Extensions.DownstreamMetadataExtensionFields extensionFields_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Iscp2.V1.Extensions.DownstreamMetadataExtensionFields ExtensionFields {
      get { return extensionFields_; }
      set {
        extensionFields_ = value;
      }
    }

    private object metadata_;
    /// <summary>Enum of possible cases for the "metadata" oneof.</summary>
    public enum MetadataOneofCase {
      None = 0,
      BaseTime = 2,
      UpstreamOpen = 3,
      UpstreamAbnormalClose = 4,
      UpstreamResume = 5,
      UpstreamNormalClose = 6,
      DownstreamOpen = 7,
      DownstreamAbnormalClose = 8,
      DownstreamResume = 9,
      DownstreamNormalClose = 10,
    }
    private MetadataOneofCase metadataCase_ = MetadataOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MetadataOneofCase MetadataCase {
      get { return metadataCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearMetadata() {
      metadataCase_ = MetadataOneofCase.None;
      metadata_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as DownstreamMetadata);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(DownstreamMetadata other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (RequestId != other.RequestId) return false;
      if (StreamIdAlias != other.StreamIdAlias) return false;
      if (!object.Equals(BaseTime, other.BaseTime)) return false;
      if (!object.Equals(UpstreamOpen, other.UpstreamOpen)) return false;
      if (!object.Equals(UpstreamAbnormalClose, other.UpstreamAbnormalClose)) return false;
      if (!object.Equals(UpstreamResume, other.UpstreamResume)) return false;
      if (!object.Equals(UpstreamNormalClose, other.UpstreamNormalClose)) return false;
      if (!object.Equals(DownstreamOpen, other.DownstreamOpen)) return false;
      if (!object.Equals(DownstreamAbnormalClose, other.DownstreamAbnormalClose)) return false;
      if (!object.Equals(DownstreamResume, other.DownstreamResume)) return false;
      if (!object.Equals(DownstreamNormalClose, other.DownstreamNormalClose)) return false;
      if (SourceNodeId != other.SourceNodeId) return false;
      if (!object.Equals(ExtensionFields, other.ExtensionFields)) return false;
      if (MetadataCase != other.MetadataCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (RequestId != 0) hash ^= RequestId.GetHashCode();
      if (StreamIdAlias != 0) hash ^= StreamIdAlias.GetHashCode();
      if (metadataCase_ == MetadataOneofCase.BaseTime) hash ^= BaseTime.GetHashCode();
      if (metadataCase_ == MetadataOneofCase.UpstreamOpen) hash ^= UpstreamOpen.GetHashCode();
      if (metadataCase_ == MetadataOneofCase.UpstreamAbnormalClose) hash ^= UpstreamAbnormalClose.GetHashCode();
      if (metadataCase_ == MetadataOneofCase.UpstreamResume) hash ^= UpstreamResume.GetHashCode();
      if (metadataCase_ == MetadataOneofCase.UpstreamNormalClose) hash ^= UpstreamNormalClose.GetHashCode();
      if (metadataCase_ == MetadataOneofCase.DownstreamOpen) hash ^= DownstreamOpen.GetHashCode();
      if (metadataCase_ == MetadataOneofCase.DownstreamAbnormalClose) hash ^= DownstreamAbnormalClose.GetHashCode();
      if (metadataCase_ == MetadataOneofCase.DownstreamResume) hash ^= DownstreamResume.GetHashCode();
      if (metadataCase_ == MetadataOneofCase.DownstreamNormalClose) hash ^= DownstreamNormalClose.GetHashCode();
      if (SourceNodeId.Length != 0) hash ^= SourceNodeId.GetHashCode();
      if (extensionFields_ != null) hash ^= ExtensionFields.GetHashCode();
      hash ^= (int) metadataCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (RequestId != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(RequestId);
      }
      if (metadataCase_ == MetadataOneofCase.BaseTime) {
        output.WriteRawTag(18);
        output.WriteMessage(BaseTime);
      }
      if (metadataCase_ == MetadataOneofCase.UpstreamOpen) {
        output.WriteRawTag(26);
        output.WriteMessage(UpstreamOpen);
      }
      if (metadataCase_ == MetadataOneofCase.UpstreamAbnormalClose) {
        output.WriteRawTag(34);
        output.WriteMessage(UpstreamAbnormalClose);
      }
      if (metadataCase_ == MetadataOneofCase.UpstreamResume) {
        output.WriteRawTag(42);
        output.WriteMessage(UpstreamResume);
      }
      if (metadataCase_ == MetadataOneofCase.UpstreamNormalClose) {
        output.WriteRawTag(50);
        output.WriteMessage(UpstreamNormalClose);
      }
      if (metadataCase_ == MetadataOneofCase.DownstreamOpen) {
        output.WriteRawTag(58);
        output.WriteMessage(DownstreamOpen);
      }
      if (metadataCase_ == MetadataOneofCase.DownstreamAbnormalClose) {
        output.WriteRawTag(66);
        output.WriteMessage(DownstreamAbnormalClose);
      }
      if (metadataCase_ == MetadataOneofCase.DownstreamResume) {
        output.WriteRawTag(74);
        output.WriteMessage(DownstreamResume);
      }
      if (metadataCase_ == MetadataOneofCase.DownstreamNormalClose) {
        output.WriteRawTag(82);
        output.WriteMessage(DownstreamNormalClose);
      }
      if (SourceNodeId.Length != 0) {
        output.WriteRawTag(90);
        output.WriteString(SourceNodeId);
      }
      if (extensionFields_ != null) {
        output.WriteRawTag(98);
        output.WriteMessage(ExtensionFields);
      }
      if (StreamIdAlias != 0) {
        output.WriteRawTag(104);
        output.WriteUInt32(StreamIdAlias);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (RequestId != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(RequestId);
      }
      if (metadataCase_ == MetadataOneofCase.BaseTime) {
        output.WriteRawTag(18);
        output.WriteMessage(BaseTime);
      }
      if (metadataCase_ == MetadataOneofCase.UpstreamOpen) {
        output.WriteRawTag(26);
        output.WriteMessage(UpstreamOpen);
      }
      if (metadataCase_ == MetadataOneofCase.UpstreamAbnormalClose) {
        output.WriteRawTag(34);
        output.WriteMessage(UpstreamAbnormalClose);
      }
      if (metadataCase_ == MetadataOneofCase.UpstreamResume) {
        output.WriteRawTag(42);
        output.WriteMessage(UpstreamResume);
      }
      if (metadataCase_ == MetadataOneofCase.UpstreamNormalClose) {
        output.WriteRawTag(50);
        output.WriteMessage(UpstreamNormalClose);
      }
      if (metadataCase_ == MetadataOneofCase.DownstreamOpen) {
        output.WriteRawTag(58);
        output.WriteMessage(DownstreamOpen);
      }
      if (metadataCase_ == MetadataOneofCase.DownstreamAbnormalClose) {
        output.WriteRawTag(66);
        output.WriteMessage(DownstreamAbnormalClose);
      }
      if (metadataCase_ == MetadataOneofCase.DownstreamResume) {
        output.WriteRawTag(74);
        output.WriteMessage(DownstreamResume);
      }
      if (metadataCase_ == MetadataOneofCase.DownstreamNormalClose) {
        output.WriteRawTag(82);
        output.WriteMessage(DownstreamNormalClose);
      }
      if (SourceNodeId.Length != 0) {
        output.WriteRawTag(90);
        output.WriteString(SourceNodeId);
      }
      if (extensionFields_ != null) {
        output.WriteRawTag(98);
        output.WriteMessage(ExtensionFields);
      }
      if (StreamIdAlias != 0) {
        output.WriteRawTag(104);
        output.WriteUInt32(StreamIdAlias);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (RequestId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(RequestId);
      }
      if (StreamIdAlias != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(StreamIdAlias);
      }
      if (metadataCase_ == MetadataOneofCase.BaseTime) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(BaseTime);
      }
      if (metadataCase_ == MetadataOneofCase.UpstreamOpen) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UpstreamOpen);
      }
      if (metadataCase_ == MetadataOneofCase.UpstreamAbnormalClose) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UpstreamAbnormalClose);
      }
      if (metadataCase_ == MetadataOneofCase.UpstreamResume) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UpstreamResume);
      }
      if (metadataCase_ == MetadataOneofCase.UpstreamNormalClose) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UpstreamNormalClose);
      }
      if (metadataCase_ == MetadataOneofCase.DownstreamOpen) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(DownstreamOpen);
      }
      if (metadataCase_ == MetadataOneofCase.DownstreamAbnormalClose) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(DownstreamAbnormalClose);
      }
      if (metadataCase_ == MetadataOneofCase.DownstreamResume) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(DownstreamResume);
      }
      if (metadataCase_ == MetadataOneofCase.DownstreamNormalClose) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(DownstreamNormalClose);
      }
      if (SourceNodeId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SourceNodeId);
      }
      if (extensionFields_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ExtensionFields);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(DownstreamMetadata other) {
      if (other == null) {
        return;
      }
      if (other.RequestId != 0) {
        RequestId = other.RequestId;
      }
      if (other.StreamIdAlias != 0) {
        StreamIdAlias = other.StreamIdAlias;
      }
      if (other.SourceNodeId.Length != 0) {
        SourceNodeId = other.SourceNodeId;
      }
      if (other.extensionFields_ != null) {
        if (extensionFields_ == null) {
          ExtensionFields = new global::Iscp2.V1.Extensions.DownstreamMetadataExtensionFields();
        }
        ExtensionFields.MergeFrom(other.ExtensionFields);
      }
      switch (other.MetadataCase) {
        case MetadataOneofCase.BaseTime:
          if (BaseTime == null) {
            BaseTime = new global::Iscp2.V1.BaseTime();
          }
          BaseTime.MergeFrom(other.BaseTime);
          break;
        case MetadataOneofCase.UpstreamOpen:
          if (UpstreamOpen == null) {
            UpstreamOpen = new global::Iscp2.V1.UpstreamOpen();
          }
          UpstreamOpen.MergeFrom(other.UpstreamOpen);
          break;
        case MetadataOneofCase.UpstreamAbnormalClose:
          if (UpstreamAbnormalClose == null) {
            UpstreamAbnormalClose = new global::Iscp2.V1.UpstreamAbnormalClose();
          }
          UpstreamAbnormalClose.MergeFrom(other.UpstreamAbnormalClose);
          break;
        case MetadataOneofCase.UpstreamResume:
          if (UpstreamResume == null) {
            UpstreamResume = new global::Iscp2.V1.UpstreamResume();
          }
          UpstreamResume.MergeFrom(other.UpstreamResume);
          break;
        case MetadataOneofCase.UpstreamNormalClose:
          if (UpstreamNormalClose == null) {
            UpstreamNormalClose = new global::Iscp2.V1.UpstreamNormalClose();
          }
          UpstreamNormalClose.MergeFrom(other.UpstreamNormalClose);
          break;
        case MetadataOneofCase.DownstreamOpen:
          if (DownstreamOpen == null) {
            DownstreamOpen = new global::Iscp2.V1.DownstreamOpen();
          }
          DownstreamOpen.MergeFrom(other.DownstreamOpen);
          break;
        case MetadataOneofCase.DownstreamAbnormalClose:
          if (DownstreamAbnormalClose == null) {
            DownstreamAbnormalClose = new global::Iscp2.V1.DownstreamAbnormalClose();
          }
          DownstreamAbnormalClose.MergeFrom(other.DownstreamAbnormalClose);
          break;
        case MetadataOneofCase.DownstreamResume:
          if (DownstreamResume == null) {
            DownstreamResume = new global::Iscp2.V1.DownstreamResume();
          }
          DownstreamResume.MergeFrom(other.DownstreamResume);
          break;
        case MetadataOneofCase.DownstreamNormalClose:
          if (DownstreamNormalClose == null) {
            DownstreamNormalClose = new global::Iscp2.V1.DownstreamNormalClose();
          }
          DownstreamNormalClose.MergeFrom(other.DownstreamNormalClose);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            RequestId = input.ReadUInt32();
            break;
          }
          case 18: {
            global::Iscp2.V1.BaseTime subBuilder = new global::Iscp2.V1.BaseTime();
            if (metadataCase_ == MetadataOneofCase.BaseTime) {
              subBuilder.MergeFrom(BaseTime);
            }
            input.ReadMessage(subBuilder);
            BaseTime = subBuilder;
            break;
          }
          case 26: {
            global::Iscp2.V1.UpstreamOpen subBuilder = new global::Iscp2.V1.UpstreamOpen();
            if (metadataCase_ == MetadataOneofCase.UpstreamOpen) {
              subBuilder.MergeFrom(UpstreamOpen);
            }
            input.ReadMessage(subBuilder);
            UpstreamOpen = subBuilder;
            break;
          }
          case 34: {
            global::Iscp2.V1.UpstreamAbnormalClose subBuilder = new global::Iscp2.V1.UpstreamAbnormalClose();
            if (metadataCase_ == MetadataOneofCase.UpstreamAbnormalClose) {
              subBuilder.MergeFrom(UpstreamAbnormalClose);
            }
            input.ReadMessage(subBuilder);
            UpstreamAbnormalClose = subBuilder;
            break;
          }
          case 42: {
            global::Iscp2.V1.UpstreamResume subBuilder = new global::Iscp2.V1.UpstreamResume();
            if (metadataCase_ == MetadataOneofCase.UpstreamResume) {
              subBuilder.MergeFrom(UpstreamResume);
            }
            input.ReadMessage(subBuilder);
            UpstreamResume = subBuilder;
            break;
          }
          case 50: {
            global::Iscp2.V1.UpstreamNormalClose subBuilder = new global::Iscp2.V1.UpstreamNormalClose();
            if (metadataCase_ == MetadataOneofCase.UpstreamNormalClose) {
              subBuilder.MergeFrom(UpstreamNormalClose);
            }
            input.ReadMessage(subBuilder);
            UpstreamNormalClose = subBuilder;
            break;
          }
          case 58: {
            global::Iscp2.V1.DownstreamOpen subBuilder = new global::Iscp2.V1.DownstreamOpen();
            if (metadataCase_ == MetadataOneofCase.DownstreamOpen) {
              subBuilder.MergeFrom(DownstreamOpen);
            }
            input.ReadMessage(subBuilder);
            DownstreamOpen = subBuilder;
            break;
          }
          case 66: {
            global::Iscp2.V1.DownstreamAbnormalClose subBuilder = new global::Iscp2.V1.DownstreamAbnormalClose();
            if (metadataCase_ == MetadataOneofCase.DownstreamAbnormalClose) {
              subBuilder.MergeFrom(DownstreamAbnormalClose);
            }
            input.ReadMessage(subBuilder);
            DownstreamAbnormalClose = subBuilder;
            break;
          }
          case 74: {
            global::Iscp2.V1.DownstreamResume subBuilder = new global::Iscp2.V1.DownstreamResume();
            if (metadataCase_ == MetadataOneofCase.DownstreamResume) {
              subBuilder.MergeFrom(DownstreamResume);
            }
            input.ReadMessage(subBuilder);
            DownstreamResume = subBuilder;
            break;
          }
          case 82: {
            global::Iscp2.V1.DownstreamNormalClose subBuilder = new global::Iscp2.V1.DownstreamNormalClose();
            if (metadataCase_ == MetadataOneofCase.DownstreamNormalClose) {
              subBuilder.MergeFrom(DownstreamNormalClose);
            }
            input.ReadMessage(subBuilder);
            DownstreamNormalClose = subBuilder;
            break;
          }
          case 90: {
            SourceNodeId = input.ReadString();
            break;
          }
          case 98: {
            if (extensionFields_ == null) {
              ExtensionFields = new global::Iscp2.V1.Extensions.DownstreamMetadataExtensionFields();
            }
            input.ReadMessage(ExtensionFields);
            break;
          }
          case 104: {
            StreamIdAlias = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            RequestId = input.ReadUInt32();
            break;
          }
          case 18: {
            global::Iscp2.V1.BaseTime subBuilder = new global::Iscp2.V1.BaseTime();
            if (metadataCase_ == MetadataOneofCase.BaseTime) {
              subBuilder.MergeFrom(BaseTime);
            }
            input.ReadMessage(subBuilder);
            BaseTime = subBuilder;
            break;
          }
          case 26: {
            global::Iscp2.V1.UpstreamOpen subBuilder = new global::Iscp2.V1.UpstreamOpen();
            if (metadataCase_ == MetadataOneofCase.UpstreamOpen) {
              subBuilder.MergeFrom(UpstreamOpen);
            }
            input.ReadMessage(subBuilder);
            UpstreamOpen = subBuilder;
            break;
          }
          case 34: {
            global::Iscp2.V1.UpstreamAbnormalClose subBuilder = new global::Iscp2.V1.UpstreamAbnormalClose();
            if (metadataCase_ == MetadataOneofCase.UpstreamAbnormalClose) {
              subBuilder.MergeFrom(UpstreamAbnormalClose);
            }
            input.ReadMessage(subBuilder);
            UpstreamAbnormalClose = subBuilder;
            break;
          }
          case 42: {
            global::Iscp2.V1.UpstreamResume subBuilder = new global::Iscp2.V1.UpstreamResume();
            if (metadataCase_ == MetadataOneofCase.UpstreamResume) {
              subBuilder.MergeFrom(UpstreamResume);
            }
            input.ReadMessage(subBuilder);
            UpstreamResume = subBuilder;
            break;
          }
          case 50: {
            global::Iscp2.V1.UpstreamNormalClose subBuilder = new global::Iscp2.V1.UpstreamNormalClose();
            if (metadataCase_ == MetadataOneofCase.UpstreamNormalClose) {
              subBuilder.MergeFrom(UpstreamNormalClose);
            }
            input.ReadMessage(subBuilder);
            UpstreamNormalClose = subBuilder;
            break;
          }
          case 58: {
            global::Iscp2.V1.DownstreamOpen subBuilder = new global::Iscp2.V1.DownstreamOpen();
            if (metadataCase_ == MetadataOneofCase.DownstreamOpen) {
              subBuilder.MergeFrom(DownstreamOpen);
            }
            input.ReadMessage(subBuilder);
            DownstreamOpen = subBuilder;
            break;
          }
          case 66: {
            global::Iscp2.V1.DownstreamAbnormalClose subBuilder = new global::Iscp2.V1.DownstreamAbnormalClose();
            if (metadataCase_ == MetadataOneofCase.DownstreamAbnormalClose) {
              subBuilder.MergeFrom(DownstreamAbnormalClose);
            }
            input.ReadMessage(subBuilder);
            DownstreamAbnormalClose = subBuilder;
            break;
          }
          case 74: {
            global::Iscp2.V1.DownstreamResume subBuilder = new global::Iscp2.V1.DownstreamResume();
            if (metadataCase_ == MetadataOneofCase.DownstreamResume) {
              subBuilder.MergeFrom(DownstreamResume);
            }
            input.ReadMessage(subBuilder);
            DownstreamResume = subBuilder;
            break;
          }
          case 82: {
            global::Iscp2.V1.DownstreamNormalClose subBuilder = new global::Iscp2.V1.DownstreamNormalClose();
            if (metadataCase_ == MetadataOneofCase.DownstreamNormalClose) {
              subBuilder.MergeFrom(DownstreamNormalClose);
            }
            input.ReadMessage(subBuilder);
            DownstreamNormalClose = subBuilder;
            break;
          }
          case 90: {
            SourceNodeId = input.ReadString();
            break;
          }
          case 98: {
            if (extensionFields_ == null) {
              ExtensionFields = new global::Iscp2.V1.Extensions.DownstreamMetadataExtensionFields();
            }
            input.ReadMessage(ExtensionFields);
            break;
          }
          case 104: {
            StreamIdAlias = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  internal sealed partial class DownstreamMetadataAck : pb::IMessage<DownstreamMetadataAck>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DownstreamMetadataAck> _parser = new pb::MessageParser<DownstreamMetadataAck>(() => new DownstreamMetadataAck());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<DownstreamMetadataAck> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Iscp2.V1.DownstreamReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DownstreamMetadataAck() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DownstreamMetadataAck(DownstreamMetadataAck other) : this() {
      requestId_ = other.requestId_;
      resultCode_ = other.resultCode_;
      resultString_ = other.resultString_;
      extensionFields_ = other.extensionFields_ != null ? other.extensionFields_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DownstreamMetadataAck Clone() {
      return new DownstreamMetadataAck(this);
    }

    /// <summary>Field number for the "request_id" field.</summary>
    public const int RequestIdFieldNumber = 1;
    private uint requestId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint RequestId {
      get { return requestId_; }
      set {
        requestId_ = value;
      }
    }

    /// <summary>Field number for the "result_code" field.</summary>
    public const int ResultCodeFieldNumber = 2;
    private global::Iscp2.V1.ResultCode resultCode_ = global::Iscp2.V1.ResultCode.Succeeded;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Iscp2.V1.ResultCode ResultCode {
      get { return resultCode_; }
      set {
        resultCode_ = value;
      }
    }

    /// <summary>Field number for the "result_string" field.</summary>
    public const int ResultStringFieldNumber = 3;
    private string resultString_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ResultString {
      get { return resultString_; }
      set {
        resultString_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "extension_fields" field.</summary>
    public const int ExtensionFieldsFieldNumber = 4;
    private global::Iscp2.V1.Extensions.DownstreamMetadataAckExtensionFields extensionFields_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Iscp2.V1.Extensions.DownstreamMetadataAckExtensionFields ExtensionFields {
      get { return extensionFields_; }
      set {
        extensionFields_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as DownstreamMetadataAck);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(DownstreamMetadataAck other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (RequestId != other.RequestId) return false;
      if (ResultCode != other.ResultCode) return false;
      if (ResultString != other.ResultString) return false;
      if (!object.Equals(ExtensionFields, other.ExtensionFields)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (RequestId != 0) hash ^= RequestId.GetHashCode();
      if (ResultCode != global::Iscp2.V1.ResultCode.Succeeded) hash ^= ResultCode.GetHashCode();
      if (ResultString.Length != 0) hash ^= ResultString.GetHashCode();
      if (extensionFields_ != null) hash ^= ExtensionFields.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (RequestId != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(RequestId);
      }
      if (ResultCode != global::Iscp2.V1.ResultCode.Succeeded) {
        output.WriteRawTag(16);
        output.WriteEnum((int) ResultCode);
      }
      if (ResultString.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(ResultString);
      }
      if (extensionFields_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(ExtensionFields);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (RequestId != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(RequestId);
      }
      if (ResultCode != global::Iscp2.V1.ResultCode.Succeeded) {
        output.WriteRawTag(16);
        output.WriteEnum((int) ResultCode);
      }
      if (ResultString.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(ResultString);
      }
      if (extensionFields_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(ExtensionFields);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (RequestId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(RequestId);
      }
      if (ResultCode != global::Iscp2.V1.ResultCode.Succeeded) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ResultCode);
      }
      if (ResultString.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ResultString);
      }
      if (extensionFields_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ExtensionFields);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(DownstreamMetadataAck other) {
      if (other == null) {
        return;
      }
      if (other.RequestId != 0) {
        RequestId = other.RequestId;
      }
      if (other.ResultCode != global::Iscp2.V1.ResultCode.Succeeded) {
        ResultCode = other.ResultCode;
      }
      if (other.ResultString.Length != 0) {
        ResultString = other.ResultString;
      }
      if (other.extensionFields_ != null) {
        if (extensionFields_ == null) {
          ExtensionFields = new global::Iscp2.V1.Extensions.DownstreamMetadataAckExtensionFields();
        }
        ExtensionFields.MergeFrom(other.ExtensionFields);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            RequestId = input.ReadUInt32();
            break;
          }
          case 16: {
            ResultCode = (global::Iscp2.V1.ResultCode) input.ReadEnum();
            break;
          }
          case 26: {
            ResultString = input.ReadString();
            break;
          }
          case 34: {
            if (extensionFields_ == null) {
              ExtensionFields = new global::Iscp2.V1.Extensions.DownstreamMetadataAckExtensionFields();
            }
            input.ReadMessage(ExtensionFields);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            RequestId = input.ReadUInt32();
            break;
          }
          case 16: {
            ResultCode = (global::Iscp2.V1.ResultCode) input.ReadEnum();
            break;
          }
          case 26: {
            ResultString = input.ReadString();
            break;
          }
          case 34: {
            if (extensionFields_ == null) {
              ExtensionFields = new global::Iscp2.V1.Extensions.DownstreamMetadataAckExtensionFields();
            }
            input.ReadMessage(ExtensionFields);
            break;
          }
        }
      }
    }
    #endif

  }

  internal sealed partial class UpstreamInfo : pb::IMessage<UpstreamInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<UpstreamInfo> _parser = new pb::MessageParser<UpstreamInfo>(() => new UpstreamInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<UpstreamInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Iscp2.V1.DownstreamReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UpstreamInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UpstreamInfo(UpstreamInfo other) : this() {
      sessionId_ = other.sessionId_;
      streamId_ = other.streamId_;
      sourceNodeId_ = other.sourceNodeId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UpstreamInfo Clone() {
      return new UpstreamInfo(this);
    }

    /// <summary>Field number for the "session_id" field.</summary>
    public const int SessionIdFieldNumber = 1;
    private string sessionId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string SessionId {
      get { return sessionId_; }
      set {
        sessionId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "stream_id" field.</summary>
    public const int StreamIdFieldNumber = 2;
    private pb::ByteString streamId_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pb::ByteString StreamId {
      get { return streamId_; }
      set {
        streamId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "source_node_id" field.</summary>
    public const int SourceNodeIdFieldNumber = 3;
    private string sourceNodeId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string SourceNodeId {
      get { return sourceNodeId_; }
      set {
        sourceNodeId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as UpstreamInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(UpstreamInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (SessionId != other.SessionId) return false;
      if (StreamId != other.StreamId) return false;
      if (SourceNodeId != other.SourceNodeId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (SessionId.Length != 0) hash ^= SessionId.GetHashCode();
      if (StreamId.Length != 0) hash ^= StreamId.GetHashCode();
      if (SourceNodeId.Length != 0) hash ^= SourceNodeId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (SessionId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(SessionId);
      }
      if (StreamId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteBytes(StreamId);
      }
      if (SourceNodeId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(SourceNodeId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (SessionId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(SessionId);
      }
      if (StreamId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteBytes(StreamId);
      }
      if (SourceNodeId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(SourceNodeId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (SessionId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SessionId);
      }
      if (StreamId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(StreamId);
      }
      if (SourceNodeId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SourceNodeId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(UpstreamInfo other) {
      if (other == null) {
        return;
      }
      if (other.SessionId.Length != 0) {
        SessionId = other.SessionId;
      }
      if (other.StreamId.Length != 0) {
        StreamId = other.StreamId;
      }
      if (other.SourceNodeId.Length != 0) {
        SourceNodeId = other.SourceNodeId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            SessionId = input.ReadString();
            break;
          }
          case 18: {
            StreamId = input.ReadBytes();
            break;
          }
          case 26: {
            SourceNodeId = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            SessionId = input.ReadString();
            break;
          }
          case 18: {
            StreamId = input.ReadBytes();
            break;
          }
          case 26: {
            SourceNodeId = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  internal sealed partial class DownstreamChunkResult : pb::IMessage<DownstreamChunkResult>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DownstreamChunkResult> _parser = new pb::MessageParser<DownstreamChunkResult>(() => new DownstreamChunkResult());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<DownstreamChunkResult> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Iscp2.V1.DownstreamReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DownstreamChunkResult() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DownstreamChunkResult(DownstreamChunkResult other) : this() {
      streamIdOfUpstream_ = other.streamIdOfUpstream_;
      sequenceNumberInUpstream_ = other.sequenceNumberInUpstream_;
      resultCode_ = other.resultCode_;
      resultString_ = other.resultString_;
      extensionFields_ = other.extensionFields_ != null ? other.extensionFields_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DownstreamChunkResult Clone() {
      return new DownstreamChunkResult(this);
    }

    /// <summary>Field number for the "stream_id_of_upstream" field.</summary>
    public const int StreamIdOfUpstreamFieldNumber = 1;
    private pb::ByteString streamIdOfUpstream_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pb::ByteString StreamIdOfUpstream {
      get { return streamIdOfUpstream_; }
      set {
        streamIdOfUpstream_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "sequence_number_in_upstream" field.</summary>
    public const int SequenceNumberInUpstreamFieldNumber = 2;
    private uint sequenceNumberInUpstream_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint SequenceNumberInUpstream {
      get { return sequenceNumberInUpstream_; }
      set {
        sequenceNumberInUpstream_ = value;
      }
    }

    /// <summary>Field number for the "result_code" field.</summary>
    public const int ResultCodeFieldNumber = 3;
    private global::Iscp2.V1.ResultCode resultCode_ = global::Iscp2.V1.ResultCode.Succeeded;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Iscp2.V1.ResultCode ResultCode {
      get { return resultCode_; }
      set {
        resultCode_ = value;
      }
    }

    /// <summary>Field number for the "result_string" field.</summary>
    public const int ResultStringFieldNumber = 4;
    private string resultString_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ResultString {
      get { return resultString_; }
      set {
        resultString_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "extension_fields" field.</summary>
    public const int ExtensionFieldsFieldNumber = 5;
    private global::Iscp2.V1.Extensions.DownstreamChunkResultExtensionFields extensionFields_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Iscp2.V1.Extensions.DownstreamChunkResultExtensionFields ExtensionFields {
      get { return extensionFields_; }
      set {
        extensionFields_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as DownstreamChunkResult);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(DownstreamChunkResult other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (StreamIdOfUpstream != other.StreamIdOfUpstream) return false;
      if (SequenceNumberInUpstream != other.SequenceNumberInUpstream) return false;
      if (ResultCode != other.ResultCode) return false;
      if (ResultString != other.ResultString) return false;
      if (!object.Equals(ExtensionFields, other.ExtensionFields)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (StreamIdOfUpstream.Length != 0) hash ^= StreamIdOfUpstream.GetHashCode();
      if (SequenceNumberInUpstream != 0) hash ^= SequenceNumberInUpstream.GetHashCode();
      if (ResultCode != global::Iscp2.V1.ResultCode.Succeeded) hash ^= ResultCode.GetHashCode();
      if (ResultString.Length != 0) hash ^= ResultString.GetHashCode();
      if (extensionFields_ != null) hash ^= ExtensionFields.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (StreamIdOfUpstream.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(StreamIdOfUpstream);
      }
      if (SequenceNumberInUpstream != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(SequenceNumberInUpstream);
      }
      if (ResultCode != global::Iscp2.V1.ResultCode.Succeeded) {
        output.WriteRawTag(24);
        output.WriteEnum((int) ResultCode);
      }
      if (ResultString.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(ResultString);
      }
      if (extensionFields_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(ExtensionFields);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (StreamIdOfUpstream.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(StreamIdOfUpstream);
      }
      if (SequenceNumberInUpstream != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(SequenceNumberInUpstream);
      }
      if (ResultCode != global::Iscp2.V1.ResultCode.Succeeded) {
        output.WriteRawTag(24);
        output.WriteEnum((int) ResultCode);
      }
      if (ResultString.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(ResultString);
      }
      if (extensionFields_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(ExtensionFields);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (StreamIdOfUpstream.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(StreamIdOfUpstream);
      }
      if (SequenceNumberInUpstream != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(SequenceNumberInUpstream);
      }
      if (ResultCode != global::Iscp2.V1.ResultCode.Succeeded) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ResultCode);
      }
      if (ResultString.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ResultString);
      }
      if (extensionFields_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ExtensionFields);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(DownstreamChunkResult other) {
      if (other == null) {
        return;
      }
      if (other.StreamIdOfUpstream.Length != 0) {
        StreamIdOfUpstream = other.StreamIdOfUpstream;
      }
      if (other.SequenceNumberInUpstream != 0) {
        SequenceNumberInUpstream = other.SequenceNumberInUpstream;
      }
      if (other.ResultCode != global::Iscp2.V1.ResultCode.Succeeded) {
        ResultCode = other.ResultCode;
      }
      if (other.ResultString.Length != 0) {
        ResultString = other.ResultString;
      }
      if (other.extensionFields_ != null) {
        if (extensionFields_ == null) {
          ExtensionFields = new global::Iscp2.V1.Extensions.DownstreamChunkResultExtensionFields();
        }
        ExtensionFields.MergeFrom(other.ExtensionFields);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            StreamIdOfUpstream = input.ReadBytes();
            break;
          }
          case 16: {
            SequenceNumberInUpstream = input.ReadUInt32();
            break;
          }
          case 24: {
            ResultCode = (global::Iscp2.V1.ResultCode) input.ReadEnum();
            break;
          }
          case 34: {
            ResultString = input.ReadString();
            break;
          }
          case 42: {
            if (extensionFields_ == null) {
              ExtensionFields = new global::Iscp2.V1.Extensions.DownstreamChunkResultExtensionFields();
            }
            input.ReadMessage(ExtensionFields);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            StreamIdOfUpstream = input.ReadBytes();
            break;
          }
          case 16: {
            SequenceNumberInUpstream = input.ReadUInt32();
            break;
          }
          case 24: {
            ResultCode = (global::Iscp2.V1.ResultCode) input.ReadEnum();
            break;
          }
          case 34: {
            ResultString = input.ReadString();
            break;
          }
          case 42: {
            if (extensionFields_ == null) {
              ExtensionFields = new global::Iscp2.V1.Extensions.DownstreamChunkResultExtensionFields();
            }
            input.ReadMessage(ExtensionFields);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
