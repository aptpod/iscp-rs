// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: iscp2/v1/e2e_call.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Iscp2.V1 {

  /// <summary>Holder for reflection information generated from iscp2/v1/e2e_call.proto</summary>
  internal static partial class E2ECallReflection {

    #region Descriptor
    /// <summary>File descriptor for iscp2/v1/e2e_call.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static E2ECallReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Chdpc2NwMi92MS9lMmVfY2FsbC5wcm90bxIIaXNjcDIudjEaImlzY3AyL3Yx",
            "L2V4dGVuc2lvbnMvZTJlX2NhbGwucHJvdG8aGmlzY3AyL3YxL3Jlc3VsdF9j",
            "b2RlLnByb3RvIp4CCgxVcHN0cmVhbUNhbGwSFwoHY2FsbF9pZBgBIAEoCVIG",
            "Y2FsbElkEiYKD3JlcXVlc3RfY2FsbF9pZBgCIAEoCVINcmVxdWVzdENhbGxJ",
            "ZBIuChNkZXN0aW5hdGlvbl9ub2RlX2lkGAMgASgJUhFkZXN0aW5hdGlvbk5v",
            "ZGVJZBISCgRuYW1lGAQgASgJUgRuYW1lEhIKBHR5cGUYBSABKAlSBHR5cGUS",
            "GAoHcGF5bG9hZBgGIAEoDFIHcGF5bG9hZBJbChBleHRlbnNpb25fZmllbGRz",
            "GAcgASgLMjAuaXNjcDIudjEuZXh0ZW5zaW9ucy5VcHN0cmVhbUNhbGxFeHRl",
            "bnNpb25GaWVsZHNSD2V4dGVuc2lvbkZpZWxkcyLmAQoPVXBzdHJlYW1DYWxs",
            "QWNrEhcKB2NhbGxfaWQYASABKAlSBmNhbGxJZBI1CgtyZXN1bHRfY29kZRgC",
            "IAEoDjIULmlzY3AyLnYxLlJlc3VsdENvZGVSCnJlc3VsdENvZGUSIwoNcmVz",
            "dWx0X3N0cmluZxgDIAEoCVIMcmVzdWx0U3RyaW5nEl4KEGV4dGVuc2lvbl9m",
            "aWVsZHMYBCABKAsyMy5pc2NwMi52MS5leHRlbnNpb25zLlVwc3RyZWFtQ2Fs",
            "bEFja0V4dGVuc2lvbkZpZWxkc1IPZXh0ZW5zaW9uRmllbGRzIpgCCg5Eb3du",
            "c3RyZWFtQ2FsbBIXCgdjYWxsX2lkGAEgASgJUgZjYWxsSWQSJgoPcmVxdWVz",
            "dF9jYWxsX2lkGAIgASgJUg1yZXF1ZXN0Q2FsbElkEiQKDnNvdXJjZV9ub2Rl",
            "X2lkGAMgASgJUgxzb3VyY2VOb2RlSWQSEgoEbmFtZRgEIAEoCVIEbmFtZRIS",
            "CgR0eXBlGAUgASgJUgR0eXBlEhgKB3BheWxvYWQYBiABKAxSB3BheWxvYWQS",
            "XQoQZXh0ZW5zaW9uX2ZpZWxkcxgHIAEoCzIyLmlzY3AyLnYxLmV4dGVuc2lv",
            "bnMuRG93bnN0cmVhbUNhbGxFeHRlbnNpb25GaWVsZHNSD2V4dGVuc2lvbkZp",
            "ZWxkc0KnAQogY29tLmdpdGh1Yi5hcHRwb2QucHJvdG8uaXNjcDIudjFCDEUy",
            "ZUNhbGxQcm90b1ABWjRnaXRodWIuY29tL2FwdHBvZC9pc2NwLXByb3RvL2dl",
            "bi9nby9pc2NwMi92MTtpc2NwMnYxogIDSVhYqgIISXNjcDIuVjHKAghJc2Nw",
            "MlxWMeICFElzY3AyXFYxXEdQQk1ldGFkYXRh6gIJSXNjcDI6OlYxYgZwcm90",
            "bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Iscp2.V1.Extensions.E2ECallReflection.Descriptor, global::Iscp2.V1.ResultCodeReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Iscp2.V1.UpstreamCall), global::Iscp2.V1.UpstreamCall.Parser, new[]{ "CallId", "RequestCallId", "DestinationNodeId", "Name", "Type", "Payload", "ExtensionFields" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Iscp2.V1.UpstreamCallAck), global::Iscp2.V1.UpstreamCallAck.Parser, new[]{ "CallId", "ResultCode", "ResultString", "ExtensionFields" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Iscp2.V1.DownstreamCall), global::Iscp2.V1.DownstreamCall.Parser, new[]{ "CallId", "RequestCallId", "SourceNodeId", "Name", "Type", "Payload", "ExtensionFields" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  internal sealed partial class UpstreamCall : pb::IMessage<UpstreamCall>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<UpstreamCall> _parser = new pb::MessageParser<UpstreamCall>(() => new UpstreamCall());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<UpstreamCall> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Iscp2.V1.E2ECallReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UpstreamCall() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UpstreamCall(UpstreamCall other) : this() {
      callId_ = other.callId_;
      requestCallId_ = other.requestCallId_;
      destinationNodeId_ = other.destinationNodeId_;
      name_ = other.name_;
      type_ = other.type_;
      payload_ = other.payload_;
      extensionFields_ = other.extensionFields_ != null ? other.extensionFields_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UpstreamCall Clone() {
      return new UpstreamCall(this);
    }

    /// <summary>Field number for the "call_id" field.</summary>
    public const int CallIdFieldNumber = 1;
    private string callId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string CallId {
      get { return callId_; }
      set {
        callId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "request_call_id" field.</summary>
    public const int RequestCallIdFieldNumber = 2;
    private string requestCallId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string RequestCallId {
      get { return requestCallId_; }
      set {
        requestCallId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "destination_node_id" field.</summary>
    public const int DestinationNodeIdFieldNumber = 3;
    private string destinationNodeId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string DestinationNodeId {
      get { return destinationNodeId_; }
      set {
        destinationNodeId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 4;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 5;
    private string type_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Type {
      get { return type_; }
      set {
        type_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "payload" field.</summary>
    public const int PayloadFieldNumber = 6;
    private pb::ByteString payload_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pb::ByteString Payload {
      get { return payload_; }
      set {
        payload_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "extension_fields" field.</summary>
    public const int ExtensionFieldsFieldNumber = 7;
    private global::Iscp2.V1.Extensions.UpstreamCallExtensionFields extensionFields_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Iscp2.V1.Extensions.UpstreamCallExtensionFields ExtensionFields {
      get { return extensionFields_; }
      set {
        extensionFields_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as UpstreamCall);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(UpstreamCall other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (CallId != other.CallId) return false;
      if (RequestCallId != other.RequestCallId) return false;
      if (DestinationNodeId != other.DestinationNodeId) return false;
      if (Name != other.Name) return false;
      if (Type != other.Type) return false;
      if (Payload != other.Payload) return false;
      if (!object.Equals(ExtensionFields, other.ExtensionFields)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (CallId.Length != 0) hash ^= CallId.GetHashCode();
      if (RequestCallId.Length != 0) hash ^= RequestCallId.GetHashCode();
      if (DestinationNodeId.Length != 0) hash ^= DestinationNodeId.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Type.Length != 0) hash ^= Type.GetHashCode();
      if (Payload.Length != 0) hash ^= Payload.GetHashCode();
      if (extensionFields_ != null) hash ^= ExtensionFields.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (CallId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(CallId);
      }
      if (RequestCallId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(RequestCallId);
      }
      if (DestinationNodeId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(DestinationNodeId);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Name);
      }
      if (Type.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Type);
      }
      if (Payload.Length != 0) {
        output.WriteRawTag(50);
        output.WriteBytes(Payload);
      }
      if (extensionFields_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(ExtensionFields);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (CallId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(CallId);
      }
      if (RequestCallId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(RequestCallId);
      }
      if (DestinationNodeId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(DestinationNodeId);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Name);
      }
      if (Type.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Type);
      }
      if (Payload.Length != 0) {
        output.WriteRawTag(50);
        output.WriteBytes(Payload);
      }
      if (extensionFields_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(ExtensionFields);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (CallId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CallId);
      }
      if (RequestCallId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RequestCallId);
      }
      if (DestinationNodeId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DestinationNodeId);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Type.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Type);
      }
      if (Payload.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Payload);
      }
      if (extensionFields_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ExtensionFields);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(UpstreamCall other) {
      if (other == null) {
        return;
      }
      if (other.CallId.Length != 0) {
        CallId = other.CallId;
      }
      if (other.RequestCallId.Length != 0) {
        RequestCallId = other.RequestCallId;
      }
      if (other.DestinationNodeId.Length != 0) {
        DestinationNodeId = other.DestinationNodeId;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Type.Length != 0) {
        Type = other.Type;
      }
      if (other.Payload.Length != 0) {
        Payload = other.Payload;
      }
      if (other.extensionFields_ != null) {
        if (extensionFields_ == null) {
          ExtensionFields = new global::Iscp2.V1.Extensions.UpstreamCallExtensionFields();
        }
        ExtensionFields.MergeFrom(other.ExtensionFields);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            CallId = input.ReadString();
            break;
          }
          case 18: {
            RequestCallId = input.ReadString();
            break;
          }
          case 26: {
            DestinationNodeId = input.ReadString();
            break;
          }
          case 34: {
            Name = input.ReadString();
            break;
          }
          case 42: {
            Type = input.ReadString();
            break;
          }
          case 50: {
            Payload = input.ReadBytes();
            break;
          }
          case 58: {
            if (extensionFields_ == null) {
              ExtensionFields = new global::Iscp2.V1.Extensions.UpstreamCallExtensionFields();
            }
            input.ReadMessage(ExtensionFields);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            CallId = input.ReadString();
            break;
          }
          case 18: {
            RequestCallId = input.ReadString();
            break;
          }
          case 26: {
            DestinationNodeId = input.ReadString();
            break;
          }
          case 34: {
            Name = input.ReadString();
            break;
          }
          case 42: {
            Type = input.ReadString();
            break;
          }
          case 50: {
            Payload = input.ReadBytes();
            break;
          }
          case 58: {
            if (extensionFields_ == null) {
              ExtensionFields = new global::Iscp2.V1.Extensions.UpstreamCallExtensionFields();
            }
            input.ReadMessage(ExtensionFields);
            break;
          }
        }
      }
    }
    #endif

  }

  internal sealed partial class UpstreamCallAck : pb::IMessage<UpstreamCallAck>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<UpstreamCallAck> _parser = new pb::MessageParser<UpstreamCallAck>(() => new UpstreamCallAck());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<UpstreamCallAck> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Iscp2.V1.E2ECallReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UpstreamCallAck() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UpstreamCallAck(UpstreamCallAck other) : this() {
      callId_ = other.callId_;
      resultCode_ = other.resultCode_;
      resultString_ = other.resultString_;
      extensionFields_ = other.extensionFields_ != null ? other.extensionFields_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UpstreamCallAck Clone() {
      return new UpstreamCallAck(this);
    }

    /// <summary>Field number for the "call_id" field.</summary>
    public const int CallIdFieldNumber = 1;
    private string callId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string CallId {
      get { return callId_; }
      set {
        callId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "result_code" field.</summary>
    public const int ResultCodeFieldNumber = 2;
    private global::Iscp2.V1.ResultCode resultCode_ = global::Iscp2.V1.ResultCode.Succeeded;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Iscp2.V1.ResultCode ResultCode {
      get { return resultCode_; }
      set {
        resultCode_ = value;
      }
    }

    /// <summary>Field number for the "result_string" field.</summary>
    public const int ResultStringFieldNumber = 3;
    private string resultString_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ResultString {
      get { return resultString_; }
      set {
        resultString_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "extension_fields" field.</summary>
    public const int ExtensionFieldsFieldNumber = 4;
    private global::Iscp2.V1.Extensions.UpstreamCallAckExtensionFields extensionFields_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Iscp2.V1.Extensions.UpstreamCallAckExtensionFields ExtensionFields {
      get { return extensionFields_; }
      set {
        extensionFields_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as UpstreamCallAck);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(UpstreamCallAck other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (CallId != other.CallId) return false;
      if (ResultCode != other.ResultCode) return false;
      if (ResultString != other.ResultString) return false;
      if (!object.Equals(ExtensionFields, other.ExtensionFields)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (CallId.Length != 0) hash ^= CallId.GetHashCode();
      if (ResultCode != global::Iscp2.V1.ResultCode.Succeeded) hash ^= ResultCode.GetHashCode();
      if (ResultString.Length != 0) hash ^= ResultString.GetHashCode();
      if (extensionFields_ != null) hash ^= ExtensionFields.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (CallId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(CallId);
      }
      if (ResultCode != global::Iscp2.V1.ResultCode.Succeeded) {
        output.WriteRawTag(16);
        output.WriteEnum((int) ResultCode);
      }
      if (ResultString.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(ResultString);
      }
      if (extensionFields_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(ExtensionFields);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (CallId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(CallId);
      }
      if (ResultCode != global::Iscp2.V1.ResultCode.Succeeded) {
        output.WriteRawTag(16);
        output.WriteEnum((int) ResultCode);
      }
      if (ResultString.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(ResultString);
      }
      if (extensionFields_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(ExtensionFields);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (CallId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CallId);
      }
      if (ResultCode != global::Iscp2.V1.ResultCode.Succeeded) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ResultCode);
      }
      if (ResultString.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ResultString);
      }
      if (extensionFields_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ExtensionFields);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(UpstreamCallAck other) {
      if (other == null) {
        return;
      }
      if (other.CallId.Length != 0) {
        CallId = other.CallId;
      }
      if (other.ResultCode != global::Iscp2.V1.ResultCode.Succeeded) {
        ResultCode = other.ResultCode;
      }
      if (other.ResultString.Length != 0) {
        ResultString = other.ResultString;
      }
      if (other.extensionFields_ != null) {
        if (extensionFields_ == null) {
          ExtensionFields = new global::Iscp2.V1.Extensions.UpstreamCallAckExtensionFields();
        }
        ExtensionFields.MergeFrom(other.ExtensionFields);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            CallId = input.ReadString();
            break;
          }
          case 16: {
            ResultCode = (global::Iscp2.V1.ResultCode) input.ReadEnum();
            break;
          }
          case 26: {
            ResultString = input.ReadString();
            break;
          }
          case 34: {
            if (extensionFields_ == null) {
              ExtensionFields = new global::Iscp2.V1.Extensions.UpstreamCallAckExtensionFields();
            }
            input.ReadMessage(ExtensionFields);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            CallId = input.ReadString();
            break;
          }
          case 16: {
            ResultCode = (global::Iscp2.V1.ResultCode) input.ReadEnum();
            break;
          }
          case 26: {
            ResultString = input.ReadString();
            break;
          }
          case 34: {
            if (extensionFields_ == null) {
              ExtensionFields = new global::Iscp2.V1.Extensions.UpstreamCallAckExtensionFields();
            }
            input.ReadMessage(ExtensionFields);
            break;
          }
        }
      }
    }
    #endif

  }

  internal sealed partial class DownstreamCall : pb::IMessage<DownstreamCall>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DownstreamCall> _parser = new pb::MessageParser<DownstreamCall>(() => new DownstreamCall());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<DownstreamCall> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Iscp2.V1.E2ECallReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DownstreamCall() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DownstreamCall(DownstreamCall other) : this() {
      callId_ = other.callId_;
      requestCallId_ = other.requestCallId_;
      sourceNodeId_ = other.sourceNodeId_;
      name_ = other.name_;
      type_ = other.type_;
      payload_ = other.payload_;
      extensionFields_ = other.extensionFields_ != null ? other.extensionFields_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DownstreamCall Clone() {
      return new DownstreamCall(this);
    }

    /// <summary>Field number for the "call_id" field.</summary>
    public const int CallIdFieldNumber = 1;
    private string callId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string CallId {
      get { return callId_; }
      set {
        callId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "request_call_id" field.</summary>
    public const int RequestCallIdFieldNumber = 2;
    private string requestCallId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string RequestCallId {
      get { return requestCallId_; }
      set {
        requestCallId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "source_node_id" field.</summary>
    public const int SourceNodeIdFieldNumber = 3;
    private string sourceNodeId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string SourceNodeId {
      get { return sourceNodeId_; }
      set {
        sourceNodeId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 4;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 5;
    private string type_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Type {
      get { return type_; }
      set {
        type_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "payload" field.</summary>
    public const int PayloadFieldNumber = 6;
    private pb::ByteString payload_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pb::ByteString Payload {
      get { return payload_; }
      set {
        payload_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "extension_fields" field.</summary>
    public const int ExtensionFieldsFieldNumber = 7;
    private global::Iscp2.V1.Extensions.DownstreamCallExtensionFields extensionFields_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Iscp2.V1.Extensions.DownstreamCallExtensionFields ExtensionFields {
      get { return extensionFields_; }
      set {
        extensionFields_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as DownstreamCall);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(DownstreamCall other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (CallId != other.CallId) return false;
      if (RequestCallId != other.RequestCallId) return false;
      if (SourceNodeId != other.SourceNodeId) return false;
      if (Name != other.Name) return false;
      if (Type != other.Type) return false;
      if (Payload != other.Payload) return false;
      if (!object.Equals(ExtensionFields, other.ExtensionFields)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (CallId.Length != 0) hash ^= CallId.GetHashCode();
      if (RequestCallId.Length != 0) hash ^= RequestCallId.GetHashCode();
      if (SourceNodeId.Length != 0) hash ^= SourceNodeId.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Type.Length != 0) hash ^= Type.GetHashCode();
      if (Payload.Length != 0) hash ^= Payload.GetHashCode();
      if (extensionFields_ != null) hash ^= ExtensionFields.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (CallId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(CallId);
      }
      if (RequestCallId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(RequestCallId);
      }
      if (SourceNodeId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(SourceNodeId);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Name);
      }
      if (Type.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Type);
      }
      if (Payload.Length != 0) {
        output.WriteRawTag(50);
        output.WriteBytes(Payload);
      }
      if (extensionFields_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(ExtensionFields);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (CallId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(CallId);
      }
      if (RequestCallId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(RequestCallId);
      }
      if (SourceNodeId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(SourceNodeId);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Name);
      }
      if (Type.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Type);
      }
      if (Payload.Length != 0) {
        output.WriteRawTag(50);
        output.WriteBytes(Payload);
      }
      if (extensionFields_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(ExtensionFields);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (CallId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CallId);
      }
      if (RequestCallId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RequestCallId);
      }
      if (SourceNodeId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SourceNodeId);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Type.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Type);
      }
      if (Payload.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Payload);
      }
      if (extensionFields_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ExtensionFields);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(DownstreamCall other) {
      if (other == null) {
        return;
      }
      if (other.CallId.Length != 0) {
        CallId = other.CallId;
      }
      if (other.RequestCallId.Length != 0) {
        RequestCallId = other.RequestCallId;
      }
      if (other.SourceNodeId.Length != 0) {
        SourceNodeId = other.SourceNodeId;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Type.Length != 0) {
        Type = other.Type;
      }
      if (other.Payload.Length != 0) {
        Payload = other.Payload;
      }
      if (other.extensionFields_ != null) {
        if (extensionFields_ == null) {
          ExtensionFields = new global::Iscp2.V1.Extensions.DownstreamCallExtensionFields();
        }
        ExtensionFields.MergeFrom(other.ExtensionFields);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            CallId = input.ReadString();
            break;
          }
          case 18: {
            RequestCallId = input.ReadString();
            break;
          }
          case 26: {
            SourceNodeId = input.ReadString();
            break;
          }
          case 34: {
            Name = input.ReadString();
            break;
          }
          case 42: {
            Type = input.ReadString();
            break;
          }
          case 50: {
            Payload = input.ReadBytes();
            break;
          }
          case 58: {
            if (extensionFields_ == null) {
              ExtensionFields = new global::Iscp2.V1.Extensions.DownstreamCallExtensionFields();
            }
            input.ReadMessage(ExtensionFields);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            CallId = input.ReadString();
            break;
          }
          case 18: {
            RequestCallId = input.ReadString();
            break;
          }
          case 26: {
            SourceNodeId = input.ReadString();
            break;
          }
          case 34: {
            Name = input.ReadString();
            break;
          }
          case 42: {
            Type = input.ReadString();
            break;
          }
          case 50: {
            Payload = input.ReadBytes();
            break;
          }
          case 58: {
            if (extensionFields_ == null) {
              ExtensionFields = new global::Iscp2.V1.Extensions.DownstreamCallExtensionFields();
            }
            input.ReadMessage(ExtensionFields);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
