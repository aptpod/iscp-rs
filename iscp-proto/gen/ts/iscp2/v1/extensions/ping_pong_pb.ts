// @generated by protoc-gen-es v1.3.0 with parameter "target=ts"
// @generated from file iscp2/v1/extensions/ping_pong.proto (package iscp2.v1.extensions, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";

/**
 * @generated from message iscp2.v1.extensions.PingExtensionFields
 */
export class PingExtensionFields extends Message<PingExtensionFields> {
  constructor(data?: PartialMessage<PingExtensionFields>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "iscp2.v1.extensions.PingExtensionFields";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): PingExtensionFields {
    return new PingExtensionFields().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): PingExtensionFields {
    return new PingExtensionFields().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): PingExtensionFields {
    return new PingExtensionFields().fromJsonString(jsonString, options);
  }

  static equals(a: PingExtensionFields | PlainMessage<PingExtensionFields> | undefined, b: PingExtensionFields | PlainMessage<PingExtensionFields> | undefined): boolean {
    return proto3.util.equals(PingExtensionFields, a, b);
  }
}

/**
 * @generated from message iscp2.v1.extensions.PongExtensionFields
 */
export class PongExtensionFields extends Message<PongExtensionFields> {
  constructor(data?: PartialMessage<PongExtensionFields>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "iscp2.v1.extensions.PongExtensionFields";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): PongExtensionFields {
    return new PongExtensionFields().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): PongExtensionFields {
    return new PongExtensionFields().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): PongExtensionFields {
    return new PongExtensionFields().fromJsonString(jsonString, options);
  }

  static equals(a: PongExtensionFields | PlainMessage<PongExtensionFields> | undefined, b: PongExtensionFields | PlainMessage<PongExtensionFields> | undefined): boolean {
    return proto3.util.equals(PongExtensionFields, a, b);
  }
}

