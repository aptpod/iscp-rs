// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: iscp2/v1/metadata.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package com.github.aptpod.proto.iscp2.v1;

@kotlin.jvm.JvmName("-initializebaseTime")
public inline fun baseTime(block: com.github.aptpod.proto.iscp2.v1.BaseTimeKt.Dsl.() -> kotlin.Unit): com.github.aptpod.proto.iscp2.v1.BaseTime =
  com.github.aptpod.proto.iscp2.v1.BaseTimeKt.Dsl._create(com.github.aptpod.proto.iscp2.v1.BaseTime.newBuilder()).apply { block() }._build()
/**
 * Protobuf type `iscp2.v1.BaseTime`
 */
public object BaseTimeKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: com.github.aptpod.proto.iscp2.v1.BaseTime.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: com.github.aptpod.proto.iscp2.v1.BaseTime.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): com.github.aptpod.proto.iscp2.v1.BaseTime = _builder.build()

    /**
     * `string session_id = 1 [json_name = "sessionId"];`
     */
    public var sessionId: kotlin.String
      @JvmName("getSessionId")
      get() = _builder.getSessionId()
      @JvmName("setSessionId")
      set(value) {
        _builder.setSessionId(value)
      }
    /**
     * `string session_id = 1 [json_name = "sessionId"];`
     */
    public fun clearSessionId() {
      _builder.clearSessionId()
    }

    /**
     * `string name = 2 [json_name = "name"];`
     */
    public var name: kotlin.String
      @JvmName("getName")
      get() = _builder.getName()
      @JvmName("setName")
      set(value) {
        _builder.setName(value)
      }
    /**
     * `string name = 2 [json_name = "name"];`
     */
    public fun clearName() {
      _builder.clearName()
    }

    /**
     * `uint32 priority = 3 [json_name = "priority"];`
     */
    public var priority: kotlin.Int
      @JvmName("getPriority")
      get() = _builder.getPriority()
      @JvmName("setPriority")
      set(value) {
        _builder.setPriority(value)
      }
    /**
     * `uint32 priority = 3 [json_name = "priority"];`
     */
    public fun clearPriority() {
      _builder.clearPriority()
    }

    /**
     * `uint64 elapsed_time = 4 [json_name = "elapsedTime"];`
     */
    public var elapsedTime: kotlin.Long
      @JvmName("getElapsedTime")
      get() = _builder.getElapsedTime()
      @JvmName("setElapsedTime")
      set(value) {
        _builder.setElapsedTime(value)
      }
    /**
     * `uint64 elapsed_time = 4 [json_name = "elapsedTime"];`
     */
    public fun clearElapsedTime() {
      _builder.clearElapsedTime()
    }

    /**
     * `sint64 base_time = 5 [json_name = "baseTime"];`
     */
    public var baseTime: kotlin.Long
      @JvmName("getBaseTime")
      get() = _builder.getBaseTime()
      @JvmName("setBaseTime")
      set(value) {
        _builder.setBaseTime(value)
      }
    /**
     * `sint64 base_time = 5 [json_name = "baseTime"];`
     */
    public fun clearBaseTime() {
      _builder.clearBaseTime()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun com.github.aptpod.proto.iscp2.v1.BaseTime.copy(block: `com.github.aptpod.proto.iscp2.v1`.BaseTimeKt.Dsl.() -> kotlin.Unit): com.github.aptpod.proto.iscp2.v1.BaseTime =
  `com.github.aptpod.proto.iscp2.v1`.BaseTimeKt.Dsl._create(this.toBuilder()).apply { block() }._build()

