// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: iscp2/v1/upstream.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package com.github.aptpod.proto.iscp2.v1;

@kotlin.jvm.JvmName("-initializeupstreamOpenResponse")
public inline fun upstreamOpenResponse(block: com.github.aptpod.proto.iscp2.v1.UpstreamOpenResponseKt.Dsl.() -> kotlin.Unit): com.github.aptpod.proto.iscp2.v1.UpstreamOpenResponse =
  com.github.aptpod.proto.iscp2.v1.UpstreamOpenResponseKt.Dsl._create(com.github.aptpod.proto.iscp2.v1.UpstreamOpenResponse.newBuilder()).apply { block() }._build()
/**
 * Protobuf type `iscp2.v1.UpstreamOpenResponse`
 */
public object UpstreamOpenResponseKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: com.github.aptpod.proto.iscp2.v1.UpstreamOpenResponse.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: com.github.aptpod.proto.iscp2.v1.UpstreamOpenResponse.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): com.github.aptpod.proto.iscp2.v1.UpstreamOpenResponse = _builder.build()

    /**
     * `uint32 request_id = 1 [json_name = "requestId"];`
     */
    public var requestId: kotlin.Int
      @JvmName("getRequestId")
      get() = _builder.getRequestId()
      @JvmName("setRequestId")
      set(value) {
        _builder.setRequestId(value)
      }
    /**
     * `uint32 request_id = 1 [json_name = "requestId"];`
     */
    public fun clearRequestId() {
      _builder.clearRequestId()
    }

    /**
     * `bytes assigned_stream_id = 2 [json_name = "assignedStreamId"];`
     */
    public var assignedStreamId: com.google.protobuf.ByteString
      @JvmName("getAssignedStreamId")
      get() = _builder.getAssignedStreamId()
      @JvmName("setAssignedStreamId")
      set(value) {
        _builder.setAssignedStreamId(value)
      }
    /**
     * `bytes assigned_stream_id = 2 [json_name = "assignedStreamId"];`
     */
    public fun clearAssignedStreamId() {
      _builder.clearAssignedStreamId()
    }

    /**
     * `uint32 assigned_stream_id_alias = 3 [json_name = "assignedStreamIdAlias"];`
     */
    public var assignedStreamIdAlias: kotlin.Int
      @JvmName("getAssignedStreamIdAlias")
      get() = _builder.getAssignedStreamIdAlias()
      @JvmName("setAssignedStreamIdAlias")
      set(value) {
        _builder.setAssignedStreamIdAlias(value)
      }
    /**
     * `uint32 assigned_stream_id_alias = 3 [json_name = "assignedStreamIdAlias"];`
     */
    public fun clearAssignedStreamIdAlias() {
      _builder.clearAssignedStreamIdAlias()
    }

    /**
     * An uninstantiable, behaviorless type to represent the field in
     * generics.
     */
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    public class DataIdAliasesProxy private constructor() : com.google.protobuf.kotlin.DslProxy()
    /**
     * `map<uint32, .iscp2.v1.DataID> data_id_aliases = 4 [json_name = "dataIdAliases"];`
     */
     public val dataIdAliases: com.google.protobuf.kotlin.DslMap<kotlin.Int, com.github.aptpod.proto.iscp2.v1.DataID, DataIdAliasesProxy>
      @kotlin.jvm.JvmSynthetic
      @JvmName("getDataIdAliasesMap")
      get() = com.google.protobuf.kotlin.DslMap(
        _builder.getDataIdAliasesMap()
      )
    /**
     * `map<uint32, .iscp2.v1.DataID> data_id_aliases = 4 [json_name = "dataIdAliases"];`
     */
    @JvmName("putDataIdAliases")
    public fun com.google.protobuf.kotlin.DslMap<kotlin.Int, com.github.aptpod.proto.iscp2.v1.DataID, DataIdAliasesProxy>
      .put(key: kotlin.Int, value: com.github.aptpod.proto.iscp2.v1.DataID) {
         _builder.putDataIdAliases(key, value)
       }
    /**
     * `map<uint32, .iscp2.v1.DataID> data_id_aliases = 4 [json_name = "dataIdAliases"];`
     */
    @kotlin.jvm.JvmSynthetic
    @JvmName("setDataIdAliases")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslMap<kotlin.Int, com.github.aptpod.proto.iscp2.v1.DataID, DataIdAliasesProxy>
      .set(key: kotlin.Int, value: com.github.aptpod.proto.iscp2.v1.DataID) {
         put(key, value)
       }
    /**
     * `map<uint32, .iscp2.v1.DataID> data_id_aliases = 4 [json_name = "dataIdAliases"];`
     */
    @kotlin.jvm.JvmSynthetic
    @JvmName("removeDataIdAliases")
    public fun com.google.protobuf.kotlin.DslMap<kotlin.Int, com.github.aptpod.proto.iscp2.v1.DataID, DataIdAliasesProxy>
      .remove(key: kotlin.Int) {
         _builder.removeDataIdAliases(key)
       }
    /**
     * `map<uint32, .iscp2.v1.DataID> data_id_aliases = 4 [json_name = "dataIdAliases"];`
     */
    @kotlin.jvm.JvmSynthetic
    @JvmName("putAllDataIdAliases")
    public fun com.google.protobuf.kotlin.DslMap<kotlin.Int, com.github.aptpod.proto.iscp2.v1.DataID, DataIdAliasesProxy>
      .putAll(map: kotlin.collections.Map<kotlin.Int, com.github.aptpod.proto.iscp2.v1.DataID>) {
         _builder.putAllDataIdAliases(map)
       }
    /**
     * `map<uint32, .iscp2.v1.DataID> data_id_aliases = 4 [json_name = "dataIdAliases"];`
     */
    @kotlin.jvm.JvmSynthetic
    @JvmName("clearDataIdAliases")
    public fun com.google.protobuf.kotlin.DslMap<kotlin.Int, com.github.aptpod.proto.iscp2.v1.DataID, DataIdAliasesProxy>
      .clear() {
         _builder.clearDataIdAliases()
       }

    /**
     * `sint64 server_time = 5 [json_name = "serverTime"];`
     */
    public var serverTime: kotlin.Long
      @JvmName("getServerTime")
      get() = _builder.getServerTime()
      @JvmName("setServerTime")
      set(value) {
        _builder.setServerTime(value)
      }
    /**
     * `sint64 server_time = 5 [json_name = "serverTime"];`
     */
    public fun clearServerTime() {
      _builder.clearServerTime()
    }

    /**
     * `.iscp2.v1.ResultCode result_code = 6 [json_name = "resultCode"];`
     */
    public var resultCode: com.github.aptpod.proto.iscp2.v1.ResultCode
      @JvmName("getResultCode")
      get() = _builder.getResultCode()
      @JvmName("setResultCode")
      set(value) {
        _builder.setResultCode(value)
      }
    public var resultCodeValue: kotlin.Int
      @JvmName("getResultCodeValue")
      get() = _builder.getResultCodeValue()
      @JvmName("setResultCodeValue")
      set(value) {
        _builder.setResultCodeValue(value)
      }
    /**
     * `.iscp2.v1.ResultCode result_code = 6 [json_name = "resultCode"];`
     */
    public fun clearResultCode() {
      _builder.clearResultCode()
    }

    /**
     * `string result_string = 7 [json_name = "resultString"];`
     */
    public var resultString: kotlin.String
      @JvmName("getResultString")
      get() = _builder.getResultString()
      @JvmName("setResultString")
      set(value) {
        _builder.setResultString(value)
      }
    /**
     * `string result_string = 7 [json_name = "resultString"];`
     */
    public fun clearResultString() {
      _builder.clearResultString()
    }

    /**
     * `.iscp2.v1.extensions.UpstreamOpenResponseExtensionFields extension_fields = 8 [json_name = "extensionFields"];`
     */
    public var extensionFields: com.github.aptpod.proto.iscp2.v1.extensions.UpstreamOpenResponseExtensionFields
      @JvmName("getExtensionFields")
      get() = _builder.getExtensionFields()
      @JvmName("setExtensionFields")
      set(value) {
        _builder.setExtensionFields(value)
      }
    /**
     * `.iscp2.v1.extensions.UpstreamOpenResponseExtensionFields extension_fields = 8 [json_name = "extensionFields"];`
     */
    public fun clearExtensionFields() {
      _builder.clearExtensionFields()
    }
    /**
     * `.iscp2.v1.extensions.UpstreamOpenResponseExtensionFields extension_fields = 8 [json_name = "extensionFields"];`
     * @return Whether the extensionFields field is set.
     */
    public fun hasExtensionFields(): kotlin.Boolean {
      return _builder.hasExtensionFields()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun com.github.aptpod.proto.iscp2.v1.UpstreamOpenResponse.copy(block: `com.github.aptpod.proto.iscp2.v1`.UpstreamOpenResponseKt.Dsl.() -> kotlin.Unit): com.github.aptpod.proto.iscp2.v1.UpstreamOpenResponse =
  `com.github.aptpod.proto.iscp2.v1`.UpstreamOpenResponseKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val com.github.aptpod.proto.iscp2.v1.UpstreamOpenResponseOrBuilder.extensionFieldsOrNull: com.github.aptpod.proto.iscp2.v1.extensions.UpstreamOpenResponseExtensionFields?
  get() = if (hasExtensionFields()) getExtensionFields() else null

