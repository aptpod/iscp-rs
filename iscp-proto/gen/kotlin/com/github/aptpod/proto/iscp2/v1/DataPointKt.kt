// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: iscp2/v1/common.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package com.github.aptpod.proto.iscp2.v1;

@kotlin.jvm.JvmName("-initializedataPoint")
public inline fun dataPoint(block: com.github.aptpod.proto.iscp2.v1.DataPointKt.Dsl.() -> kotlin.Unit): com.github.aptpod.proto.iscp2.v1.DataPoint =
  com.github.aptpod.proto.iscp2.v1.DataPointKt.Dsl._create(com.github.aptpod.proto.iscp2.v1.DataPoint.newBuilder()).apply { block() }._build()
/**
 * Protobuf type `iscp2.v1.DataPoint`
 */
public object DataPointKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: com.github.aptpod.proto.iscp2.v1.DataPoint.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: com.github.aptpod.proto.iscp2.v1.DataPoint.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): com.github.aptpod.proto.iscp2.v1.DataPoint = _builder.build()

    /**
     * `sint64 elapsed_time = 1 [json_name = "elapsedTime"];`
     */
    public var elapsedTime: kotlin.Long
      @JvmName("getElapsedTime")
      get() = _builder.getElapsedTime()
      @JvmName("setElapsedTime")
      set(value) {
        _builder.setElapsedTime(value)
      }
    /**
     * `sint64 elapsed_time = 1 [json_name = "elapsedTime"];`
     */
    public fun clearElapsedTime() {
      _builder.clearElapsedTime()
    }

    /**
     * `bytes payload = 2 [json_name = "payload"];`
     */
    public var payload: com.google.protobuf.ByteString
      @JvmName("getPayload")
      get() = _builder.getPayload()
      @JvmName("setPayload")
      set(value) {
        _builder.setPayload(value)
      }
    /**
     * `bytes payload = 2 [json_name = "payload"];`
     */
    public fun clearPayload() {
      _builder.clearPayload()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun com.github.aptpod.proto.iscp2.v1.DataPoint.copy(block: `com.github.aptpod.proto.iscp2.v1`.DataPointKt.Dsl.() -> kotlin.Unit): com.github.aptpod.proto.iscp2.v1.DataPoint =
  `com.github.aptpod.proto.iscp2.v1`.DataPointKt.Dsl._create(this.toBuilder()).apply { block() }._build()

