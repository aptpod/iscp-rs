// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: iscp2/v1/extensions/e2e_call.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package com.github.aptpod.proto.iscp2.v1.extensions;

@kotlin.jvm.JvmName("-initializeupstreamCallAckExtensionFields")
public inline fun upstreamCallAckExtensionFields(block: com.github.aptpod.proto.iscp2.v1.extensions.UpstreamCallAckExtensionFieldsKt.Dsl.() -> kotlin.Unit): com.github.aptpod.proto.iscp2.v1.extensions.UpstreamCallAckExtensionFields =
  com.github.aptpod.proto.iscp2.v1.extensions.UpstreamCallAckExtensionFieldsKt.Dsl._create(com.github.aptpod.proto.iscp2.v1.extensions.UpstreamCallAckExtensionFields.newBuilder()).apply { block() }._build()
/**
 * Protobuf type `iscp2.v1.extensions.UpstreamCallAckExtensionFields`
 */
public object UpstreamCallAckExtensionFieldsKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: com.github.aptpod.proto.iscp2.v1.extensions.UpstreamCallAckExtensionFields.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: com.github.aptpod.proto.iscp2.v1.extensions.UpstreamCallAckExtensionFields.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): com.github.aptpod.proto.iscp2.v1.extensions.UpstreamCallAckExtensionFields = _builder.build()
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun com.github.aptpod.proto.iscp2.v1.extensions.UpstreamCallAckExtensionFields.copy(block: `com.github.aptpod.proto.iscp2.v1.extensions`.UpstreamCallAckExtensionFieldsKt.Dsl.() -> kotlin.Unit): com.github.aptpod.proto.iscp2.v1.extensions.UpstreamCallAckExtensionFields =
  `com.github.aptpod.proto.iscp2.v1.extensions`.UpstreamCallAckExtensionFieldsKt.Dsl._create(this.toBuilder()).apply { block() }._build()

