// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: iscp2/v1/ping_pong.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package com.github.aptpod.proto.iscp2.v1;

@kotlin.jvm.JvmName("-initializeping")
public inline fun ping(block: com.github.aptpod.proto.iscp2.v1.PingKt.Dsl.() -> kotlin.Unit): com.github.aptpod.proto.iscp2.v1.Ping =
  com.github.aptpod.proto.iscp2.v1.PingKt.Dsl._create(com.github.aptpod.proto.iscp2.v1.Ping.newBuilder()).apply { block() }._build()
/**
 * Protobuf type `iscp2.v1.Ping`
 */
public object PingKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: com.github.aptpod.proto.iscp2.v1.Ping.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: com.github.aptpod.proto.iscp2.v1.Ping.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): com.github.aptpod.proto.iscp2.v1.Ping = _builder.build()

    /**
     * `uint32 request_id = 1 [json_name = "requestId"];`
     */
    public var requestId: kotlin.Int
      @JvmName("getRequestId")
      get() = _builder.getRequestId()
      @JvmName("setRequestId")
      set(value) {
        _builder.setRequestId(value)
      }
    /**
     * `uint32 request_id = 1 [json_name = "requestId"];`
     */
    public fun clearRequestId() {
      _builder.clearRequestId()
    }

    /**
     * `.iscp2.v1.extensions.PingExtensionFields extension_fields = 2 [json_name = "extensionFields"];`
     */
    public var extensionFields: com.github.aptpod.proto.iscp2.v1.extensions.PingExtensionFields
      @JvmName("getExtensionFields")
      get() = _builder.getExtensionFields()
      @JvmName("setExtensionFields")
      set(value) {
        _builder.setExtensionFields(value)
      }
    /**
     * `.iscp2.v1.extensions.PingExtensionFields extension_fields = 2 [json_name = "extensionFields"];`
     */
    public fun clearExtensionFields() {
      _builder.clearExtensionFields()
    }
    /**
     * `.iscp2.v1.extensions.PingExtensionFields extension_fields = 2 [json_name = "extensionFields"];`
     * @return Whether the extensionFields field is set.
     */
    public fun hasExtensionFields(): kotlin.Boolean {
      return _builder.hasExtensionFields()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun com.github.aptpod.proto.iscp2.v1.Ping.copy(block: `com.github.aptpod.proto.iscp2.v1`.PingKt.Dsl.() -> kotlin.Unit): com.github.aptpod.proto.iscp2.v1.Ping =
  `com.github.aptpod.proto.iscp2.v1`.PingKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val com.github.aptpod.proto.iscp2.v1.PingOrBuilder.extensionFieldsOrNull: com.github.aptpod.proto.iscp2.v1.extensions.PingExtensionFields?
  get() = if (hasExtensionFields()) getExtensionFields() else null

