// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: iscp2/v1/connection.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package com.github.aptpod.proto.iscp2.v1;

@kotlin.jvm.JvmName("-initializeconnectRequest")
public inline fun connectRequest(block: com.github.aptpod.proto.iscp2.v1.ConnectRequestKt.Dsl.() -> kotlin.Unit): com.github.aptpod.proto.iscp2.v1.ConnectRequest =
  com.github.aptpod.proto.iscp2.v1.ConnectRequestKt.Dsl._create(com.github.aptpod.proto.iscp2.v1.ConnectRequest.newBuilder()).apply { block() }._build()
/**
 * Protobuf type `iscp2.v1.ConnectRequest`
 */
public object ConnectRequestKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: com.github.aptpod.proto.iscp2.v1.ConnectRequest.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: com.github.aptpod.proto.iscp2.v1.ConnectRequest.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): com.github.aptpod.proto.iscp2.v1.ConnectRequest = _builder.build()

    /**
     * `uint32 request_id = 1 [json_name = "requestId"];`
     */
    public var requestId: kotlin.Int
      @JvmName("getRequestId")
      get() = _builder.getRequestId()
      @JvmName("setRequestId")
      set(value) {
        _builder.setRequestId(value)
      }
    /**
     * `uint32 request_id = 1 [json_name = "requestId"];`
     */
    public fun clearRequestId() {
      _builder.clearRequestId()
    }

    /**
     * `string protocol_version = 2 [json_name = "protocolVersion"];`
     */
    public var protocolVersion: kotlin.String
      @JvmName("getProtocolVersion")
      get() = _builder.getProtocolVersion()
      @JvmName("setProtocolVersion")
      set(value) {
        _builder.setProtocolVersion(value)
      }
    /**
     * `string protocol_version = 2 [json_name = "protocolVersion"];`
     */
    public fun clearProtocolVersion() {
      _builder.clearProtocolVersion()
    }

    /**
     * `string node_id = 3 [json_name = "nodeId"];`
     */
    public var nodeId: kotlin.String
      @JvmName("getNodeId")
      get() = _builder.getNodeId()
      @JvmName("setNodeId")
      set(value) {
        _builder.setNodeId(value)
      }
    /**
     * `string node_id = 3 [json_name = "nodeId"];`
     */
    public fun clearNodeId() {
      _builder.clearNodeId()
    }

    /**
     * `uint32 ping_interval = 4 [json_name = "pingInterval"];`
     */
    public var pingInterval: kotlin.Int
      @JvmName("getPingInterval")
      get() = _builder.getPingInterval()
      @JvmName("setPingInterval")
      set(value) {
        _builder.setPingInterval(value)
      }
    /**
     * `uint32 ping_interval = 4 [json_name = "pingInterval"];`
     */
    public fun clearPingInterval() {
      _builder.clearPingInterval()
    }

    /**
     * `uint32 ping_timeout = 5 [json_name = "pingTimeout"];`
     */
    public var pingTimeout: kotlin.Int
      @JvmName("getPingTimeout")
      get() = _builder.getPingTimeout()
      @JvmName("setPingTimeout")
      set(value) {
        _builder.setPingTimeout(value)
      }
    /**
     * `uint32 ping_timeout = 5 [json_name = "pingTimeout"];`
     */
    public fun clearPingTimeout() {
      _builder.clearPingTimeout()
    }

    /**
     * `.iscp2.v1.extensions.ConnectRequestExtensionFields extension_fields = 6 [json_name = "extensionFields"];`
     */
    public var extensionFields: com.github.aptpod.proto.iscp2.v1.extensions.ConnectRequestExtensionFields
      @JvmName("getExtensionFields")
      get() = _builder.getExtensionFields()
      @JvmName("setExtensionFields")
      set(value) {
        _builder.setExtensionFields(value)
      }
    /**
     * `.iscp2.v1.extensions.ConnectRequestExtensionFields extension_fields = 6 [json_name = "extensionFields"];`
     */
    public fun clearExtensionFields() {
      _builder.clearExtensionFields()
    }
    /**
     * `.iscp2.v1.extensions.ConnectRequestExtensionFields extension_fields = 6 [json_name = "extensionFields"];`
     * @return Whether the extensionFields field is set.
     */
    public fun hasExtensionFields(): kotlin.Boolean {
      return _builder.hasExtensionFields()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun com.github.aptpod.proto.iscp2.v1.ConnectRequest.copy(block: `com.github.aptpod.proto.iscp2.v1`.ConnectRequestKt.Dsl.() -> kotlin.Unit): com.github.aptpod.proto.iscp2.v1.ConnectRequest =
  `com.github.aptpod.proto.iscp2.v1`.ConnectRequestKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val com.github.aptpod.proto.iscp2.v1.ConnectRequestOrBuilder.extensionFieldsOrNull: com.github.aptpod.proto.iscp2.v1.extensions.ConnectRequestExtensionFields?
  get() = if (hasExtensionFields()) getExtensionFields() else null

