// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: iscp2/v1/common.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package com.github.aptpod.proto.iscp2.v1;

@kotlin.jvm.JvmName("-initializedataPointGroup")
public inline fun dataPointGroup(block: com.github.aptpod.proto.iscp2.v1.DataPointGroupKt.Dsl.() -> kotlin.Unit): com.github.aptpod.proto.iscp2.v1.DataPointGroup =
  com.github.aptpod.proto.iscp2.v1.DataPointGroupKt.Dsl._create(com.github.aptpod.proto.iscp2.v1.DataPointGroup.newBuilder()).apply { block() }._build()
/**
 * Protobuf type `iscp2.v1.DataPointGroup`
 */
public object DataPointGroupKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: com.github.aptpod.proto.iscp2.v1.DataPointGroup.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: com.github.aptpod.proto.iscp2.v1.DataPointGroup.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): com.github.aptpod.proto.iscp2.v1.DataPointGroup = _builder.build()

    /**
     * `.iscp2.v1.DataID data_id = 1 [json_name = "dataId"];`
     */
    public var dataId: com.github.aptpod.proto.iscp2.v1.DataID
      @JvmName("getDataId")
      get() = _builder.getDataId()
      @JvmName("setDataId")
      set(value) {
        _builder.setDataId(value)
      }
    /**
     * `.iscp2.v1.DataID data_id = 1 [json_name = "dataId"];`
     */
    public fun clearDataId() {
      _builder.clearDataId()
    }
    /**
     * `.iscp2.v1.DataID data_id = 1 [json_name = "dataId"];`
     * @return Whether the dataId field is set.
     */
    public fun hasDataId(): kotlin.Boolean {
      return _builder.hasDataId()
    }

    /**
     * `uint32 data_id_alias = 2 [json_name = "dataIdAlias"];`
     */
    public var dataIdAlias: kotlin.Int
      @JvmName("getDataIdAlias")
      get() = _builder.getDataIdAlias()
      @JvmName("setDataIdAlias")
      set(value) {
        _builder.setDataIdAlias(value)
      }
    /**
     * `uint32 data_id_alias = 2 [json_name = "dataIdAlias"];`
     */
    public fun clearDataIdAlias() {
      _builder.clearDataIdAlias()
    }
    /**
     * `uint32 data_id_alias = 2 [json_name = "dataIdAlias"];`
     * @return Whether the dataIdAlias field is set.
     */
    public fun hasDataIdAlias(): kotlin.Boolean {
      return _builder.hasDataIdAlias()
    }

    /**
     * An uninstantiable, behaviorless type to represent the field in
     * generics.
     */
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    public class DataPointsProxy private constructor() : com.google.protobuf.kotlin.DslProxy()
    /**
     * `repeated .iscp2.v1.DataPoint data_points = 3 [json_name = "dataPoints"];`
     */
     public val dataPoints: com.google.protobuf.kotlin.DslList<com.github.aptpod.proto.iscp2.v1.DataPoint, DataPointsProxy>
      @kotlin.jvm.JvmSynthetic
      get() = com.google.protobuf.kotlin.DslList(
        _builder.getDataPointsList()
      )
    /**
     * `repeated .iscp2.v1.DataPoint data_points = 3 [json_name = "dataPoints"];`
     * @param value The dataPoints to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addDataPoints")
    public fun com.google.protobuf.kotlin.DslList<com.github.aptpod.proto.iscp2.v1.DataPoint, DataPointsProxy>.add(value: com.github.aptpod.proto.iscp2.v1.DataPoint) {
      _builder.addDataPoints(value)
    }
    /**
     * `repeated .iscp2.v1.DataPoint data_points = 3 [json_name = "dataPoints"];`
     * @param value The dataPoints to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignDataPoints")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<com.github.aptpod.proto.iscp2.v1.DataPoint, DataPointsProxy>.plusAssign(value: com.github.aptpod.proto.iscp2.v1.DataPoint) {
      add(value)
    }
    /**
     * `repeated .iscp2.v1.DataPoint data_points = 3 [json_name = "dataPoints"];`
     * @param values The dataPoints to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addAllDataPoints")
    public fun com.google.protobuf.kotlin.DslList<com.github.aptpod.proto.iscp2.v1.DataPoint, DataPointsProxy>.addAll(values: kotlin.collections.Iterable<com.github.aptpod.proto.iscp2.v1.DataPoint>) {
      _builder.addAllDataPoints(values)
    }
    /**
     * `repeated .iscp2.v1.DataPoint data_points = 3 [json_name = "dataPoints"];`
     * @param values The dataPoints to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignAllDataPoints")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<com.github.aptpod.proto.iscp2.v1.DataPoint, DataPointsProxy>.plusAssign(values: kotlin.collections.Iterable<com.github.aptpod.proto.iscp2.v1.DataPoint>) {
      addAll(values)
    }
    /**
     * `repeated .iscp2.v1.DataPoint data_points = 3 [json_name = "dataPoints"];`
     * @param index The index to set the value at.
     * @param value The dataPoints to set.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("setDataPoints")
    public operator fun com.google.protobuf.kotlin.DslList<com.github.aptpod.proto.iscp2.v1.DataPoint, DataPointsProxy>.set(index: kotlin.Int, value: com.github.aptpod.proto.iscp2.v1.DataPoint) {
      _builder.setDataPoints(index, value)
    }
    /**
     * `repeated .iscp2.v1.DataPoint data_points = 3 [json_name = "dataPoints"];`
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("clearDataPoints")
    public fun com.google.protobuf.kotlin.DslList<com.github.aptpod.proto.iscp2.v1.DataPoint, DataPointsProxy>.clear() {
      _builder.clearDataPoints()
    }

    public val dataIdOrAliasCase: com.github.aptpod.proto.iscp2.v1.DataPointGroup.DataIdOrAliasCase
      @JvmName("getDataIdOrAliasCase")
      get() = _builder.getDataIdOrAliasCase()

    public fun clearDataIdOrAlias() {
      _builder.clearDataIdOrAlias()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun com.github.aptpod.proto.iscp2.v1.DataPointGroup.copy(block: `com.github.aptpod.proto.iscp2.v1`.DataPointGroupKt.Dsl.() -> kotlin.Unit): com.github.aptpod.proto.iscp2.v1.DataPointGroup =
  `com.github.aptpod.proto.iscp2.v1`.DataPointGroupKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val com.github.aptpod.proto.iscp2.v1.DataPointGroupOrBuilder.dataIdOrNull: com.github.aptpod.proto.iscp2.v1.DataID?
  get() = if (hasDataId()) getDataId() else null

