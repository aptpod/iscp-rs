// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: iscp2/v1/extensions/upstream.proto

package extensions

import (
	fmt "fmt"
	proto "github.com/gogo/protobuf/proto"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type UpstreamOpenRequestExtensionFields struct {
	Persist              bool     `protobuf:"varint,1,opt,name=persist,proto3" json:"persist,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpstreamOpenRequestExtensionFields) Reset()         { *m = UpstreamOpenRequestExtensionFields{} }
func (m *UpstreamOpenRequestExtensionFields) String() string { return proto.CompactTextString(m) }
func (*UpstreamOpenRequestExtensionFields) ProtoMessage()    {}
func (*UpstreamOpenRequestExtensionFields) Descriptor() ([]byte, []int) {
	return fileDescriptor_9dc717badbafa953, []int{0}
}
func (m *UpstreamOpenRequestExtensionFields) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *UpstreamOpenRequestExtensionFields) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_UpstreamOpenRequestExtensionFields.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *UpstreamOpenRequestExtensionFields) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpstreamOpenRequestExtensionFields.Merge(m, src)
}
func (m *UpstreamOpenRequestExtensionFields) XXX_Size() int {
	return m.Size()
}
func (m *UpstreamOpenRequestExtensionFields) XXX_DiscardUnknown() {
	xxx_messageInfo_UpstreamOpenRequestExtensionFields.DiscardUnknown(m)
}

var xxx_messageInfo_UpstreamOpenRequestExtensionFields proto.InternalMessageInfo

func (m *UpstreamOpenRequestExtensionFields) GetPersist() bool {
	if m != nil {
		return m.Persist
	}
	return false
}

type UpstreamOpenResponseExtensionFields struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpstreamOpenResponseExtensionFields) Reset()         { *m = UpstreamOpenResponseExtensionFields{} }
func (m *UpstreamOpenResponseExtensionFields) String() string { return proto.CompactTextString(m) }
func (*UpstreamOpenResponseExtensionFields) ProtoMessage()    {}
func (*UpstreamOpenResponseExtensionFields) Descriptor() ([]byte, []int) {
	return fileDescriptor_9dc717badbafa953, []int{1}
}
func (m *UpstreamOpenResponseExtensionFields) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *UpstreamOpenResponseExtensionFields) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_UpstreamOpenResponseExtensionFields.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *UpstreamOpenResponseExtensionFields) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpstreamOpenResponseExtensionFields.Merge(m, src)
}
func (m *UpstreamOpenResponseExtensionFields) XXX_Size() int {
	return m.Size()
}
func (m *UpstreamOpenResponseExtensionFields) XXX_DiscardUnknown() {
	xxx_messageInfo_UpstreamOpenResponseExtensionFields.DiscardUnknown(m)
}

var xxx_messageInfo_UpstreamOpenResponseExtensionFields proto.InternalMessageInfo

type UpstreamResumeRequestExtensionFields struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpstreamResumeRequestExtensionFields) Reset()         { *m = UpstreamResumeRequestExtensionFields{} }
func (m *UpstreamResumeRequestExtensionFields) String() string { return proto.CompactTextString(m) }
func (*UpstreamResumeRequestExtensionFields) ProtoMessage()    {}
func (*UpstreamResumeRequestExtensionFields) Descriptor() ([]byte, []int) {
	return fileDescriptor_9dc717badbafa953, []int{2}
}
func (m *UpstreamResumeRequestExtensionFields) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *UpstreamResumeRequestExtensionFields) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_UpstreamResumeRequestExtensionFields.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *UpstreamResumeRequestExtensionFields) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpstreamResumeRequestExtensionFields.Merge(m, src)
}
func (m *UpstreamResumeRequestExtensionFields) XXX_Size() int {
	return m.Size()
}
func (m *UpstreamResumeRequestExtensionFields) XXX_DiscardUnknown() {
	xxx_messageInfo_UpstreamResumeRequestExtensionFields.DiscardUnknown(m)
}

var xxx_messageInfo_UpstreamResumeRequestExtensionFields proto.InternalMessageInfo

type UpstreamResumeResponseExtensionFields struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpstreamResumeResponseExtensionFields) Reset()         { *m = UpstreamResumeResponseExtensionFields{} }
func (m *UpstreamResumeResponseExtensionFields) String() string { return proto.CompactTextString(m) }
func (*UpstreamResumeResponseExtensionFields) ProtoMessage()    {}
func (*UpstreamResumeResponseExtensionFields) Descriptor() ([]byte, []int) {
	return fileDescriptor_9dc717badbafa953, []int{3}
}
func (m *UpstreamResumeResponseExtensionFields) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *UpstreamResumeResponseExtensionFields) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_UpstreamResumeResponseExtensionFields.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *UpstreamResumeResponseExtensionFields) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpstreamResumeResponseExtensionFields.Merge(m, src)
}
func (m *UpstreamResumeResponseExtensionFields) XXX_Size() int {
	return m.Size()
}
func (m *UpstreamResumeResponseExtensionFields) XXX_DiscardUnknown() {
	xxx_messageInfo_UpstreamResumeResponseExtensionFields.DiscardUnknown(m)
}

var xxx_messageInfo_UpstreamResumeResponseExtensionFields proto.InternalMessageInfo

type UpstreamCloseRequestExtensionFields struct {
	CloseSession         bool     `protobuf:"varint,1,opt,name=close_session,json=closeSession,proto3" json:"close_session,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpstreamCloseRequestExtensionFields) Reset()         { *m = UpstreamCloseRequestExtensionFields{} }
func (m *UpstreamCloseRequestExtensionFields) String() string { return proto.CompactTextString(m) }
func (*UpstreamCloseRequestExtensionFields) ProtoMessage()    {}
func (*UpstreamCloseRequestExtensionFields) Descriptor() ([]byte, []int) {
	return fileDescriptor_9dc717badbafa953, []int{4}
}
func (m *UpstreamCloseRequestExtensionFields) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *UpstreamCloseRequestExtensionFields) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_UpstreamCloseRequestExtensionFields.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *UpstreamCloseRequestExtensionFields) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpstreamCloseRequestExtensionFields.Merge(m, src)
}
func (m *UpstreamCloseRequestExtensionFields) XXX_Size() int {
	return m.Size()
}
func (m *UpstreamCloseRequestExtensionFields) XXX_DiscardUnknown() {
	xxx_messageInfo_UpstreamCloseRequestExtensionFields.DiscardUnknown(m)
}

var xxx_messageInfo_UpstreamCloseRequestExtensionFields proto.InternalMessageInfo

func (m *UpstreamCloseRequestExtensionFields) GetCloseSession() bool {
	if m != nil {
		return m.CloseSession
	}
	return false
}

type UpstreamCloseResponseExtensionFields struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpstreamCloseResponseExtensionFields) Reset()         { *m = UpstreamCloseResponseExtensionFields{} }
func (m *UpstreamCloseResponseExtensionFields) String() string { return proto.CompactTextString(m) }
func (*UpstreamCloseResponseExtensionFields) ProtoMessage()    {}
func (*UpstreamCloseResponseExtensionFields) Descriptor() ([]byte, []int) {
	return fileDescriptor_9dc717badbafa953, []int{5}
}
func (m *UpstreamCloseResponseExtensionFields) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *UpstreamCloseResponseExtensionFields) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_UpstreamCloseResponseExtensionFields.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *UpstreamCloseResponseExtensionFields) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpstreamCloseResponseExtensionFields.Merge(m, src)
}
func (m *UpstreamCloseResponseExtensionFields) XXX_Size() int {
	return m.Size()
}
func (m *UpstreamCloseResponseExtensionFields) XXX_DiscardUnknown() {
	xxx_messageInfo_UpstreamCloseResponseExtensionFields.DiscardUnknown(m)
}

var xxx_messageInfo_UpstreamCloseResponseExtensionFields proto.InternalMessageInfo

type UpstreamChunkExtensionFields struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpstreamChunkExtensionFields) Reset()         { *m = UpstreamChunkExtensionFields{} }
func (m *UpstreamChunkExtensionFields) String() string { return proto.CompactTextString(m) }
func (*UpstreamChunkExtensionFields) ProtoMessage()    {}
func (*UpstreamChunkExtensionFields) Descriptor() ([]byte, []int) {
	return fileDescriptor_9dc717badbafa953, []int{6}
}
func (m *UpstreamChunkExtensionFields) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *UpstreamChunkExtensionFields) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_UpstreamChunkExtensionFields.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *UpstreamChunkExtensionFields) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpstreamChunkExtensionFields.Merge(m, src)
}
func (m *UpstreamChunkExtensionFields) XXX_Size() int {
	return m.Size()
}
func (m *UpstreamChunkExtensionFields) XXX_DiscardUnknown() {
	xxx_messageInfo_UpstreamChunkExtensionFields.DiscardUnknown(m)
}

var xxx_messageInfo_UpstreamChunkExtensionFields proto.InternalMessageInfo

type UpstreamChunkAckExtensionFields struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpstreamChunkAckExtensionFields) Reset()         { *m = UpstreamChunkAckExtensionFields{} }
func (m *UpstreamChunkAckExtensionFields) String() string { return proto.CompactTextString(m) }
func (*UpstreamChunkAckExtensionFields) ProtoMessage()    {}
func (*UpstreamChunkAckExtensionFields) Descriptor() ([]byte, []int) {
	return fileDescriptor_9dc717badbafa953, []int{7}
}
func (m *UpstreamChunkAckExtensionFields) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *UpstreamChunkAckExtensionFields) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_UpstreamChunkAckExtensionFields.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *UpstreamChunkAckExtensionFields) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpstreamChunkAckExtensionFields.Merge(m, src)
}
func (m *UpstreamChunkAckExtensionFields) XXX_Size() int {
	return m.Size()
}
func (m *UpstreamChunkAckExtensionFields) XXX_DiscardUnknown() {
	xxx_messageInfo_UpstreamChunkAckExtensionFields.DiscardUnknown(m)
}

var xxx_messageInfo_UpstreamChunkAckExtensionFields proto.InternalMessageInfo

type UpstreamMetadataExtensionFields struct {
	Persist              bool     `protobuf:"varint,1,opt,name=persist,proto3" json:"persist,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpstreamMetadataExtensionFields) Reset()         { *m = UpstreamMetadataExtensionFields{} }
func (m *UpstreamMetadataExtensionFields) String() string { return proto.CompactTextString(m) }
func (*UpstreamMetadataExtensionFields) ProtoMessage()    {}
func (*UpstreamMetadataExtensionFields) Descriptor() ([]byte, []int) {
	return fileDescriptor_9dc717badbafa953, []int{8}
}
func (m *UpstreamMetadataExtensionFields) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *UpstreamMetadataExtensionFields) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_UpstreamMetadataExtensionFields.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *UpstreamMetadataExtensionFields) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpstreamMetadataExtensionFields.Merge(m, src)
}
func (m *UpstreamMetadataExtensionFields) XXX_Size() int {
	return m.Size()
}
func (m *UpstreamMetadataExtensionFields) XXX_DiscardUnknown() {
	xxx_messageInfo_UpstreamMetadataExtensionFields.DiscardUnknown(m)
}

var xxx_messageInfo_UpstreamMetadataExtensionFields proto.InternalMessageInfo

func (m *UpstreamMetadataExtensionFields) GetPersist() bool {
	if m != nil {
		return m.Persist
	}
	return false
}

type UpstreamMetadataAckExtensionFields struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpstreamMetadataAckExtensionFields) Reset()         { *m = UpstreamMetadataAckExtensionFields{} }
func (m *UpstreamMetadataAckExtensionFields) String() string { return proto.CompactTextString(m) }
func (*UpstreamMetadataAckExtensionFields) ProtoMessage()    {}
func (*UpstreamMetadataAckExtensionFields) Descriptor() ([]byte, []int) {
	return fileDescriptor_9dc717badbafa953, []int{9}
}
func (m *UpstreamMetadataAckExtensionFields) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *UpstreamMetadataAckExtensionFields) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_UpstreamMetadataAckExtensionFields.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *UpstreamMetadataAckExtensionFields) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpstreamMetadataAckExtensionFields.Merge(m, src)
}
func (m *UpstreamMetadataAckExtensionFields) XXX_Size() int {
	return m.Size()
}
func (m *UpstreamMetadataAckExtensionFields) XXX_DiscardUnknown() {
	xxx_messageInfo_UpstreamMetadataAckExtensionFields.DiscardUnknown(m)
}

var xxx_messageInfo_UpstreamMetadataAckExtensionFields proto.InternalMessageInfo

type UpstreamChunkResultExtensionFields struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpstreamChunkResultExtensionFields) Reset()         { *m = UpstreamChunkResultExtensionFields{} }
func (m *UpstreamChunkResultExtensionFields) String() string { return proto.CompactTextString(m) }
func (*UpstreamChunkResultExtensionFields) ProtoMessage()    {}
func (*UpstreamChunkResultExtensionFields) Descriptor() ([]byte, []int) {
	return fileDescriptor_9dc717badbafa953, []int{10}
}
func (m *UpstreamChunkResultExtensionFields) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *UpstreamChunkResultExtensionFields) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_UpstreamChunkResultExtensionFields.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *UpstreamChunkResultExtensionFields) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpstreamChunkResultExtensionFields.Merge(m, src)
}
func (m *UpstreamChunkResultExtensionFields) XXX_Size() int {
	return m.Size()
}
func (m *UpstreamChunkResultExtensionFields) XXX_DiscardUnknown() {
	xxx_messageInfo_UpstreamChunkResultExtensionFields.DiscardUnknown(m)
}

var xxx_messageInfo_UpstreamChunkResultExtensionFields proto.InternalMessageInfo

func init() {
	proto.RegisterType((*UpstreamOpenRequestExtensionFields)(nil), "iscp2.v1.extensions.UpstreamOpenRequestExtensionFields")
	proto.RegisterType((*UpstreamOpenResponseExtensionFields)(nil), "iscp2.v1.extensions.UpstreamOpenResponseExtensionFields")
	proto.RegisterType((*UpstreamResumeRequestExtensionFields)(nil), "iscp2.v1.extensions.UpstreamResumeRequestExtensionFields")
	proto.RegisterType((*UpstreamResumeResponseExtensionFields)(nil), "iscp2.v1.extensions.UpstreamResumeResponseExtensionFields")
	proto.RegisterType((*UpstreamCloseRequestExtensionFields)(nil), "iscp2.v1.extensions.UpstreamCloseRequestExtensionFields")
	proto.RegisterType((*UpstreamCloseResponseExtensionFields)(nil), "iscp2.v1.extensions.UpstreamCloseResponseExtensionFields")
	proto.RegisterType((*UpstreamChunkExtensionFields)(nil), "iscp2.v1.extensions.UpstreamChunkExtensionFields")
	proto.RegisterType((*UpstreamChunkAckExtensionFields)(nil), "iscp2.v1.extensions.UpstreamChunkAckExtensionFields")
	proto.RegisterType((*UpstreamMetadataExtensionFields)(nil), "iscp2.v1.extensions.UpstreamMetadataExtensionFields")
	proto.RegisterType((*UpstreamMetadataAckExtensionFields)(nil), "iscp2.v1.extensions.UpstreamMetadataAckExtensionFields")
	proto.RegisterType((*UpstreamChunkResultExtensionFields)(nil), "iscp2.v1.extensions.UpstreamChunkResultExtensionFields")
}

func init() {
	proto.RegisterFile("iscp2/v1/extensions/upstream.proto", fileDescriptor_9dc717badbafa953)
}

var fileDescriptor_9dc717badbafa953 = []byte{
	// 372 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x92, 0xc1, 0x4a, 0xf3, 0x40,
	0x14, 0x85, 0x49, 0x7e, 0xf8, 0x95, 0xc1, 0x6e, 0x5a, 0xc4, 0x2e, 0x24, 0xd5, 0xb4, 0x55, 0x37,
	0x66, 0x88, 0xee, 0x22, 0x0a, 0x56, 0xaa, 0x54, 0x10, 0x4b, 0xc5, 0x2c, 0xa4, 0x20, 0x69, 0x7a,
	0x4d, 0x83, 0x4d, 0x66, 0xec, 0x9d, 0x14, 0x9f, 0xc7, 0xa5, 0x4f, 0x22, 0xae, 0x7c, 0x04, 0xcd,
	0xd2, 0xa7, 0x90, 0xc4, 0xa4, 0x69, 0x63, 0x04, 0x97, 0x39, 0xf3, 0xdd, 0x73, 0x0e, 0x37, 0x97,
	0xa8, 0x2e, 0xda, 0x7c, 0x8f, 0x4e, 0x75, 0x0a, 0x8f, 0x02, 0x7c, 0x74, 0x99, 0x8f, 0x34, 0xe0,
	0x28, 0x26, 0x60, 0x79, 0x1a, 0x9f, 0x30, 0xc1, 0xca, 0x95, 0x98, 0xd1, 0xa6, 0xba, 0x96, 0x31,
	0xea, 0x11, 0x51, 0xaf, 0x13, 0xec, 0x92, 0x83, 0xdf, 0x83, 0x87, 0x00, 0x50, 0xb4, 0x53, 0xe0,
	0xd4, 0x85, 0xf1, 0x10, 0xcb, 0x55, 0xb2, 0xc4, 0x61, 0x82, 0x2e, 0x8a, 0xaa, 0xb4, 0x21, 0xed,
	0x2c, 0xf7, 0xd2, 0x4f, 0xb5, 0x49, 0xea, 0x8b, 0xf3, 0xc8, 0x99, 0x8f, 0x90, 0x33, 0x50, 0xb7,
	0x48, 0x23, 0xc5, 0x7a, 0x80, 0x81, 0x07, 0xc5, 0x41, 0xea, 0x36, 0x69, 0xe6, 0xb9, 0x62, 0xc3,
	0xf3, 0x2c, 0xf7, 0x64, 0xcc, 0xf0, 0x17, 0xbf, 0x72, 0x9d, 0x94, 0xec, 0xe8, 0xf9, 0x16, 0x01,
	0x23, 0x39, 0xa9, 0xbf, 0x12, 0x8b, 0x57, 0xdf, 0xda, 0x7c, 0xb9, 0xc4, 0xab, 0x38, 0x53, 0x21,
	0xeb, 0x33, 0x6e, 0x14, 0xf8, 0xf7, 0xf9, 0xf7, 0x4d, 0x52, 0x5b, 0x78, 0x3f, 0xb6, 0x7f, 0x20,
	0x07, 0x19, 0x72, 0x01, 0xc2, 0x1a, 0x5a, 0xc2, 0xfa, 0xfb, 0xae, 0x1b, 0xd9, 0xbf, 0x4a, 0x87,
	0x0b, 0x22, 0xe6, 0xa8, 0xb8, 0x45, 0xb4, 0xc7, 0x71, 0x7e, 0x31, 0xad, 0x0f, 0xe9, 0x25, 0x54,
	0xa4, 0xb7, 0x50, 0x91, 0xde, 0x43, 0x45, 0x22, 0x6b, 0x36, 0xf3, 0xb4, 0x82, 0xfb, 0x68, 0x95,
	0x52, 0xaf, 0x6e, 0x74, 0x43, 0x5d, 0xe9, 0xe6, 0xd0, 0x71, 0xc5, 0x28, 0x18, 0x68, 0x36, 0xf3,
	0xa8, 0xc5, 0x05, 0x67, 0x43, 0x1a, 0xcd, 0xed, 0xc6, 0x37, 0x46, 0x1d, 0xf0, 0xa9, 0xc3, 0x1c,
	0x76, 0x67, 0xa1, 0xa0, 0x05, 0x37, 0xf9, 0x24, 0xff, 0xeb, 0x98, 0xed, 0x67, 0xb9, 0xd2, 0x89,
	0xb3, 0x4c, 0x5d, 0x9b, 0x15, 0xc3, 0xd7, 0x44, 0xed, 0x9b, 0x7a, 0x3f, 0x53, 0x43, 0xb9, 0x56,
	0xa0, 0xf6, 0xcf, 0xba, 0xad, 0x74, 0x07, 0x9f, 0xf2, 0x6a, 0x4c, 0x18, 0x86, 0xa9, 0x1b, 0x46,
	0xc6, 0x0c, 0xfe, 0xc7, 0x9d, 0xf6, 0xbf, 0x02, 0x00, 0x00, 0xff, 0xff, 0xf9, 0x62, 0x2f, 0x9c,
	0x1d, 0x03, 0x00, 0x00,
}

func (m *UpstreamOpenRequestExtensionFields) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *UpstreamOpenRequestExtensionFields) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *UpstreamOpenRequestExtensionFields) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Persist {
		i--
		if m.Persist {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *UpstreamOpenResponseExtensionFields) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *UpstreamOpenResponseExtensionFields) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *UpstreamOpenResponseExtensionFields) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	return len(dAtA) - i, nil
}

func (m *UpstreamResumeRequestExtensionFields) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *UpstreamResumeRequestExtensionFields) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *UpstreamResumeRequestExtensionFields) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	return len(dAtA) - i, nil
}

func (m *UpstreamResumeResponseExtensionFields) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *UpstreamResumeResponseExtensionFields) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *UpstreamResumeResponseExtensionFields) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	return len(dAtA) - i, nil
}

func (m *UpstreamCloseRequestExtensionFields) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *UpstreamCloseRequestExtensionFields) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *UpstreamCloseRequestExtensionFields) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.CloseSession {
		i--
		if m.CloseSession {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *UpstreamCloseResponseExtensionFields) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *UpstreamCloseResponseExtensionFields) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *UpstreamCloseResponseExtensionFields) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	return len(dAtA) - i, nil
}

func (m *UpstreamChunkExtensionFields) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *UpstreamChunkExtensionFields) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *UpstreamChunkExtensionFields) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	return len(dAtA) - i, nil
}

func (m *UpstreamChunkAckExtensionFields) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *UpstreamChunkAckExtensionFields) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *UpstreamChunkAckExtensionFields) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	return len(dAtA) - i, nil
}

func (m *UpstreamMetadataExtensionFields) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *UpstreamMetadataExtensionFields) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *UpstreamMetadataExtensionFields) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Persist {
		i--
		if m.Persist {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *UpstreamMetadataAckExtensionFields) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *UpstreamMetadataAckExtensionFields) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *UpstreamMetadataAckExtensionFields) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	return len(dAtA) - i, nil
}

func (m *UpstreamChunkResultExtensionFields) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *UpstreamChunkResultExtensionFields) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *UpstreamChunkResultExtensionFields) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	return len(dAtA) - i, nil
}

func encodeVarintUpstream(dAtA []byte, offset int, v uint64) int {
	offset -= sovUpstream(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *UpstreamOpenRequestExtensionFields) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Persist {
		n += 2
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *UpstreamOpenResponseExtensionFields) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *UpstreamResumeRequestExtensionFields) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *UpstreamResumeResponseExtensionFields) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *UpstreamCloseRequestExtensionFields) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.CloseSession {
		n += 2
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *UpstreamCloseResponseExtensionFields) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *UpstreamChunkExtensionFields) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *UpstreamChunkAckExtensionFields) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *UpstreamMetadataExtensionFields) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Persist {
		n += 2
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *UpstreamMetadataAckExtensionFields) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *UpstreamChunkResultExtensionFields) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func sovUpstream(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozUpstream(x uint64) (n int) {
	return sovUpstream(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *UpstreamOpenRequestExtensionFields) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowUpstream
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: UpstreamOpenRequestExtensionFields: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: UpstreamOpenRequestExtensionFields: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Persist", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowUpstream
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Persist = bool(v != 0)
		default:
			iNdEx = preIndex
			skippy, err := skipUpstream(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthUpstream
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *UpstreamOpenResponseExtensionFields) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowUpstream
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: UpstreamOpenResponseExtensionFields: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: UpstreamOpenResponseExtensionFields: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipUpstream(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthUpstream
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *UpstreamResumeRequestExtensionFields) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowUpstream
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: UpstreamResumeRequestExtensionFields: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: UpstreamResumeRequestExtensionFields: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipUpstream(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthUpstream
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *UpstreamResumeResponseExtensionFields) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowUpstream
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: UpstreamResumeResponseExtensionFields: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: UpstreamResumeResponseExtensionFields: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipUpstream(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthUpstream
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *UpstreamCloseRequestExtensionFields) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowUpstream
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: UpstreamCloseRequestExtensionFields: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: UpstreamCloseRequestExtensionFields: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CloseSession", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowUpstream
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.CloseSession = bool(v != 0)
		default:
			iNdEx = preIndex
			skippy, err := skipUpstream(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthUpstream
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *UpstreamCloseResponseExtensionFields) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowUpstream
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: UpstreamCloseResponseExtensionFields: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: UpstreamCloseResponseExtensionFields: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipUpstream(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthUpstream
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *UpstreamChunkExtensionFields) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowUpstream
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: UpstreamChunkExtensionFields: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: UpstreamChunkExtensionFields: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipUpstream(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthUpstream
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *UpstreamChunkAckExtensionFields) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowUpstream
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: UpstreamChunkAckExtensionFields: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: UpstreamChunkAckExtensionFields: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipUpstream(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthUpstream
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *UpstreamMetadataExtensionFields) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowUpstream
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: UpstreamMetadataExtensionFields: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: UpstreamMetadataExtensionFields: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Persist", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowUpstream
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Persist = bool(v != 0)
		default:
			iNdEx = preIndex
			skippy, err := skipUpstream(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthUpstream
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *UpstreamMetadataAckExtensionFields) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowUpstream
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: UpstreamMetadataAckExtensionFields: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: UpstreamMetadataAckExtensionFields: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipUpstream(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthUpstream
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *UpstreamChunkResultExtensionFields) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowUpstream
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: UpstreamChunkResultExtensionFields: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: UpstreamChunkResultExtensionFields: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipUpstream(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthUpstream
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipUpstream(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowUpstream
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowUpstream
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowUpstream
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthUpstream
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupUpstream
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthUpstream
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthUpstream        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowUpstream          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupUpstream = fmt.Errorf("proto: unexpected end of group")
)
