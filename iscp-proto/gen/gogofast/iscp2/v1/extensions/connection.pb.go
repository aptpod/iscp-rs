// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: iscp2/v1/extensions/connection.proto

package extensions

import (
	fmt "fmt"
	proto "github.com/gogo/protobuf/proto"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type ConnectRequestExtensionFields struct {
	AccessToken          string                  `protobuf:"bytes,1,opt,name=access_token,json=accessToken,proto3" json:"access_token,omitempty"`
	Intdash              *IntdashExtensionFields `protobuf:"bytes,1024,opt,name=intdash,proto3" json:"intdash,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *ConnectRequestExtensionFields) Reset()         { *m = ConnectRequestExtensionFields{} }
func (m *ConnectRequestExtensionFields) String() string { return proto.CompactTextString(m) }
func (*ConnectRequestExtensionFields) ProtoMessage()    {}
func (*ConnectRequestExtensionFields) Descriptor() ([]byte, []int) {
	return fileDescriptor_1a9dbd20d8e063ef, []int{0}
}
func (m *ConnectRequestExtensionFields) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ConnectRequestExtensionFields) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ConnectRequestExtensionFields.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ConnectRequestExtensionFields) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ConnectRequestExtensionFields.Merge(m, src)
}
func (m *ConnectRequestExtensionFields) XXX_Size() int {
	return m.Size()
}
func (m *ConnectRequestExtensionFields) XXX_DiscardUnknown() {
	xxx_messageInfo_ConnectRequestExtensionFields.DiscardUnknown(m)
}

var xxx_messageInfo_ConnectRequestExtensionFields proto.InternalMessageInfo

func (m *ConnectRequestExtensionFields) GetAccessToken() string {
	if m != nil {
		return m.AccessToken
	}
	return ""
}

func (m *ConnectRequestExtensionFields) GetIntdash() *IntdashExtensionFields {
	if m != nil {
		return m.Intdash
	}
	return nil
}

type IntdashExtensionFields struct {
	ProjectUuid          string   `protobuf:"bytes,1,opt,name=project_uuid,json=projectUuid,proto3" json:"project_uuid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *IntdashExtensionFields) Reset()         { *m = IntdashExtensionFields{} }
func (m *IntdashExtensionFields) String() string { return proto.CompactTextString(m) }
func (*IntdashExtensionFields) ProtoMessage()    {}
func (*IntdashExtensionFields) Descriptor() ([]byte, []int) {
	return fileDescriptor_1a9dbd20d8e063ef, []int{1}
}
func (m *IntdashExtensionFields) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *IntdashExtensionFields) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_IntdashExtensionFields.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *IntdashExtensionFields) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IntdashExtensionFields.Merge(m, src)
}
func (m *IntdashExtensionFields) XXX_Size() int {
	return m.Size()
}
func (m *IntdashExtensionFields) XXX_DiscardUnknown() {
	xxx_messageInfo_IntdashExtensionFields.DiscardUnknown(m)
}

var xxx_messageInfo_IntdashExtensionFields proto.InternalMessageInfo

func (m *IntdashExtensionFields) GetProjectUuid() string {
	if m != nil {
		return m.ProjectUuid
	}
	return ""
}

type ConnectResponseExtensionFields struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ConnectResponseExtensionFields) Reset()         { *m = ConnectResponseExtensionFields{} }
func (m *ConnectResponseExtensionFields) String() string { return proto.CompactTextString(m) }
func (*ConnectResponseExtensionFields) ProtoMessage()    {}
func (*ConnectResponseExtensionFields) Descriptor() ([]byte, []int) {
	return fileDescriptor_1a9dbd20d8e063ef, []int{2}
}
func (m *ConnectResponseExtensionFields) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ConnectResponseExtensionFields) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ConnectResponseExtensionFields.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ConnectResponseExtensionFields) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ConnectResponseExtensionFields.Merge(m, src)
}
func (m *ConnectResponseExtensionFields) XXX_Size() int {
	return m.Size()
}
func (m *ConnectResponseExtensionFields) XXX_DiscardUnknown() {
	xxx_messageInfo_ConnectResponseExtensionFields.DiscardUnknown(m)
}

var xxx_messageInfo_ConnectResponseExtensionFields proto.InternalMessageInfo

type DisconnectExtensionFields struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DisconnectExtensionFields) Reset()         { *m = DisconnectExtensionFields{} }
func (m *DisconnectExtensionFields) String() string { return proto.CompactTextString(m) }
func (*DisconnectExtensionFields) ProtoMessage()    {}
func (*DisconnectExtensionFields) Descriptor() ([]byte, []int) {
	return fileDescriptor_1a9dbd20d8e063ef, []int{3}
}
func (m *DisconnectExtensionFields) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *DisconnectExtensionFields) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_DisconnectExtensionFields.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *DisconnectExtensionFields) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DisconnectExtensionFields.Merge(m, src)
}
func (m *DisconnectExtensionFields) XXX_Size() int {
	return m.Size()
}
func (m *DisconnectExtensionFields) XXX_DiscardUnknown() {
	xxx_messageInfo_DisconnectExtensionFields.DiscardUnknown(m)
}

var xxx_messageInfo_DisconnectExtensionFields proto.InternalMessageInfo

func init() {
	proto.RegisterType((*ConnectRequestExtensionFields)(nil), "iscp2.v1.extensions.ConnectRequestExtensionFields")
	proto.RegisterType((*IntdashExtensionFields)(nil), "iscp2.v1.extensions.IntdashExtensionFields")
	proto.RegisterType((*ConnectResponseExtensionFields)(nil), "iscp2.v1.extensions.ConnectResponseExtensionFields")
	proto.RegisterType((*DisconnectExtensionFields)(nil), "iscp2.v1.extensions.DisconnectExtensionFields")
}

func init() {
	proto.RegisterFile("iscp2/v1/extensions/connection.proto", fileDescriptor_1a9dbd20d8e063ef)
}

var fileDescriptor_1a9dbd20d8e063ef = []byte{
	// 349 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x91, 0xcf, 0x4a, 0xeb, 0x40,
	0x14, 0xc6, 0x99, 0x5c, 0xb8, 0xf7, 0x3a, 0x15, 0x84, 0x16, 0xb5, 0x22, 0xc6, 0x1a, 0x5c, 0x14,
	0xc4, 0x19, 0x52, 0x77, 0x11, 0x37, 0xad, 0xad, 0x74, 0x21, 0x94, 0xa2, 0x59, 0x48, 0xa1, 0x4c,
	0x27, 0x63, 0x3a, 0x6a, 0x67, 0x62, 0xcf, 0xa4, 0xb8, 0x74, 0xed, 0x63, 0xb8, 0xf4, 0x49, 0xc4,
	0x95, 0x8f, 0x20, 0x71, 0xe7, 0x53, 0x48, 0xd2, 0x7f, 0x50, 0xb2, 0xfd, 0xce, 0xef, 0xcc, 0xf7,
	0x9d, 0x6f, 0xf0, 0xa1, 0x04, 0x1e, 0xd5, 0xe8, 0xc4, 0xa5, 0xe2, 0xc9, 0x08, 0x05, 0x52, 0x2b,
	0xa0, 0x5c, 0x2b, 0x25, 0xb8, 0x91, 0x5a, 0x91, 0x68, 0xac, 0x8d, 0x2e, 0x96, 0x32, 0x8a, 0x4c,
	0x5c, 0xb2, 0xa4, 0x9c, 0x17, 0x84, 0xf7, 0x1a, 0x53, 0xb2, 0x2b, 0x1e, 0x63, 0x01, 0xa6, 0x39,
	0x1f, 0xb6, 0xa4, 0x78, 0x08, 0xa0, 0x78, 0x80, 0xd7, 0x19, 0xe7, 0x02, 0xa0, 0x6f, 0xf4, 0xbd,
	0x50, 0x65, 0x54, 0x41, 0xd5, 0xb5, 0x6e, 0x61, 0xaa, 0x5d, 0xa5, 0x52, 0xb1, 0x85, 0xff, 0x49,
	0x65, 0x02, 0x06, 0xc3, 0xf2, 0xf3, 0xff, 0x0a, 0xaa, 0x16, 0x6a, 0x47, 0x24, 0xc7, 0x8c, 0xb4,
	0xa7, 0xd0, 0x8a, 0x43, 0x77, 0xbe, 0xec, 0x9c, 0xe2, 0xad, 0x7c, 0x24, 0x0d, 0x11, 0x8d, 0xf5,
	0x9d, 0xe0, 0xa6, 0x1f, 0xc7, 0x32, 0x98, 0x87, 0x98, 0x69, 0xd7, 0xb1, 0x0c, 0x9c, 0x0a, 0xb6,
	0x17, 0x87, 0x40, 0xa4, 0x15, 0x88, 0x95, 0x47, 0x9c, 0x5d, 0xbc, 0x73, 0x2e, 0x61, 0xd6, 0xcb,
	0xca, 0xb0, 0xfe, 0x8d, 0xde, 0x13, 0x1b, 0x7d, 0x26, 0x36, 0xfa, 0x4a, 0x6c, 0x84, 0xb7, 0xb9,
	0x1e, 0xe5, 0xdd, 0x50, 0xdf, 0x68, 0x2c, 0x7a, 0xed, 0xa4, 0xb5, 0x76, 0xd0, 0xcd, 0x59, 0x28,
	0xcd, 0x30, 0x1e, 0x10, 0xae, 0x47, 0x94, 0x45, 0x26, 0xd2, 0x01, 0x4d, 0x37, 0x8f, 0xb3, 0xda,
	0x69, 0x28, 0x14, 0x0d, 0x75, 0xa8, 0x6f, 0x19, 0x18, 0x9a, 0xf3, 0x51, 0xaf, 0xd6, 0x9f, 0xb6,
	0xdf, 0x7c, 0xb3, 0x4a, 0xed, 0xcc, 0xcd, 0x77, 0xc9, 0x22, 0x1a, 0x7c, 0xcc, 0xd4, 0x9e, 0xef,
	0xf6, 0x96, 0x6a, 0x62, 0xed, 0xe7, 0xa8, 0xbd, 0x8b, 0x4e, 0xfd, 0x52, 0x18, 0x16, 0x30, 0xc3,
	0x7e, 0xac, 0xcd, 0x8c, 0xf0, 0x3c, 0xdf, 0xf5, 0xbc, 0x25, 0x33, 0xf8, 0x9b, 0x65, 0x3a, 0xf9,
	0x0d, 0x00, 0x00, 0xff, 0xff, 0x06, 0x6c, 0x3d, 0xcc, 0x32, 0x02, 0x00, 0x00,
}

func (m *ConnectRequestExtensionFields) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ConnectRequestExtensionFields) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ConnectRequestExtensionFields) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Intdash != nil {
		{
			size, err := m.Intdash.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintConnection(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x40
		i--
		dAtA[i] = 0x82
	}
	if len(m.AccessToken) > 0 {
		i -= len(m.AccessToken)
		copy(dAtA[i:], m.AccessToken)
		i = encodeVarintConnection(dAtA, i, uint64(len(m.AccessToken)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *IntdashExtensionFields) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *IntdashExtensionFields) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *IntdashExtensionFields) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.ProjectUuid) > 0 {
		i -= len(m.ProjectUuid)
		copy(dAtA[i:], m.ProjectUuid)
		i = encodeVarintConnection(dAtA, i, uint64(len(m.ProjectUuid)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *ConnectResponseExtensionFields) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ConnectResponseExtensionFields) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ConnectResponseExtensionFields) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	return len(dAtA) - i, nil
}

func (m *DisconnectExtensionFields) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *DisconnectExtensionFields) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *DisconnectExtensionFields) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	return len(dAtA) - i, nil
}

func encodeVarintConnection(dAtA []byte, offset int, v uint64) int {
	offset -= sovConnection(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *ConnectRequestExtensionFields) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.AccessToken)
	if l > 0 {
		n += 1 + l + sovConnection(uint64(l))
	}
	if m.Intdash != nil {
		l = m.Intdash.Size()
		n += 2 + l + sovConnection(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *IntdashExtensionFields) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.ProjectUuid)
	if l > 0 {
		n += 1 + l + sovConnection(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ConnectResponseExtensionFields) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *DisconnectExtensionFields) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func sovConnection(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozConnection(x uint64) (n int) {
	return sovConnection(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *ConnectRequestExtensionFields) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowConnection
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ConnectRequestExtensionFields: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ConnectRequestExtensionFields: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AccessToken", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowConnection
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthConnection
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthConnection
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.AccessToken = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 1024:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Intdash", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowConnection
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthConnection
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthConnection
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Intdash == nil {
				m.Intdash = &IntdashExtensionFields{}
			}
			if err := m.Intdash.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipConnection(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthConnection
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *IntdashExtensionFields) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowConnection
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: IntdashExtensionFields: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: IntdashExtensionFields: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ProjectUuid", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowConnection
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthConnection
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthConnection
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ProjectUuid = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipConnection(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthConnection
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ConnectResponseExtensionFields) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowConnection
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ConnectResponseExtensionFields: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ConnectResponseExtensionFields: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipConnection(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthConnection
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *DisconnectExtensionFields) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowConnection
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: DisconnectExtensionFields: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: DisconnectExtensionFields: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipConnection(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthConnection
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipConnection(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowConnection
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowConnection
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowConnection
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthConnection
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupConnection
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthConnection
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthConnection        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowConnection          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupConnection = fmt.Errorf("proto: unexpected end of group")
)
