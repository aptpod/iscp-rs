// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: iscp2/v1/extensions/e2e_call.proto

package extensions

import (
	fmt "fmt"
	proto "github.com/gogo/protobuf/proto"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type UpstreamCallExtensionFields struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpstreamCallExtensionFields) Reset()         { *m = UpstreamCallExtensionFields{} }
func (m *UpstreamCallExtensionFields) String() string { return proto.CompactTextString(m) }
func (*UpstreamCallExtensionFields) ProtoMessage()    {}
func (*UpstreamCallExtensionFields) Descriptor() ([]byte, []int) {
	return fileDescriptor_ec982db740ce99fe, []int{0}
}
func (m *UpstreamCallExtensionFields) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *UpstreamCallExtensionFields) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_UpstreamCallExtensionFields.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *UpstreamCallExtensionFields) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpstreamCallExtensionFields.Merge(m, src)
}
func (m *UpstreamCallExtensionFields) XXX_Size() int {
	return m.Size()
}
func (m *UpstreamCallExtensionFields) XXX_DiscardUnknown() {
	xxx_messageInfo_UpstreamCallExtensionFields.DiscardUnknown(m)
}

var xxx_messageInfo_UpstreamCallExtensionFields proto.InternalMessageInfo

type UpstreamCallAckExtensionFields struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpstreamCallAckExtensionFields) Reset()         { *m = UpstreamCallAckExtensionFields{} }
func (m *UpstreamCallAckExtensionFields) String() string { return proto.CompactTextString(m) }
func (*UpstreamCallAckExtensionFields) ProtoMessage()    {}
func (*UpstreamCallAckExtensionFields) Descriptor() ([]byte, []int) {
	return fileDescriptor_ec982db740ce99fe, []int{1}
}
func (m *UpstreamCallAckExtensionFields) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *UpstreamCallAckExtensionFields) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_UpstreamCallAckExtensionFields.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *UpstreamCallAckExtensionFields) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpstreamCallAckExtensionFields.Merge(m, src)
}
func (m *UpstreamCallAckExtensionFields) XXX_Size() int {
	return m.Size()
}
func (m *UpstreamCallAckExtensionFields) XXX_DiscardUnknown() {
	xxx_messageInfo_UpstreamCallAckExtensionFields.DiscardUnknown(m)
}

var xxx_messageInfo_UpstreamCallAckExtensionFields proto.InternalMessageInfo

type DownstreamCallExtensionFields struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DownstreamCallExtensionFields) Reset()         { *m = DownstreamCallExtensionFields{} }
func (m *DownstreamCallExtensionFields) String() string { return proto.CompactTextString(m) }
func (*DownstreamCallExtensionFields) ProtoMessage()    {}
func (*DownstreamCallExtensionFields) Descriptor() ([]byte, []int) {
	return fileDescriptor_ec982db740ce99fe, []int{2}
}
func (m *DownstreamCallExtensionFields) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *DownstreamCallExtensionFields) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_DownstreamCallExtensionFields.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *DownstreamCallExtensionFields) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DownstreamCallExtensionFields.Merge(m, src)
}
func (m *DownstreamCallExtensionFields) XXX_Size() int {
	return m.Size()
}
func (m *DownstreamCallExtensionFields) XXX_DiscardUnknown() {
	xxx_messageInfo_DownstreamCallExtensionFields.DiscardUnknown(m)
}

var xxx_messageInfo_DownstreamCallExtensionFields proto.InternalMessageInfo

func init() {
	proto.RegisterType((*UpstreamCallExtensionFields)(nil), "iscp2.v1.extensions.UpstreamCallExtensionFields")
	proto.RegisterType((*UpstreamCallAckExtensionFields)(nil), "iscp2.v1.extensions.UpstreamCallAckExtensionFields")
	proto.RegisterType((*DownstreamCallExtensionFields)(nil), "iscp2.v1.extensions.DownstreamCallExtensionFields")
}

func init() {
	proto.RegisterFile("iscp2/v1/extensions/e2e_call.proto", fileDescriptor_ec982db740ce99fe)
}

var fileDescriptor_ec982db740ce99fe = []byte{
	// 257 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x52, 0xca, 0x2c, 0x4e, 0x2e,
	0x30, 0xd2, 0x2f, 0x33, 0xd4, 0x4f, 0xad, 0x28, 0x49, 0xcd, 0x2b, 0xce, 0xcc, 0xcf, 0x2b, 0xd6,
	0x4f, 0x35, 0x4a, 0x8d, 0x4f, 0x4e, 0xcc, 0xc9, 0xd1, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x12,
	0x06, 0xab, 0xd1, 0x2b, 0x33, 0xd4, 0x43, 0xa8, 0x51, 0x92, 0xe5, 0x92, 0x0e, 0x2d, 0x28, 0x2e,
	0x29, 0x4a, 0x4d, 0xcc, 0x75, 0x4e, 0xcc, 0xc9, 0x71, 0x85, 0xc9, 0xb8, 0x65, 0xa6, 0xe6, 0xa4,
	0x14, 0x2b, 0x29, 0x70, 0xc9, 0x21, 0x4b, 0x3b, 0x26, 0x67, 0xa3, 0xab, 0x90, 0xe7, 0x92, 0x75,
	0xc9, 0x2f, 0xcf, 0xc3, 0x69, 0x84, 0xd3, 0x03, 0xc6, 0x13, 0x8f, 0xe4, 0x18, 0x2f, 0x3c, 0x92,
	0x63, 0x7c, 0xf0, 0x48, 0x8e, 0x91, 0x4b, 0x3c, 0x39, 0x3f, 0x57, 0x0f, 0x8b, 0x4b, 0x9c, 0x78,
	0x5c, 0x8d, 0x52, 0x41, 0xfa, 0x03, 0x40, 0x8e, 0x0d, 0x60, 0x8c, 0xb2, 0x4d, 0xcf, 0x2c, 0xc9,
	0x28, 0x4d, 0xd2, 0x4b, 0xce, 0xcf, 0xd5, 0x4f, 0x2c, 0x28, 0x29, 0xc8, 0x4f, 0xd1, 0x07, 0x69,
	0xd3, 0x05, 0x7b, 0x46, 0x3f, 0x3d, 0x35, 0x4f, 0x3f, 0x3d, 0x3f, 0x3d, 0x3f, 0x2d, 0xb1, 0xb8,
	0x44, 0x1f, 0x8b, 0xe7, 0x17, 0x31, 0x31, 0x7b, 0x86, 0xb9, 0xae, 0x62, 0x12, 0xf6, 0x04, 0x5b,
	0x15, 0x66, 0xa8, 0x07, 0x77, 0x57, 0xf1, 0x29, 0xa8, 0x68, 0x4c, 0x98, 0x61, 0x0c, 0x42, 0xf4,
	0x11, 0x93, 0x3c, 0x16, 0xd1, 0x18, 0xf7, 0x00, 0x27, 0xdf, 0xd4, 0x92, 0xc4, 0x94, 0xc4, 0x92,
	0xc4, 0x57, 0x4c, 0xa2, 0x60, 0x15, 0x56, 0x56, 0x61, 0x86, 0x56, 0x56, 0x08, 0x35, 0x49, 0x6c,
	0x60, 0x37, 0x19, 0x03, 0x02, 0x00, 0x00, 0xff, 0xff, 0xca, 0x88, 0x2f, 0x50, 0x86, 0x01, 0x00,
	0x00,
}

func (m *UpstreamCallExtensionFields) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *UpstreamCallExtensionFields) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *UpstreamCallExtensionFields) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	return len(dAtA) - i, nil
}

func (m *UpstreamCallAckExtensionFields) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *UpstreamCallAckExtensionFields) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *UpstreamCallAckExtensionFields) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	return len(dAtA) - i, nil
}

func (m *DownstreamCallExtensionFields) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *DownstreamCallExtensionFields) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *DownstreamCallExtensionFields) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	return len(dAtA) - i, nil
}

func encodeVarintE2ECall(dAtA []byte, offset int, v uint64) int {
	offset -= sovE2ECall(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *UpstreamCallExtensionFields) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *UpstreamCallAckExtensionFields) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *DownstreamCallExtensionFields) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func sovE2ECall(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozE2ECall(x uint64) (n int) {
	return sovE2ECall(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *UpstreamCallExtensionFields) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowE2ECall
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: UpstreamCallExtensionFields: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: UpstreamCallExtensionFields: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipE2ECall(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthE2ECall
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *UpstreamCallAckExtensionFields) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowE2ECall
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: UpstreamCallAckExtensionFields: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: UpstreamCallAckExtensionFields: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipE2ECall(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthE2ECall
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *DownstreamCallExtensionFields) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowE2ECall
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: DownstreamCallExtensionFields: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: DownstreamCallExtensionFields: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipE2ECall(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthE2ECall
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipE2ECall(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowE2ECall
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowE2ECall
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowE2ECall
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthE2ECall
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupE2ECall
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthE2ECall
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthE2ECall        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowE2ECall          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupE2ECall = fmt.Errorf("proto: unexpected end of group")
)
